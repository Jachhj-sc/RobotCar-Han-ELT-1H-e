
RobotCar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000027e  00800100  00004c9e  00004d32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004c9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000202  0080037e  0080037e  00004fb0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004fb0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004fe0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000021b0  00000000  00000000  00005020  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0004944d  00000000  00000000  000071d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000322b  00000000  00000000  0005061d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000d358  00000000  00000000  00053848  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000c7e0  00000000  00000000  00060ba0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011054  00000000  00000000  0006d380  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0004ed34  00000000  00000000  0007e3d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002138  00000000  00000000  000cd108  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__ctors_end>
       4:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
       8:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
       c:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__vector_3>
      10:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      14:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__vector_5>
      18:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      1c:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      20:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      24:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      28:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      2c:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      30:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      34:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      38:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      3c:	0c 94 40 0b 	jmp	0x1680	; 0x1680 <__vector_15>
      40:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      44:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      48:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      4c:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      50:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      54:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      58:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      5c:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      60:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      64:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__trampolines_end>:
      96:	bf 00       	.word	0x00bf	; ????
      98:	03 02       	muls	r16, r19
      9a:	03 04       	cpc	r0, r3
      9c:	03 05       	cpc	r16, r3
      9e:	04 06       	cpc	r0, r20
      a0:	0a 00       	.word	0x000a	; ????
      a2:	fe 07       	cpc	r31, r30
      a4:	fe 07       	cpc	r31, r30
      a6:	00 01       	movw	r0, r0
      a8:	42 02       	muls	r20, r18
      aa:	88 07       	cpc	r24, r24
      ac:	c4 20       	and	r12, r4
      ae:	05 00       	.word	0x0005	; ????
      b0:	62 07       	cpc	r22, r18
      b2:	21 07       	cpc	r18, r17
      b4:	39 43       	sbci	r19, 0x39	; 57
      b6:	c7 a0       	ldd	r12, Z+39	; 0x27
      b8:	04 22       	and	r0, r20
      ba:	07 9b       	sbis	0x00, 7	; 0
      bc:	52 47       	sbci	r21, 0x72	; 114
      be:	62 09       	sbc	r22, r2
      c0:	23 0e       	add	r2, r19
      c2:	3d 42       	sbci	r19, 0x2D	; 45
      c4:	4f 29       	or	r20, r15
      c6:	49 06       	cpc	r4, r25
      c8:	a5 32       	cpi	r26, 0x25	; 37
      ca:	28 a5       	ldd	r18, Y+40	; 0x28
      cc:	24 01       	movw	r4, r8
      ce:	24 0c       	add	r2, r4
      d0:	3d 42       	sbci	r19, 0x2D	; 45
      d2:	57 b6       	in	r5, 0x37	; 55
      d4:	d4 b6       	in	r13, 0x34	; 52
      d6:	24 d9       	rcall	.-3512   	; 0xfffff320 <__eeprom_end+0xff7ef320>
      d8:	22 00       	.word	0x0022	; ????
      da:	25 0c       	add	r2, r5
      dc:	3d 42       	sbci	r19, 0x2D	; 45
      de:	4f a4       	ldd	r4, Y+47	; 0x2f
      e0:	74 ab       	std	Z+52, r23	; 0x34
      e2:	b4 48       	sbci	r27, 0x84	; 132
      e4:	09 00       	.word	0x0009	; ????
      e6:	26 0d       	add	r18, r6
      e8:	3d 42       	sbci	r19, 0x2D	; 45
      ea:	4f 96       	adiw	r24, 0x1f	; 31
      ec:	44 49       	sbci	r20, 0x94	; 148
      ee:	56 49       	sbci	r21, 0x96	; 150
      f0:	a4 48       	sbci	r26, 0x84	; 132
      f2:	09 27       	eor	r16, r25
      f4:	06 19       	sub	r16, r6
      f6:	53 c7       	rjmp	.+3750   	; 0xf9e <sendTriggPulse+0x24>
      f8:	00 28       	or	r0, r0
      fa:	08 bb       	out	0x18, r16	; 24
      fc:	42 57       	subi	r20, 0x72	; 114
      fe:	52 aa       	std	Z+50, r5	; 0x32
     100:	15 29       	or	r17, r5
     102:	09 bb       	out	0x19, r16	; 25
     104:	42 47       	sbci	r20, 0x72	; 114
     106:	56 aa       	std	Z+54, r5	; 0x36
     108:	94 00       	.word	0x0094	; ????
     10a:	2a 0a       	sbc	r2, r26
     10c:	2d 46       	sbci	r18, 0x6D	; 109
     10e:	47 96       	adiw	r24, 0x17	; 23
     110:	54 06       	cpc	r5, r20
     112:	a5 2d       	mov	r26, r5
     114:	2b 0a       	sbc	r2, r27
     116:	2d 46       	sbci	r18, 0x6D	; 109
     118:	57 18       	sub	r5, r7
     11a:	0d 52       	subi	r16, 0x2D	; 45
     11c:	18 01       	movw	r2, r16
     11e:	2c 07       	cpc	r18, r28
     120:	9b 3e       	cpi	r25, 0xEB	; 235
     122:	8f 52       	subi	r24, 0x2F	; 47
     124:	02 2d       	mov	r16, r2
     126:	06 0d       	add	r16, r6
     128:	4e c7       	rjmp	.+3740   	; 0xfc6 <angleCalculator+0x14>
     12a:	20 2e       	mov	r2, r16
     12c:	08 9b       	sbis	0x01, 0	; 1
     12e:	3e 4f       	sbci	r19, 0xFE	; 254
     130:	b2 24       	eor	r11, r2
     132:	00 2f       	mov	r16, r16
     134:	08 3d       	cpi	r16, 0xD8	; 216
     136:	42 67       	ori	r20, 0x72	; 114
     138:	ad 63       	ori	r26, 0x3D	; 61
     13a:	08 30       	cpi	r16, 0x08	; 8
     13c:	0b 3d       	cpi	r16, 0xDB	; 219
     13e:	42 57       	subi	r20, 0x72	; 114
     140:	96 d4       	rcall	.+2348   	; 0xa6e <__stack+0x16f>
     142:	6c 49       	sbci	r22, 0x9C	; 156
     144:	2d 02       	muls	r18, r29
     146:	31 0a       	sbc	r3, r17
     148:	3d 42       	sbci	r19, 0x2D	; 45
     14a:	57 26       	eor	r5, r23
     14c:	25 61       	ori	r18, 0x15	; 21
     14e:	d3 20       	and	r13, r3
     150:	32 0c       	add	r3, r2
     152:	3d 42       	sbci	r19, 0x2D	; 45
     154:	cf 92       	push	r12
     156:	85 91       	lpm	r24, Z+
     158:	94 85       	ldd	r25, Z+12	; 0x0c
     15a:	83 00       	.word	0x0083	; ????
     15c:	33 0c       	add	r3, r3
     15e:	3d 42       	sbci	r19, 0x2D	; 45
     160:	c7 20       	and	r12, r7
     162:	66 99       	sbic	0x0c, 6	; 12
     164:	aa 25       	eor	r26, r10
     166:	0b 00       	.word	0x000b	; ????
     168:	34 0c       	add	r3, r4
     16a:	3d 42       	sbci	r19, 0x2D	; 45
     16c:	5f 26       	eor	r5, r31
     16e:	25 a5       	ldd	r18, Z+45	; 0x2d
     170:	64 d0       	rcall	.+200    	; 0x23a <__trampolines_end+0x1a4>
     172:	c2 04       	cpc	r12, r2
     174:	35 0b       	sbc	r19, r21
     176:	3d 42       	sbci	r19, 0x2D	; 45
     178:	c7 31       	cpi	r28, 0x17	; 23
     17a:	31 85       	ldd	r19, Z+9	; 0x09
     17c:	5a b2       	in	r5, 0x1a	; 26
     17e:	00 36       	cpi	r16, 0x60	; 96
     180:	0c 3d       	cpi	r16, 0xDC	; 220
     182:	42 97       	sbiw	r24, 0x12	; 18
     184:	94 85       	ldd	r25, Z+12	; 0x0c
     186:	89 49       	sbci	r24, 0x99	; 153
     188:	4b 16       	cp	r4, r27
     18a:	00 37       	cpi	r16, 0x70	; 112
     18c:	0b 3d       	cpi	r16, 0xDB	; 219
     18e:	42 c7       	rjmp	.+3716   	; 0x1014 <angleCalculator+0x62>
     190:	20 66       	ori	r18, 0x60	; 96
     192:	61 56       	subi	r22, 0x61	; 97
     194:	cc 00       	.word	0x00cc	; ????
     196:	38 0c       	add	r3, r8
     198:	3d 42       	sbci	r19, 0x2D	; 45
     19a:	cf 92       	push	r12
     19c:	69 c9       	rjmp	.-3374   	; 0xfffff470 <__eeprom_end+0xff7ef470>
     19e:	92 69       	ori	r25, 0x92	; 146
     1a0:	c9 02       	muls	r28, r25
     1a2:	39 0c       	add	r3, r9
     1a4:	3d 42       	sbci	r19, 0x2D	; 45
     1a6:	cf 92       	push	r12
     1a8:	49 8a       	std	Y+17, r4	; 0x11
     1aa:	12 66       	ori	r17, 0x62	; 98
     1ac:	91 04       	cpc	r9, r1
     1ae:	3a 0a       	sbc	r3, r26
     1b0:	bb 3e       	cpi	r27, 0xEB	; 235
     1b2:	4f b2       	in	r4, 0x1f	; 31
     1b4:	a4 c9       	rjmp	.-3256   	; 0xfffff4fe <__eeprom_end+0xff7ef4fe>
     1b6:	92 00       	.word	0x0092	; ????
     1b8:	3b 09       	sbc	r19, r11
     1ba:	bb 3e       	cpi	r27, 0xEB	; 235
     1bc:	4f b2       	in	r4, 0x1f	; 31
     1be:	a4 4a       	sbci	r26, 0xA4	; 164
     1c0:	09 3c       	cpi	r16, 0xC9	; 201
     1c2:	08 bc       	out	0x28, r0	; 40
     1c4:	42 5f       	subi	r20, 0xF2	; 242
     1c6:	d4 d8       	rcall	.-3672   	; 0xfffff370 <__eeprom_end+0xff7ef370>
     1c8:	00 3d       	cpi	r16, 0xD0	; 208
     1ca:	08 1d       	adc	r16, r8
     1cc:	4a c7       	rjmp	.+3732   	; 0x1062 <angleCalculator+0xb0>
     1ce:	a0 0e       	add	r10, r16
     1d0:	02 3e       	cpi	r16, 0xE2	; 226
     1d2:	08 bc       	out	0x28, r0	; 40
     1d4:	42 47       	sbci	r20, 0x72	; 114
     1d6:	d8 d4       	rcall	.+2480   	; 0xb88 <__stack+0x289>
     1d8:	06 3f       	cpi	r16, 0xF6	; 246
     1da:	0a 3d       	cpi	r16, 0xDA	; 218
     1dc:	42 cf       	rjmp	.-380    	; 0x62 <__SREG__+0x23>
     1de:	92 35       	cpi	r25, 0x52	; 82
     1e0:	e6 50       	subi	r30, 0x06	; 6
     1e2:	04 40       	sbci	r16, 0x04	; 4
     1e4:	0c 3d       	cpi	r16, 0xDC	; 220
     1e6:	42 cf       	rjmp	.-380    	; 0x6c <__SREG__+0x2d>
     1e8:	92 49       	sbci	r25, 0x92	; 146
     1ea:	4b 62       	ori	r20, 0x2B	; 43
     1ec:	49 17       	cp	r20, r25
     1ee:	00 41       	sbci	r16, 0x10	; 16
     1f0:	0c 3d       	cpi	r16, 0xDC	; 220
     1f2:	42 57       	subi	r20, 0x72	; 114
     1f4:	96 d4       	rcall	.+2348   	; 0xb22 <__stack+0x223>
     1f6:	b4 61       	ori	r27, 0x14	; 20
     1f8:	c8 b4       	in	r12, 0x28	; 40
     1fa:	00 42       	sbci	r16, 0x20	; 32
     1fc:	0d 3d       	cpi	r16, 0xDD	; 221
     1fe:	42 c7       	rjmp	.+3716   	; 0x1084 <angleCalculator+0xd2>
     200:	10 55       	subi	r17, 0x50	; 80
     202:	a2 64       	ori	r26, 0x42	; 66
     204:	aa 44       	sbci	r26, 0x4A	; 74
     206:	83 02       	muls	r24, r19
     208:	43 0a       	sbc	r4, r19
     20a:	3d 42       	sbci	r19, 0x2D	; 45
     20c:	cf 92       	push	r12
     20e:	89 6d       	ori	r24, 0xD9	; 217
     210:	c9 02       	muls	r28, r25
     212:	44 0f       	add	r20, r20
     214:	3d 42       	sbci	r19, 0x2D	; 45
     216:	c7 10       	cpse	r12, r7
     218:	55 a2       	std	Z+37, r5	; 0x25
     21a:	24 4a       	sbci	r18, 0xA4	; 164
     21c:	a2 24       	eor	r10, r2
     21e:	1a 14       	cp	r1, r10
     220:	00 45       	sbci	r16, 0x50	; 80
     222:	0b 3d       	cpi	r16, 0xDB	; 219
     224:	42 c7       	rjmp	.+3716   	; 0x10aa <angleCalculator+0xf8>
     226:	31 1c       	adc	r3, r1
     228:	92 30       	cpi	r25, 0x02	; 2
     22a:	1c 04       	cpc	r1, r12
     22c:	46 0a       	sbc	r4, r22
     22e:	3d 42       	sbci	r19, 0x2D	; 45
     230:	c7 31       	cpi	r28, 0x17	; 23
     232:	1c 92       	st	X, r1
     234:	b0 08       	sbc	r11, r0
     236:	47 0b       	sbc	r20, r23
     238:	3d 42       	sbci	r19, 0x2D	; 45
     23a:	cf 92       	push	r12
     23c:	89 a5       	ldd	r24, Y+41	; 0x29
     23e:	2d 59       	subi	r18, 0x9D	; 157
     240:	00 48       	sbci	r16, 0x80	; 128
     242:	0a 3d       	cpi	r16, 0xDA	; 218
     244:	42 47       	sbci	r20, 0x72	; 114
     246:	66 1b       	sub	r22, r22
     248:	86 cc       	rjmp	.-1780   	; 0xfffffb56 <__eeprom_end+0xff7efb56>
     24a:	16 49       	sbci	r17, 0x96	; 150
     24c:	08 bb       	out	0x18, r16	; 24
     24e:	42 c7       	rjmp	.+3716   	; 0x10d4 <angleCalculator+0x122>
     250:	12 75       	andi	r17, 0x52	; 82
     252:	19 4a       	sbci	r17, 0xA9	; 169
     254:	0a 3d       	cpi	r16, 0xDA	; 218
     256:	42 d7       	rcall	.+3716   	; 0x10dc <angleCalculator+0x12a>
     258:	16 b6       	in	r1, 0x36	; 54
     25a:	44 91       	lpm	r20, Z
     25c:	04 4b       	sbci	r16, 0xB4	; 180
     25e:	0d 3d       	cpi	r16, 0xDD	; 221
     260:	42 47       	sbci	r20, 0x72	; 114
     262:	26 25       	eor	r18, r6
     264:	25 2d       	mov	r18, r5
     266:	89 2a       	or	r8, r25
     268:	59 00       	.word	0x0059	; ????
     26a:	4c 08       	sbc	r4, r12
     26c:	3d 42       	sbci	r19, 0x2D	; 45
     26e:	47 d8       	rcall	.-3954   	; 0xfffff2fe <__eeprom_end+0xff7ef2fe>
     270:	e3 20       	and	r14, r3
     272:	4d 0b       	sbc	r20, r29
     274:	3d 42       	sbci	r19, 0x2D	; 45
     276:	47 a6       	std	Z+47, r4	; 0x2f
     278:	2d 4b       	sbci	r18, 0xBD	; 189
     27a:	a2 d9       	rcall	.-3260   	; 0xfffff5c0 <__eeprom_end+0xff7ef5c0>
     27c:	02 4e       	sbci	r16, 0xE2	; 226
     27e:	0c 3d       	cpi	r16, 0xDC	; 220
     280:	42 47       	sbci	r20, 0x72	; 114
     282:	a6 4d       	sbci	r26, 0xD6	; 214
     284:	4a 22       	and	r4, r26
     286:	6d 5a       	subi	r22, 0xAD	; 173
     288:	00 4f       	sbci	r16, 0xF0	; 240
     28a:	0a 3d       	cpi	r16, 0xDA	; 218
     28c:	42 cf       	rjmp	.-380    	; 0x112 <__trampolines_end+0x7c>
     28e:	92 79       	andi	r25, 0x92	; 146
     290:	4b 16       	cp	r4, r27
     292:	00 50       	subi	r16, 0x00	; 0
     294:	0c 3d       	cpi	r16, 0xDC	; 220
     296:	42 c7       	rjmp	.+3716   	; 0x111c <angleCalculator+0x16a>
     298:	90 64       	ori	r25, 0x40	; 64
     29a:	da a0       	ldd	r13, Y+34	; 0x22
     29c:	84 45       	sbci	r24, 0x54	; 84
     29e:	00 51       	subi	r16, 0x10	; 16
     2a0:	0a 45       	sbci	r16, 0x5A	; 90
     2a2:	3e cf       	rjmp	.-388    	; 0x120 <__trampolines_end+0x8a>
     2a4:	92 79       	andi	r25, 0x92	; 146
     2a6:	a9 ac       	ldd	r10, Y+57	; 0x39
     2a8:	01 52       	subi	r16, 0x21	; 33
     2aa:	0d 3d       	cpi	r16, 0xDD	; 221
     2ac:	42 c7       	rjmp	.+3716   	; 0x1132 <angleCalculator+0x180>
     2ae:	90 64       	ori	r25, 0x40	; 64
     2b0:	da a0       	ldd	r13, Y+34	; 0x22
     2b2:	94 2a       	or	r9, r20
     2b4:	59 00       	.word	0x0059	; ????
     2b6:	53 0b       	sbc	r21, r19
     2b8:	3d 42       	sbci	r19, 0x2D	; 45
     2ba:	cf 92       	push	r12
     2bc:	a9 ab       	std	Y+49, r26	; 0x31
     2be:	96 2c       	mov	r9, r6
     2c0:	00 54       	subi	r16, 0x40	; 64
     2c2:	09 3d       	cpi	r16, 0xD9	; 217
     2c4:	42 c7       	rjmp	.+3716   	; 0x114a <angleCalculator+0x198>
     2c6:	20 85       	ldd	r18, Z+8	; 0x08
     2c8:	3d 01       	movw	r6, r26
     2ca:	55 09       	sbc	r21, r5
     2cc:	3d 42       	sbci	r19, 0x2D	; 45
     2ce:	47 e6       	ldi	r20, 0x67	; 103
     2d0:	5b b2       	in	r5, 0x1b	; 27
     2d2:	00 56       	subi	r16, 0x60	; 96
     2d4:	0d 3d       	cpi	r16, 0xDD	; 221
     2d6:	42 47       	sbci	r20, 0x72	; 114
     2d8:	66 4b       	sbci	r22, 0xB6	; 182
     2da:	4a 49       	sbci	r20, 0x9A	; 154
     2dc:	94 64       	ori	r25, 0x44	; 68
     2de:	11 00       	.word	0x0011	; ????
     2e0:	57 0a       	sbc	r5, r23
     2e2:	3d 42       	sbci	r19, 0x2D	; 45
     2e4:	47 e6       	ldi	r20, 0x67	; 103
     2e6:	92 28       	or	r9, r2
     2e8:	c9 2d       	mov	r28, r9
     2ea:	58 0b       	sbc	r21, r24
     2ec:	3d 42       	sbci	r19, 0x2D	; 45
     2ee:	47 a6       	std	Z+47, r4	; 0x2f
     2f0:	25 b5       	in	r18, 0x25	; 37
     2f2:	4a 4d       	sbci	r20, 0xDA	; 218
     2f4:	0b 59       	subi	r16, 0x9B	; 155
     2f6:	0a 3d       	cpi	r16, 0xDA	; 218
     2f8:	42 47       	sbci	r20, 0x72	; 114
     2fa:	a6 25       	eor	r26, r6
     2fc:	b5 b0       	in	r11, 0x05	; 5
     2fe:	09 5a       	subi	r16, 0xA9	; 169
     300:	0a 3d       	cpi	r16, 0xDA	; 218
     302:	42 c7       	rjmp	.+3716   	; 0x1188 <__vector_3+0x26>
     304:	20 66       	ori	r18, 0x60	; 96
     306:	1d 07       	cpc	r17, r29
     308:	01 5b       	subi	r16, 0xB1	; 177
     30a:	08 bb       	out	0x18, r16	; 24
     30c:	42 c7       	rjmp	.+3716   	; 0x1192 <__vector_3+0x30>
     30e:	10 75       	andi	r17, 0x50	; 80
     310:	1a 5c       	subi	r17, 0xCA	; 202
     312:	08 3d       	cpi	r16, 0xD8	; 216
     314:	42 47       	sbci	r20, 0x72	; 114
     316:	98 76       	andi	r25, 0x68	; 104
     318:	0c 5d       	subi	r16, 0xDC	; 220
     31a:	08 bb       	out	0x18, r16	; 24
     31c:	42 c7       	rjmp	.+3716   	; 0x11a2 <__vector_3+0x40>
     31e:	d4 69       	ori	r29, 0x94	; 148
     320:	08 5e       	subi	r16, 0xE8	; 232
     322:	08 1d       	adc	r16, r8
     324:	52 57       	subi	r21, 0x72	; 114
     326:	96 d4       	rcall	.+2348   	; 0xc54 <__stack+0x355>
     328:	02 5f       	subi	r16, 0xF2	; 242
     32a:	06 0d       	add	r16, r6
     32c:	3e c7       	rjmp	.+3708   	; 0x11aa <__vector_3+0x48>
     32e:	20 60       	ori	r18, 0x00	; 0
     330:	06 12       	cpse	r0, r22
     332:	5b 47       	sbci	r21, 0x7B	; 123
     334:	14 61       	ori	r17, 0x14	; 20
     336:	0a 2d       	mov	r16, r10
     338:	42 cf       	rjmp	.-380    	; 0x1be <__trampolines_end+0x128>
     33a:	9a 0c       	add	r9, r10
     33c:	5a 32       	cpi	r21, 0x2A	; 42
     33e:	04 62       	ori	r16, 0x24	; 36
     340:	0b 3d       	cpi	r16, 0xDB	; 219
     342:	42 47       	sbci	r20, 0x72	; 114
     344:	58 31       	cpi	r21, 0x18	; 24
     346:	69 93       	st	Y+, r22
     348:	a2 00       	.word	0x00a2	; ????
     34a:	63 0a       	sbc	r6, r19
     34c:	2d 42       	sbci	r18, 0x2D	; 45
     34e:	cf 92       	push	r12
     350:	89 59       	subi	r24, 0x99	; 153
     352:	b2 00       	.word	0x00b2	; ????
     354:	64 0a       	sbc	r6, r20
     356:	3d 42       	sbci	r19, 0x2D	; 45
     358:	67 c5       	rjmp	.+2766   	; 0xe28 <__stack+0x529>
     35a:	b4 49       	sbci	r27, 0x94	; 148
     35c:	8a 12       	cpse	r8, r26
     35e:	65 0a       	sbc	r6, r21
     360:	2d 42       	sbci	r18, 0x2D	; 45
     362:	cf 92       	push	r12
     364:	0d 43       	sbci	r16, 0x3D	; 61
     366:	ba 00       	.word	0x00ba	; ????
     368:	66 0b       	sbc	r22, r22
     36a:	3d 42       	sbci	r19, 0x2D	; 45
     36c:	97 54       	subi	r25, 0x47	; 71
     36e:	c9 86       	std	Y+9, r12	; 0x09
     370:	28 ac       	ldd	r2, Y+56	; 0x38
     372:	01 67       	ori	r16, 0x71	; 113
     374:	0c 3d       	cpi	r16, 0xDC	; 220
     376:	3a cf       	rjmp	.-396    	; 0x1ec <__trampolines_end+0x156>
     378:	a0 69       	ori	r26, 0x90	; 144
     37a:	c9 10       	cpse	r12, r9
     37c:	6a c9       	rjmp	.-3372   	; 0xfffff652 <__eeprom_end+0xff7ef652>
     37e:	02 68       	ori	r16, 0x82	; 130
     380:	0a 3d       	cpi	r16, 0xDA	; 218
     382:	42 47       	sbci	r20, 0x72	; 114
     384:	58 31       	cpi	r21, 0x18	; 24
     386:	69 b6       	in	r6, 0x39	; 57
     388:	00 69       	ori	r16, 0x90	; 144
     38a:	08 bb       	out	0x18, r16	; 24
     38c:	42 4f       	sbci	r20, 0xF2	; 242
     38e:	28 b5       	in	r18, 0x28	; 40
     390:	0c 6a       	ori	r16, 0xAC	; 172
     392:	0b cc       	rjmp	.-2026   	; 0xfffffbaa <__eeprom_end+0xff7efbaa>
     394:	3a 5f       	subi	r19, 0xFA	; 250
     396:	ac d5       	rcall	.+2904   	; 0xef0 <__stack+0x5f1>
     398:	24 29       	or	r18, r4
     39a:	51 00       	.word	0x0051	; ????
     39c:	6b 0b       	sbc	r22, r27
     39e:	3d 42       	sbci	r19, 0x2D	; 45
     3a0:	47 58       	subi	r20, 0x87	; 135
     3a2:	93 92       	.word	0x9293	; ????
     3a4:	a9 92       	st	Y+, r10
     3a6:	05 6c       	ori	r16, 0xC5	; 197
     3a8:	08 bb       	out	0x18, r16	; 24
     3aa:	42 87       	std	Z+10, r20	; 0x0a
     3ac:	d4 cb       	rjmp	.-2136   	; 0xfffffb56 <__eeprom_end+0xff7efb56>
     3ae:	00 6d       	ori	r16, 0xD0	; 208
     3b0:	0b 2d       	mov	r16, r11
     3b2:	42 87       	std	Z+10, r20	; 0x0a
     3b4:	d2 a2       	std	Z+34, r13	; 0x22
     3b6:	24 4a       	sbci	r18, 0xA4	; 164
     3b8:	a2 05       	cpc	r26, r2
     3ba:	6e 09       	sbc	r22, r14
     3bc:	2d 42       	sbci	r18, 0x2D	; 45
     3be:	47 62       	ori	r20, 0x27	; 39
     3c0:	d2 6c       	ori	r29, 0xC2	; 194
     3c2:	01 6f       	ori	r16, 0xF1	; 241
     3c4:	09 2d       	mov	r16, r9
     3c6:	42 cf       	rjmp	.-380    	; 0x24c <__trampolines_end+0x1b6>
     3c8:	92 d9       	rcall	.-3292   	; 0xfffff6ee <__eeprom_end+0xff7ef6ee>
     3ca:	92 05       	cpc	r25, r2
     3cc:	70 0c       	add	r7, r0
     3ce:	3d 3a       	cpi	r19, 0xAD	; 173
     3d0:	47 62       	ori	r20, 0x27	; 39
     3d2:	d2 26       	eor	r13, r18
     3d4:	45 09       	sbc	r20, r5
     3d6:	43 00       	.word	0x0043	; ????
     3d8:	71 0a       	sbc	r7, r17
     3da:	3d 3a       	cpi	r19, 0xAD	; 173
     3dc:	8f 69       	ori	r24, 0x9F	; 159
     3de:	93 14       	cp	r9, r3
     3e0:	25 2c       	mov	r2, r5
     3e2:	72 09       	sbc	r23, r2
     3e4:	2d 42       	sbci	r18, 0x2D	; 45
     3e6:	47 62       	ori	r20, 0x27	; 39
     3e8:	12 8b       	std	Z+18, r17	; 0x12
     3ea:	00 73       	andi	r16, 0x30	; 48
     3ec:	09 2d       	mov	r16, r9
     3ee:	42 cf       	rjmp	.-380    	; 0x274 <__trampolines_end+0x1de>
     3f0:	92 1e       	adc	r9, r18
     3f2:	14 00       	.word	0x0014	; ????
     3f4:	74 0c       	add	r7, r4
     3f6:	3d 42       	sbci	r19, 0x2D	; 45
     3f8:	4f 98       	cbi	0x09, 7	; 9
     3fa:	0d 51       	subi	r16, 0x1D	; 29
     3fc:	58 8a       	std	Y+16, r5	; 0x10
     3fe:	14 00       	.word	0x0014	; ????
     400:	75 09       	sbc	r23, r5
     402:	2d 42       	sbci	r18, 0x2D	; 45
     404:	47 e6       	ldi	r20, 0x67	; 103
     406:	a4 28       	or	r10, r4
     408:	01 76       	andi	r16, 0x61	; 97
     40a:	0b 2d       	mov	r16, r11
     40c:	42 47       	sbci	r20, 0x72	; 114
     40e:	a6 25       	eor	r26, r6
     410:	a5 24       	eor	r10, r5
     412:	8b 00       	.word	0x008b	; ????
     414:	77 0a       	sbc	r7, r23
     416:	2d 42       	sbci	r18, 0x2D	; 45
     418:	47 66       	ori	r20, 0x67	; 103
     41a:	49 94       	.word	0x9449	; ????
     41c:	2e 00       	.word	0x002e	; ????
     41e:	78 0a       	sbc	r7, r24
     420:	2d 42       	sbci	r18, 0x2D	; 45
     422:	47 96       	adiw	r24, 0x17	; 23
     424:	d4 2a       	or	r13, r20
     426:	b5 00       	.word	0x00b5	; ????
     428:	79 0c       	add	r7, r9
     42a:	3d 3a       	cpi	r19, 0xAD	; 173
     42c:	47 66       	ori	r20, 0x67	; 103
     42e:	52 94       	swap	r5
     430:	50 4b       	sbci	r21, 0xB0	; 176
     432:	16 00       	.word	0x0016	; ????
     434:	7a 09       	sbc	r23, r10
     436:	2d 42       	sbci	r18, 0x2D	; 45
     438:	c7 a0       	ldd	r12, Z+39	; 0x27
     43a:	b5 0d       	add	r27, r5
     43c:	02 7b       	andi	r16, 0xB2	; 178
     43e:	0a bc       	out	0x2a, r0	; 42
     440:	42 97       	sbiw	r24, 0x12	; 18
     442:	12 26       	eor	r1, r18
     444:	62 14       	cp	r6, r2
     446:	0a 7c       	andi	r16, 0xCA	; 202
     448:	06 39       	cpi	r16, 0x96	; 150
     44a:	43 c7       	rjmp	.+3718   	; 0x12d2 <__vector_3+0x170>
     44c:	21 7d       	andi	r18, 0xD1	; 209
     44e:	0b bc       	out	0x2b, r0	; 43
     450:	42 87       	std	Z+10, r20	; 0x0a
     452:	18 85       	ldd	r17, Y+8	; 0x08
     454:	4a 98       	cbi	0x09, 2	; 9
     456:	48 00       	.word	0x0048	; ????
     458:	7e 09       	sbc	r23, r14
     45a:	1d 52       	subi	r17, 0x2D	; 45
     45c:	4f a4       	ldd	r4, Y+47	; 0x2f
     45e:	24 52       	subi	r18, 0x24	; 36
     460:	02 a0       	ldd	r0, Z+34	; 0x22
     462:	05 00       	.word	0x0005	; ????
     464:	62 07       	cpc	r22, r18
     466:	a1 07       	cpc	r26, r17
     468:	39 43       	sbci	r19, 0x39	; 57
     46a:	47 32       	cpi	r20, 0x27	; 39
     46c:	08 a2       	std	Y+32, r0	; 0x20
     46e:	0e 3d       	cpi	r16, 0xDE	; 222
     470:	3e 57       	subi	r19, 0x7E	; 126
     472:	36 28       	or	r3, r6
     474:	51 12       	cpse	r5, r17
     476:	25 d9       	rcall	.-3510   	; 0xfffff6c2 <__eeprom_end+0xff7ef6c2>
     478:	10 45       	sbci	r17, 0x50	; 80
     47a:	00 a3       	std	Z+32, r16	; 0x20
     47c:	0c 3d       	cpi	r16, 0xDC	; 220
     47e:	42 97       	sbiw	r24, 0x12	; 18
     480:	54 c9       	rjmp	.-3416   	; 0xfffff72a <__eeprom_end+0xff7ef72a>
     482:	b6 30       	cpi	r27, 0x06	; 6
     484:	52 14       	cp	r5, r2
     486:	00 a4       	ldd	r0, Z+40	; 0x28
     488:	0b 2d       	mov	r16, r11
     48a:	42 47       	sbci	r20, 0x72	; 114
     48c:	96 4c       	sbci	r25, 0xC6	; 198
     48e:	49 b4       	in	r4, 0x29	; 41
     490:	64 01       	movw	r12, r8
     492:	a5 0d       	add	r26, r5
     494:	45 3e       	cpi	r20, 0xE5	; 229
     496:	47 a6       	std	Z+47, r4	; 0x2f
     498:	25 b5       	in	r18, 0x25	; 37
     49a:	68 90       	.word	0x9068	; ????
     49c:	c2 12       	cpse	r12, r18
     49e:	00 a6       	std	Z+40, r0	; 0x28
     4a0:	06 39       	cpi	r16, 0x96	; 150
     4a2:	43 c7       	rjmp	.+3718   	; 0x132a <__vector_3+0x1c8>
     4a4:	32 a7       	std	Z+42, r19	; 0x2a
     4a6:	0b 45       	sbci	r16, 0x5B	; 91
     4a8:	3e cf       	rjmp	.-388    	; 0x326 <__trampolines_end+0x290>
     4aa:	12 4e       	sbci	r17, 0xE2	; 226
     4ac:	9d c6       	rjmp	.+3386   	; 0x11e8 <__vector_3+0x86>
     4ae:	64 01       	movw	r12, r8
     4b0:	a8 06       	cpc	r10, r24
     4b2:	8b 5e       	subi	r24, 0xEB	; 235
     4b4:	47 12       	cpse	r4, r23
     4b6:	a9 0d       	add	r26, r9
     4b8:	3d 42       	sbci	r19, 0x2D	; 45
     4ba:	cf 92       	push	r12
     4bc:	29 c9       	rjmp	.-3502   	; 0xfffff710 <__eeprom_end+0xff7ef710>
     4be:	a4 24       	eor	r10, r4
     4c0:	5a b2       	in	r5, 0x1a	; 26
     4c2:	00 aa       	std	Z+48, r0	; 0x30
     4c4:	0a b4       	in	r0, 0x2a	; 42
     4c6:	46 cf       	rjmp	.-372    	; 0x354 <__trampolines_end+0x2be>
     4c8:	10 29       	or	r17, r0
     4ca:	4a 71       	andi	r20, 0x1A	; 26
     4cc:	08 ab       	std	Y+48, r16	; 0x30
     4ce:	0c 2e       	mov	r0, r28
     4d0:	42 57       	subi	r20, 0x72	; 114
     4d2:	25 4a       	sbci	r18, 0xA5	; 165
     4d4:	a2 2c       	mov	r10, r2
     4d6:	ca a2       	std	Y+34, r12	; 0x22
     4d8:	00 ac       	ldd	r0, Z+56	; 0x38
     4da:	07 94       	ror	r0
     4dc:	4a c7       	rjmp	.+3732   	; 0x1372 <__vector_3+0x210>
     4de:	90 05       	cpc	r25, r0
     4e0:	ad 06       	cpc	r10, r29
     4e2:	8c 4e       	sbci	r24, 0xEC	; 236
     4e4:	c7 10       	cpse	r12, r7
     4e6:	ae 0c       	add	r10, r14
     4e8:	3d 42       	sbci	r19, 0x2D	; 45
     4ea:	cf 92       	push	r12
     4ec:	0d c9       	rjmp	.-3558   	; 0xfffff708 <__eeprom_end+0xff7ef708>
     4ee:	34 69       	ori	r19, 0x94	; 148
     4f0:	c9 02       	muls	r28, r25
     4f2:	af 06       	cpc	r10, r31
     4f4:	0d 5e       	subi	r16, 0xED	; 237
     4f6:	c7 20       	and	r12, r7
     4f8:	b0 07       	cpc	r27, r16
     4fa:	9b 52       	subi	r25, 0x2B	; 43
     4fc:	4f 17       	cp	r20, r31
     4fe:	00 b1       	in	r16, 0x00	; 0
     500:	0b 35       	cpi	r16, 0x5B	; 91
     502:	42 57       	subi	r20, 0x72	; 114
     504:	18 0d       	add	r17, r8
     506:	52 18       	sub	r5, r2
     508:	0d 02       	muls	r16, r29
     50a:	b2 09       	sbc	r27, r2
     50c:	ac 4e       	sbci	r26, 0xEC	; 236
     50e:	8f 12       	cpse	r8, r31
     510:	35 0d       	add	r19, r5
     512:	01 b3       	in	r16, 0x11	; 17
     514:	09 ac       	ldd	r0, Y+57	; 0x39
     516:	4e c7       	rjmp	.+3740   	; 0x13b4 <__vector_3+0x252>
     518:	98 88       	ldd	r9, Y+16	; 0x10
     51a:	43 02       	muls	r20, r19
     51c:	b4 06       	cpc	r11, r20
     51e:	12 5b       	subi	r17, 0xB2	; 178
     520:	8f 02       	muls	r24, r31
     522:	b5 0a       	sbc	r11, r21
     524:	35 3e       	cpi	r19, 0xE5	; 229
     526:	47 66       	ori	r20, 0x67	; 103
     528:	9b 14       	cp	r9, r11
     52a:	25 04       	cpc	r2, r5
     52c:	b6 0f       	add	r27, r22
     52e:	3d 42       	sbci	r19, 0x2D	; 45
     530:	cf 30       	cpi	r28, 0x0F	; 15
     532:	24 43       	sbci	r18, 0x34	; 52
     534:	92 28       	or	r9, r2
     536:	51 12       	cpse	r5, r17
     538:	25 51       	subi	r18, 0x15	; 21
     53a:	12 b7       	in	r17, 0x32	; 50
     53c:	06 09       	sbc	r16, r6
     53e:	4f 47       	sbci	r20, 0x7F	; 127
     540:	00 b8       	out	0x00, r0	; 0
     542:	06 12       	cpse	r0, r22
     544:	3b 8f       	std	Y+27, r19	; 0x1b
     546:	02 b9       	out	0x02, r16	; 2
     548:	08 ab       	std	Y+48, r16	; 0x30
     54a:	4e 4f       	sbci	r20, 0xFE	; 254
     54c:	22 55       	subi	r18, 0x52	; 82
     54e:	06 ba       	out	0x16, r0	; 22
     550:	0a b4       	in	r0, 0x2a	; 42
     552:	46 8f       	std	Z+30, r20	; 0x1e
     554:	12 49       	sbci	r17, 0x92	; 146
     556:	89 3a       	cpi	r24, 0xA9	; 169
     558:	04 bb       	out	0x14, r16	; 20
     55a:	0d 2e       	mov	r0, r29
     55c:	42 47       	sbci	r20, 0x72	; 114
     55e:	94 45       	sbci	r25, 0x54	; 84
     560:	59 94       	.word	0x9459	; ????
     562:	44 49       	sbci	r20, 0x94	; 148
     564:	14 01       	movw	r2, r8
     566:	bc 0d       	add	r27, r12
     568:	4e 3e       	cpi	r20, 0xEE	; 238
     56a:	4f a8       	ldd	r4, Y+55	; 0x37
     56c:	16 a7       	std	Z+46, r17	; 0x2e
     56e:	50 4b       	sbci	r21, 0xB0	; 176
     570:	a2 21       	and	r26, r2
     572:	0d bd       	out	0x2d, r16	; 45
     574:	0c 4e       	sbci	r16, 0xEC	; 236
     576:	3e 4f       	sbci	r19, 0xFE	; 254
     578:	a8 16       	cp	r10, r24
     57a:	97 30       	cpi	r25, 0x07	; 7
     57c:	49 c3       	rjmp	.+1682   	; 0xc10 <__stack+0x311>
     57e:	70 be       	out	0x30, r7	; 48
     580:	0e 4d       	sbci	r16, 0xDE	; 222
     582:	3e 87       	std	Y+14, r19	; 0x0e
     584:	9a a5       	ldd	r25, Y+42	; 0x2a
     586:	91 94       	neg	r9
     588:	49 49       	sbci	r20, 0x99	; 153
     58a:	32 84       	ldd	r3, Z+10	; 0x0a
     58c:	01 bf       	out	0x31, r16	; 49
     58e:	0a 3d       	cpi	r16, 0xDA	; 218
     590:	42 57       	subi	r20, 0x72	; 114
     592:	0e 85       	ldd	r16, Y+14	; 0x0e
     594:	59 cb       	rjmp	.-2382   	; 0xfffffc48 <__eeprom_end+0xff7efc48>
     596:	02 c0       	rjmp	.+4      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     598:	0c 45       	sbci	r16, 0x5C	; 92
     59a:	42 4f       	sbci	r20, 0xF2	; 242
     59c:	9a 2d       	mov	r25, r10
     59e:	99 36       	cpi	r25, 0x69	; 105
     5a0:	0c 99       	sbic	0x01, 4	; 1
     5a2:	16 c1       	rjmp	.+556    	; 0x7d0 <__LOCK_REGION_LENGTH__+0x3d0>
     5a4:	0c 45       	sbci	r16, 0x5C	; 92
     5a6:	42 5f       	subi	r20, 0xF2	; 242
     5a8:	6d c9       	rjmp	.-3366   	; 0xfffff884 <__eeprom_end+0xff7ef884>
     5aa:	b4 61       	ori	r27, 0x14	; 20
     5ac:	c8 b4       	in	r12, 0x28	; 40
     5ae:	00 c2       	rjmp	.+1024   	; 0x9b0 <__stack+0xb1>
     5b0:	0d 45       	sbci	r16, 0x5D	; 93
     5b2:	42 57       	subi	r20, 0x72	; 114
     5b4:	96 44       	sbci	r25, 0x46	; 70
     5b6:	4b a6       	std	Y+43, r4	; 0x2b
     5b8:	0d 43       	sbci	r16, 0x3D	; 61
     5ba:	a6 05       	cpc	r26, r6
     5bc:	c3 0d       	add	r28, r3
     5be:	45 42       	sbci	r20, 0x25	; 37
     5c0:	4f a4       	ldd	r4, Y+47	; 0x2f
     5c2:	48 4b       	sbci	r20, 0xB8	; 184
     5c4:	a6 0d       	add	r26, r6
     5c6:	43 a6       	std	Z+43, r4	; 0x2b
     5c8:	05 c4       	rjmp	.+2058   	; 0xdd4 <__stack+0x4d5>
     5ca:	0c 45       	sbci	r16, 0x5C	; 92
     5cc:	42 4f       	sbci	r20, 0xF2	; 242
     5ce:	1d 58       	subi	r17, 0x8D	; 141
     5d0:	32 6d       	ori	r19, 0xD2	; 210
     5d2:	18 32       	cpi	r17, 0x28	; 40
     5d4:	2d c5       	rjmp	.+2650   	; 0x1030 <angleCalculator+0x7e>
     5d6:	0d 45       	sbci	r16, 0x5D	; 93
     5d8:	42 57       	subi	r20, 0x72	; 114
     5da:	96 44       	sbci	r25, 0x46	; 70
     5dc:	4b a6       	std	Y+43, r4	; 0x2b
     5de:	0d 43       	sbci	r16, 0x3D	; 61
     5e0:	a6 05       	cpc	r26, r6
     5e2:	c6 0c       	add	r12, r6
     5e4:	3e 42       	sbci	r19, 0x2E	; 46
     5e6:	d7 90       	elpm	r13, Z+
     5e8:	94 9a       	sbi	0x12, 4	; 18
     5ea:	86 21       	and	r24, r6
     5ec:	6a 1a       	sub	r6, r26
     5ee:	c7 0b       	sbc	r28, r23
     5f0:	4d 3a       	cpi	r20, 0xAD	; 173
     5f2:	cf 92       	push	r12
     5f4:	89 6d       	ori	r24, 0xD9	; 217
     5f6:	c9 56       	subi	r28, 0x69	; 105
     5f8:	03 c8       	rjmp	.-4090   	; 0xfffff600 <__eeprom_end+0xff7ef600>
     5fa:	0c 45       	sbci	r16, 0x5C	; 92
     5fc:	42 4f       	sbci	r20, 0xF2	; 242
     5fe:	36 8c       	ldd	r3, Z+30	; 0x1e
     600:	e1 90       	ld	r14, Z+
     602:	84 e1       	ldi	r24, 0x14	; 20
     604:	20 c9       	rjmp	.-3520   	; 0xfffff846 <__eeprom_end+0xff7ef846>
     606:	0c 45       	sbci	r16, 0x5C	; 92
     608:	42 5f       	subi	r20, 0xF2	; 242
     60a:	32 8c       	ldd	r3, Z+26	; 0x1a
     60c:	e1 90       	ld	r14, Z+
     60e:	84 e1       	ldi	r24, 0x14	; 20
     610:	20 ca       	rjmp	.-3008   	; 0xfffffa52 <__eeprom_end+0xff7efa52>
     612:	0c 45       	sbci	r16, 0x5C	; 92
     614:	42 57       	subi	r20, 0x72	; 114
     616:	34 8c       	ldd	r3, Z+28	; 0x1c
     618:	e1 90       	ld	r14, Z+
     61a:	84 e1       	ldi	r24, 0x14	; 20
     61c:	20 cb       	rjmp	.-2496   	; 0xfffffc5e <__eeprom_end+0xff7efc5e>
     61e:	0c 45       	sbci	r16, 0x5C	; 92
     620:	42 4f       	sbci	r20, 0xF2	; 242
     622:	65 18       	sub	r6, r5
     624:	c3 21       	and	r28, r3
     626:	09 c3       	rjmp	.+1554   	; 0xc3a <__stack+0x33b>
     628:	41 cc       	rjmp	.-1918   	; 0xfffffeac <__eeprom_end+0xff7efeac>
     62a:	0a c3       	rjmp	.+1556   	; 0xc40 <__stack+0x341>
     62c:	42 47       	sbci	r20, 0x72	; 114
     62e:	96 2c       	mov	r9, r6
     630:	51 cb       	rjmp	.-2398   	; 0xfffffcd4 <__eeprom_end+0xff7efcd4>
     632:	00 cd       	rjmp	.-1536   	; 0x34 <__FUSE_REGION_LENGTH__+0x31>
     634:	0a c3       	rjmp	.+1556   	; 0xc4a <__stack+0x34b>
     636:	42 57       	subi	r20, 0x72	; 114
     638:	92 2c       	mov	r9, r2
     63a:	51 cb       	rjmp	.-2398   	; 0xfffffcde <__eeprom_end+0xff7efcde>
     63c:	00 ce       	rjmp	.-1024   	; 0x23e <__trampolines_end+0x1a8>
     63e:	0a c3       	rjmp	.+1556   	; 0xc54 <__stack+0x355>
     640:	42 4f       	sbci	r20, 0xF2	; 242
     642:	65 48       	sbci	r22, 0x85	; 133
     644:	a2 96       	adiw	r28, 0x22	; 34
     646:	01 cf       	rjmp	.-510    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     648:	0a c3       	rjmp	.+1556   	; 0xc5e <__stack+0x35f>
     64a:	42 47       	sbci	r20, 0x72	; 114
     64c:	92 2d       	mov	r25, r2
     64e:	51 cb       	rjmp	.-2398   	; 0xfffffcf2 <__eeprom_end+0xff7efcf2>
     650:	00 d0       	rcall	.+0      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
     652:	0e 3d       	cpi	r16, 0xDE	; 222
     654:	42 c7       	rjmp	.+3716   	; 0x14da <setup_display+0x24>
     656:	10 55       	subi	r17, 0x50	; 80
     658:	a2 21       	and	r26, r2
     65a:	29 25       	eor	r18, r9
     65c:	d1 a0       	ldd	r13, Z+33	; 0x21
     65e:	00 d1       	rcall	.+512    	; 0x860 <__LOCK_REGION_LENGTH__+0x460>
     660:	0c 45       	sbci	r16, 0x5C	; 92
     662:	42 57       	subi	r20, 0x72	; 114
     664:	d2 6d       	ori	r29, 0xD2	; 210
     666:	52 12       	cpse	r5, r18
     668:	69 d3       	rcall	.+1746   	; 0xd3c <__stack+0x43d>
     66a:	02 d2       	rcall	.+1028   	; 0xa70 <__stack+0x171>
     66c:	0b 45       	sbci	r16, 0x5B	; 91
     66e:	42 4f       	sbci	r20, 0xF2	; 242
     670:	9a 2d       	mov	r25, r10
     672:	99 5b       	subi	r25, 0xB9	; 185
     674:	b2 00       	.word	0x00b2	; ????
     676:	d3 0a       	sbc	r13, r19
     678:	45 42       	sbci	r20, 0x25	; 37
     67a:	5f 6d       	ori	r21, 0xDF	; 223
     67c:	c9 dc       	rcall	.-1646   	; 0x10 <__FUSE_REGION_LENGTH__+0xd>
     67e:	92 05       	cpc	r25, r2
     680:	d4 0c       	add	r13, r4
     682:	45 42       	sbci	r20, 0x25	; 37
     684:	57 96       	adiw	r26, 0x17	; 23
     686:	44 4b       	sbci	r20, 0xB4	; 180
     688:	e6 96       	adiw	r28, 0x36	; 54
     68a:	2c 00       	.word	0x002c	; ????
     68c:	d5 0b       	sbc	r29, r21
     68e:	45 42       	sbci	r20, 0x25	; 37
     690:	57 d2       	rcall	.+1198   	; 0xb40 <__stack+0x241>
     692:	b4 64       	ori	r27, 0x44	; 68
     694:	6e c9       	rjmp	.-3364   	; 0xfffff972 <__eeprom_end+0xff7ef972>
     696:	02 d6       	rcall	.+3076   	; 0x129c <__vector_3+0x13a>
     698:	0b 45       	sbci	r16, 0x5B	; 91
     69a:	42 4f       	sbci	r20, 0xF2	; 242
     69c:	1d 58       	subi	r17, 0x8D	; 141
     69e:	32 b7       	in	r19, 0x32	; 50
     6a0:	64 01       	movw	r12, r8
     6a2:	d7 0a       	sbc	r13, r23
     6a4:	2d 42       	sbci	r18, 0x2D	; 45
     6a6:	47 96       	adiw	r24, 0x17	; 23
     6a8:	d4 2a       	or	r13, r20
     6aa:	b5 00       	.word	0x00b5	; ????
     6ac:	d8 0c       	add	r13, r8
     6ae:	3d 42       	sbci	r19, 0x2D	; 45
     6b0:	cf 12       	cpse	r12, r31
     6b2:	5d 92       	st	X+, r5
     6b4:	69 4a       	sbci	r22, 0xA9	; 169
     6b6:	16 00       	.word	0x0016	; ????
     6b8:	d9 0a       	sbc	r13, r25
     6ba:	45 42       	sbci	r20, 0x25	; 37
     6bc:	4f 1a       	sub	r4, r31
     6be:	65 de       	rcall	.-822    	; 0x38a <__trampolines_end+0x2f4>
     6c0:	92 05       	cpc	r25, r2
     6c2:	da 0a       	sbc	r13, r26
     6c4:	45 42       	sbci	r20, 0x25	; 37
     6c6:	5f 29       	or	r21, r15
     6c8:	f3 96       	adiw	r30, 0x33	; 51
     6ca:	2c 00       	.word	0x002c	; ????
     6cc:	db 0b       	sbc	r29, r27
     6ce:	45 42       	sbci	r20, 0x25	; 37
     6d0:	57 96       	adiw	r26, 0x17	; 23
     6d2:	c4 99       	sbic	0x18, 4	; 24
     6d4:	5b b2       	in	r5, 0x1b	; 27
     6d6:	00 dc       	rcall	.-2048   	; 0xfffffed8 <__eeprom_end+0xff7efed8>
     6d8:	0a 45       	sbci	r16, 0x5A	; 90
     6da:	42 4f       	sbci	r20, 0xF2	; 242
     6dc:	39 f3       	breq	.-50     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
     6de:	96 2c       	mov	r9, r6
     6e0:	00 dd       	rcall	.-1536   	; 0xe2 <__trampolines_end+0x4c>
     6e2:	0b 45       	sbci	r16, 0x5B	; 91
     6e4:	42 5f       	subi	r20, 0xF2	; 242
     6e6:	29 d3       	rcall	.+1618   	; 0xd3a <__stack+0x43b>
     6e8:	92 5a       	subi	r25, 0xA2	; 162
     6ea:	58 02       	muls	r21, r24
     6ec:	de 0c       	add	r13, r14
     6ee:	3d 42       	sbci	r19, 0x2D	; 45
     6f0:	47 38       	cpi	r20, 0x87	; 135
     6f2:	24 d9       	rcall	.-3512   	; 0xfffff93c <__eeprom_end+0xff7ef93c>
     6f4:	a0 84       	ldd	r10, Z+8	; 0x08
     6f6:	45 00       	.word	0x0045	; ????
     6f8:	df 0d       	add	r29, r15
     6fa:	3d 42       	sbci	r19, 0x2D	; 45
     6fc:	cf 92       	push	r12
     6fe:	49 49       	sbci	r20, 0x99	; 153
     700:	a9 92       	st	Y+, r10
     702:	29 0a       	sbc	r2, r25
     704:	00 e0       	ldi	r16, 0x00	; 0
     706:	0c 45       	sbci	r16, 0x5C	; 92
     708:	42 4f       	sbci	r20, 0xF2	; 242
     70a:	9a 23       	and	r25, r26
     70c:	6b 32       	cpi	r22, 0x2B	; 43
     70e:	68 c9       	rjmp	.-3376   	; 0xfffff9e0 <__eeprom_end+0xff7ef9e0>
     710:	10 e1       	ldi	r17, 0x10	; 16
     712:	0c 45       	sbci	r16, 0x5C	; 92
     714:	42 5f       	subi	r20, 0xF2	; 242
     716:	1d 59       	subi	r17, 0x9D	; 157
     718:	93 41       	sbci	r25, 0x13	; 19
     71a:	4b 86       	std	Y+11, r4	; 0x0b
     71c:	00 e2       	ldi	r16, 0x20	; 32
     71e:	0d 45       	sbci	r16, 0x5D	; 93
     720:	42 57       	subi	r20, 0x72	; 114
     722:	96 e4       	ldi	r25, 0x46	; 70
     724:	c0 9a       	sbi	0x18, 0	; 24
     726:	0c 5a       	subi	r16, 0xAC	; 172
     728:	32 04       	cpc	r3, r2
     72a:	e3 0d       	add	r30, r3
     72c:	45 42       	sbci	r20, 0x25	; 37
     72e:	57 d2       	rcall	.+1198   	; 0xbde <__stack+0x2df>
     730:	0e ac       	ldd	r0, Y+62	; 0x3e
     732:	c9 a0       	ldd	r12, Y+33	; 0x21
     734:	25 43       	sbci	r18, 0x35	; 53
     736:	00 e4       	ldi	r16, 0x40	; 64
     738:	0c 3d       	cpi	r16, 0xDC	; 220
     73a:	42 4f       	sbci	r20, 0xF2	; 242
     73c:	1d 58       	subi	r17, 0x8D	; 141
     73e:	93 41       	sbci	r25, 0x13	; 19
     740:	4b 86       	std	Y+11, r4	; 0x0b
     742:	00 e5       	ldi	r16, 0x50	; 80
     744:	0d 45       	sbci	r16, 0x5D	; 93
     746:	42 57       	subi	r20, 0x72	; 114
     748:	96 64       	ori	r25, 0x46	; 70
     74a:	d9 9a       	sbi	0x1b, 1	; 27
     74c:	0c 5a       	subi	r16, 0xAC	; 172
     74e:	32 04       	cpc	r3, r2
     750:	e6 0c       	add	r14, r6
     752:	2e 42       	sbci	r18, 0x2E	; 46
     754:	cf 10       	cpse	r12, r15
     756:	26 c9       	rjmp	.-3508   	; 0xfffff9a4 <__eeprom_end+0xff7ef9a4>
     758:	30 65       	ori	r19, 0x50	; 80
     75a:	83 00       	.word	0x0083	; ????
     75c:	e7 0b       	sbc	r30, r23
     75e:	3d 3a       	cpi	r19, 0xAD	; 173
     760:	cf 92       	push	r12
     762:	89 59       	subi	r24, 0x99	; 153
     764:	b2 d5       	rcall	.+2916   	; 0x12ca <__vector_3+0x168>
     766:	00 e8       	ldi	r16, 0x80	; 128
     768:	0c 45       	sbci	r16, 0x5C	; 92
     76a:	42 4f       	sbci	r20, 0xF2	; 242
     76c:	9a 23       	and	r25, r26
     76e:	4b 36       	cpi	r20, 0x6B	; 107
     770:	0c e9       	ldi	r16, 0x9C	; 156
     772:	02 e9       	ldi	r16, 0x92	; 146
     774:	0c 45       	sbci	r16, 0x5C	; 92
     776:	42 5f       	subi	r20, 0xF2	; 242
     778:	1d 59       	subi	r17, 0x9D	; 157
     77a:	b2 61       	ori	r27, 0x12	; 18
     77c:	48 17       	cp	r20, r24
     77e:	00 ea       	ldi	r16, 0xA0	; 160
     780:	0d 45       	sbci	r16, 0x5D	; 93
     782:	42 57       	subi	r20, 0x72	; 114
     784:	96 e4       	ldi	r25, 0x46	; 70
     786:	c0 92 0d 43 	sts	0x430D, r12	; 0x80430d <__bss_end+0x3d8d>
     78a:	ba 00       	.word	0x00ba	; ????
     78c:	eb 0c       	add	r14, r11
     78e:	3d 42       	sbci	r19, 0x2D	; 45
     790:	4f 1d       	adc	r20, r15
     792:	58 b2       	in	r5, 0x18	; 24
     794:	61 48       	sbci	r22, 0x81	; 129
     796:	17 00       	.word	0x0017	; ????
     798:	ec 09       	sbc	r30, r12
     79a:	c3 42       	sbci	r28, 0x23	; 35
     79c:	47 16       	cp	r4, r23
     79e:	4a 2d       	mov	r20, r10
     7a0:	03 ed       	ldi	r16, 0xD3	; 211
     7a2:	08 c3       	rjmp	.+1552   	; 0xdb4 <__stack+0x4b5>
     7a4:	42 4f       	sbci	r20, 0xF2	; 242
     7a6:	55 6a       	ori	r21, 0xA5	; 165
     7a8:	19 ee       	ldi	r17, 0xE9	; 233
     7aa:	08 c3       	rjmp	.+1552   	; 0xdbc <__stack+0x4bd>
     7ac:	42 4f       	sbci	r20, 0xF2	; 242
     7ae:	9b d4       	rcall	.+2358   	; 0x10e6 <angleCalculator+0x134>
     7b0:	32 ef       	ldi	r19, 0xF2	; 242
     7b2:	09 bb       	out	0x19, r16	; 25
     7b4:	42 47       	sbci	r20, 0x72	; 114
     7b6:	92 49       	sbci	r25, 0x92	; 146
     7b8:	2d 03       	fmul	r18, r21
     7ba:	f0 0b       	sbc	r31, r16
     7bc:	3d 42       	sbci	r19, 0x2D	; 45
     7be:	87 2a       	or	r8, r23
     7c0:	2d 99       	sbic	0x05, 5	; 5
     7c2:	2d 59       	subi	r18, 0x9D	; 157
     7c4:	00 f1       	brcs	.+64     	; 0x806 <__LOCK_REGION_LENGTH__+0x406>
     7c6:	0b 45       	sbci	r16, 0x5B	; 91
     7c8:	42 57       	subi	r20, 0x72	; 114
     7ca:	d2 9c       	mul	r13, r2
     7cc:	98 34       	cpi	r25, 0x48	; 72
     7ce:	5b 00       	.word	0x005b	; ????
     7d0:	f2 0c       	add	r15, r2
     7d2:	45 42       	sbci	r20, 0x25	; 37
     7d4:	4f 9a       	sbi	0x09, 7	; 9
     7d6:	23 4b       	sbci	r18, 0xB3	; 179
     7d8:	66 4b       	sbci	r22, 0xB6	; 182
     7da:	16 00       	.word	0x0016	; ????
     7dc:	f3 0b       	sbc	r31, r19
     7de:	45 42       	sbci	r20, 0x25	; 37
     7e0:	5f 1d       	adc	r21, r15
     7e2:	59 32       	cpi	r21, 0x29	; 41
     7e4:	5b b2       	in	r5, 0x1b	; 27
     7e6:	00 f4       	brcc	.+0      	; 0x7e8 <__LOCK_REGION_LENGTH__+0x3e8>
     7e8:	0c 45       	sbci	r16, 0x5C	; 92
     7ea:	42 57       	subi	r20, 0x72	; 114
     7ec:	96 e4       	ldi	r25, 0x46	; 70
     7ee:	c0 92 d9 92 	sts	0x92D9, r12	; 0x8092d9 <__bss_end+0x8d59>
     7f2:	05 f5       	brhc	.+64     	; 0x834 <__LOCK_REGION_LENGTH__+0x434>
     7f4:	0c 45       	sbci	r16, 0x5C	; 92
     7f6:	42 57       	subi	r20, 0x72	; 114
     7f8:	d2 0e       	add	r13, r18
     7fa:	2c 99       	sbic	0x05, 4	; 5
     7fc:	2d 59       	subi	r18, 0x9D	; 157
     7fe:	00 f6       	brcc	.-128    	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
     800:	0b 3d       	cpi	r16, 0xDB	; 219
     802:	42 4f       	sbci	r20, 0xF2	; 242
     804:	1d 58       	subi	r17, 0x8D	; 141
     806:	32 5b       	subi	r19, 0xB2	; 178
     808:	b2 00       	.word	0x00b2	; ????
     80a:	f7 0a       	sbc	r15, r23
     80c:	2d 46       	sbci	r18, 0x6D	; 109
     80e:	57 0e       	add	r5, r23
     810:	0c 3a       	cpi	r16, 0xAC	; 172
     812:	10 01       	movw	r2, r0
     814:	f8 0b       	sbc	r31, r24
     816:	2d 42       	sbci	r18, 0x2D	; 45
     818:	cf 20       	and	r12, r15
     81a:	2d c9       	rjmp	.-3494   	; 0xfffffa76 <__eeprom_end+0xff7efa76>
     81c:	34 28       	or	r3, r4
     81e:	00 f9       	bld	r16, 0
     820:	0b 45       	sbci	r16, 0x5B	; 91
     822:	42 4f       	sbci	r20, 0xF2	; 242
     824:	9a 03       	fmulsu	r17, r18
     826:	99 93       	st	Y+, r25
     828:	a2 04       	cpc	r10, r2
     82a:	fa 0a       	sbc	r15, r26
     82c:	45 42       	sbci	r20, 0x25	; 37
     82e:	5f 1d       	adc	r21, r15
     830:	c8 9c       	mul	r12, r8
     832:	14 25       	eor	r17, r4
     834:	fb 0b       	sbc	r31, r27
     836:	45 42       	sbci	r20, 0x25	; 37
     838:	57 96       	adiw	r26, 0x17	; 23
     83a:	c4 99       	sbic	0x18, 4	; 24
     83c:	93 a2       	std	Z+35, r9	; 0x23
     83e:	04 fc       	sbrc	r0, 4
     840:	0a 3d       	cpi	r16, 0xDA	; 218
     842:	42 4f       	sbci	r20, 0xF2	; 242
     844:	39 73       	andi	r19, 0x39	; 57
     846:	52 94       	swap	r5
     848:	00 fd       	sbrc	r16, 0
     84a:	0d 4d       	sbci	r16, 0xDD	; 221
     84c:	3a 5f       	subi	r19, 0xFA	; 250
     84e:	29 33       	cpi	r18, 0x39	; 57
     850:	29 4a       	sbci	r18, 0xA9	; 169
     852:	a8 25       	eor	r26, r8
     854:	0b 00       	.word	0x000b	; ????
     856:	fe 0c       	add	r15, r14
     858:	45 3a       	cpi	r20, 0xA5	; 165
     85a:	47 38       	cpi	r20, 0x87	; 135
     85c:	24 99       	sbic	0x04, 4	; 4
     85e:	6d 50       	subi	r22, 0x0D	; 13
     860:	c2 10       	cpse	r12, r2
     862:	ff 0d       	add	r31, r15
     864:	4d 3a       	cpi	r20, 0xAD	; 173
     866:	4f 39       	cpi	r20, 0x9F	; 159
     868:	33 29       	or	r19, r3
     86a:	4a a8       	ldd	r4, Y+50	; 0x32
     86c:	25 0b       	sbc	r18, r21
     86e:	00 00       	nop
     870:	00 00       	nop
     872:	04 ff       	sbrs	r16, 4
     874:	ff 00       	.word	0x00ff	; ????
	...

00000877 <u8g2_font_5x7_tf>:
     877:	bf 00 02 02 03 03 03 04 04 05 07 00 ff 06 ff 06     ................
     887:	00 01 12 02 2f 06 70 20 05 00 bd 01 21 06 b1 b1     ..../.p ....!...
     897:	19 29 22 07 5b b7 49 56 00 23 0a 2d b1 ab 86 aa     .)".[.IV.#.-....
     8a7:	86 aa 00 24 0a 2d b1 5b 35 d8 20 a5 05 25 09 34     ...$.-.[5. ..%.4
     8b7:	b1 c9 20 f6 06 01 26 09 2c b1 8b 29 56 31 05 27     .. ...&.,..)V1.'
     8c7:	05 99 b7 19 28 07 72 b1 53 cd 00 29 08 72 b1 89     ....(.r.S..).r..
     8d7:	a9 52 00 2a 07 6b b1 49 d5 6a 2b 0a 2d b1 cd 28     .R.*.k.I.j+.-..(
     8e7:	0e 99 51 04 2c 07 5b af 53 25 00 2d 06 0c b5 19     ..Q.,.[.S%.-....
     8f7:	01 2e 06 52 b1 19 01 2f 07 24 b3 07 b1 0d 30 08     ...R.../.$....0.
     907:	73 b1 ab 5c 15 00 31 07 73 b1 4b b2 35 32 0a 34     s..\..1.s.K.52.4
     917:	b1 53 31 83 58 8e 00 33 0b 34 b1 19 19 24 8d 64     .S1.X..3.4...$.d
     927:	52 00 34 0a 34 b1 8d aa 1a 31 83 04 35 0a 34 b1     R.4.4....1..5.4.
     937:	19 1a 6c 24 93 02 36 0a 34 b1 53 19 ac 28 93 02     ..l$..6.4.S..(..
     947:	37 0b 34 b1 19 19 c4 0c 62 06 11 38 0a 34 b1 53     7.4.....b..8.4.S
     957:	31 a9 28 93 02 39 0a 34 b1 53 51 a6 0d 92 02 3a     1.(..9.4.SQ....:
     967:	07 6a b1 19 71 04 3b 08 33 af b3 91 2a 01 3c 08     .j..q.;.3...*.<.
     977:	6b b1 4d 35 c8 20 3d 08 1c b3 19 19 8d 00 3e 09     k.M5. =.......>.
     987:	6b b1 c9 20 83 54 02 3f 09 73 b1 6b a6 0c 13 00     k.. .T.?.s.k....
     997:	40 09 34 b1 53 51 dd 48 01 41 09 34 b1 53 51 8e     @.4.SQ.H.A.4.SQ.
     9a7:	29 03 42 0a 34 b1 59 71 a4 28 47 02 43 0b 34 b1     ).B.4.Yq.(G.C.4.
     9b7:	53 51 83 0c 62 52 00 44 09 34 b1 59 d1 39 12 00     SQ..bR.D.4.Y.9..
     9c7:	45 0b 34 b1 19 1a ac 0c 32 18 01 46 0b 34 b1 19     E.4.....2..F.4..
     9d7:	1a ac 0c 32 c8 00 47 0a 34 b1 53 51 83 34 d3 00     ...2..G.4.SQ.4..
     9e7:	48 08 34 b1 89 72 4c 33 49 07 73 b1 59 b1 35 4a     H.4..rL3I.s.Y.5J
     9f7:	0b 34 b1 07 19 64 90 81 4c 0a 4b 0a 34 b1 89 2a     .4...d..L.K.4..*
     a07:	49 99 ca 00 4c 0c 34 b1 c9 20 83 0c 32 c8 60 04     I...L.4.. ..2.`.
     a17:	4d 09 34 b1 89 e3 88 66 00 4e 08 34 b1 89 6b a9     M.4....f.N.4..k.
     a27:	33 4f 09 34 b1 53 d1 99 14 00 50 0a 34 b1 59 51     3O.4.S....P.4.YQ
     a37:	8e 94 41 06 51 0a 3c af 53 d1 5c 49 a3 00 52 09     ..A.Q.<.S.\I..R.
     a47:	34 b1 59 51 8e d4 0c 53 0a 34 b1 53 31 65 54 26     4.YQ...S.4.S1eT&
     a57:	05 54 07 73 b1 59 b1 0b 55 08 34 b1 89 9e 49 01     .T.s.Y..U.4...I.
     a67:	56 09 34 b1 89 ce 24 15 00 57 09 34 b1 89 e6 38     V.4...$..W.4...8
     a77:	62 00 58 0a 34 b1 89 32 49 15 65 00 59 08 73 b1     b.X.4..2I.e.Y.s.
     a87:	49 56 59 01 5a 0a 34 b1 19 19 c4 36 18 01 5b 07     IVY.Z.4....6..[.
     a97:	73 b1 19 b1 39 5c 09 24 b3 c9 28 a3 8c 02 5d 07     s...9\.$..(...].
     aa7:	73 b1 99 cd 11 5e 05 53 b9 6b 5f 06 0c b1 19 01     s....^.S.k_.....
     ab7:	60 06 52 b9 89 01 61 08 24 b1 1b 51 a9 02 62 0b     `.R...a.$..Q..b.
     ac7:	34 b1 c9 20 83 15 e5 48 00 63 07 23 b1 9b 19 08     4.. ...H.c.#....
     ad7:	64 0a 34 b1 07 19 a4 11 65 1a 65 09 24 b1 53 69     d.4.....e.e.$.Si
     ae7:	64 a0 00 66 09 34 b1 ad ca 99 41 04 67 09 2c af     d..f.4....A.g.,.
     af7:	1b 31 a9 8c 06 68 0a 34 b1 c9 20 83 15 cd 00 69     .1...h.4.. ....i
     b07:	08 73 b1 cb 48 56 03 6a 09 7b af cd b0 54 15 00     .s..HV.j.{...T..
     b17:	6b 0b 34 b1 c9 20 83 94 64 2a 03 6c 07 73 b1 91     k.4.. ..d*.l.s..
     b27:	5d 03 6d 08 24 b1 49 69 48 19 6e 07 24 b1 59 d1     ].m.$.IiH.n.$.Y.
     b37:	0c 6f 08 24 b1 53 51 26 05 70 09 2c af 59 51 8e     .o.$.SQ&.p.,.YQ.
     b47:	94 01 71 09 2c af 1b 51 a6 0d 02 72 08 24 b1 59     ..q.,..Q...r.$.Y
     b57:	51 83 0c 73 08 24 b1 1b 1a 0d 05 74 0a 34 b1 cb     Q..s.$.....t.4..
     b67:	20 ce 0c 32 12 75 07 24 b1 89 66 1a 76 07 63 b1      ..2.u.$..f.v.c.
     b77:	49 56 05 77 07 24 b1 89 72 1c 78 08 24 b1 89 49     IV.w.$..r.x.$..I
     b87:	aa 18 79 09 2c af 89 32 95 25 00 7a 08 24 b1 19     ..y.,..2.%.z.$..
     b97:	b1 1c 01 7b 08 73 b1 4d 49 d6 20 7c 05 b1 b1 39     ...{.s.MI. |...9
     ba7:	7d 0a 73 b1 c9 20 aa 98 22 00 7e 07 14 b9 4b 2a     }.s.. ..".~...K*
     bb7:	01 a0 05 00 bd 01 a1 06 b1 b1 49 23 a2 09 34 af     ..........I#..4.
     bc7:	8d 23 35 67 02 a3 08 2c b1 55 71 56 02 a4 0b 2d     .#5g...,.UqV...-
     bd7:	b1 c9 20 cd 14 57 06 01 a5 09 73 b1 49 aa 5a 31     .. ..W....s.I.Z1
     be7:	01 a6 06 a9 b1 51 02 a7 08 7b af 9b aa 92 0b a8     .....Q...{......
     bf7:	06 4b bb 49 01 a9 0d 3d af 5b 19 a8 34 55 d2 20     .K.I...=.[..4U. 
     c07:	2d 00 aa 06 1b b7 5b 49 ab 07 1d b3 8b b2 01 ac     -.....[I........
     c17:	07 14 b3 19 19 04 ad 05 4b b5 19 ae 0c 3d af 5b     ........K....=.[
     c27:	19 8c 34 a7 06 69 01 af 06 0c bb 19 01 b0 06 5b     ..4..i.........[
     c37:	b7 eb 02 b1 0b 35 b1 cd 28 0e 99 51 1c 02 b2 06     .....5..(..Q....
     c47:	62 b5 51 06 b3 06 62 b5 19 69 b4 06 52 b9 53 00     b.Q...b..i..R.S.
     c57:	b5 08 2c af 89 e6 48 19 b6 08 34 b1 1b 6a f5 03     ..,...H...4..j..
     c67:	b7 06 52 b5 19 01 b8 06 52 af 53 00 b9 07 63 b5     ..R.....R.S...c.
     c77:	4b 32 0d ba 06 1b b7 eb 02 bb 08 1d b3 89 a5 4c     K2.............L
     c87:	00 bc 0c 3c af c9 20 83 0c 62 54 1b 04 bd 0d 3c     ...<.. ..bT....<
     c97:	af c9 20 83 0c 92 06 31 03 01 be 0b 3c af 91 1a     .. ....1....<...
     ca7:	44 15 d5 06 01 bf 09 73 b1 cb 30 c5 54 01 c0 09     D......s..0.T...
     cb7:	34 b1 53 51 8e 29 03 c1 09 34 b1 53 51 8e 29 03     4.SQ.)...4.SQ.).
     cc7:	c2 09 34 b1 53 51 8e 29 03 c3 09 34 b1 53 51 8e     ..4.SQ.)...4.SQ.
     cd7:	29 03 c4 0a 34 b1 89 49 c5 31 65 00 c5 09 34 b1     )...4..I.1e...4.
     ce7:	93 2a 8e 29 03 c6 09 34 b1 1b a9 1a aa 25 c7 0b     .*.)...4.....%..
     cf7:	3c af 53 51 83 0c 62 92 11 c8 0b 34 b1 19 1a ac     <.SQ..b....4....
     d07:	0c 32 18 01 c9 0b 34 b1 19 1a ac 0c 32 18 01 ca     .2....4.....2...
     d17:	0b 34 b1 19 1a ac 0c 32 18 01 cb 0b 34 b1 19 1a     .4.....2....4...
     d27:	ac 0c 32 18 01 cc 07 73 b1 59 b1 35 cd 07 73 b1     ..2....s.Y.5..s.
     d37:	59 b1 35 ce 07 73 b1 59 b1 35 cf 07 73 b1 59 b1     Y.5..s.Y.5..s.Y.
     d47:	35 d0 09 34 b1 99 69 75 8d 04 d1 08 34 b1 49 73     5..4..iu....4.Is
     d57:	a9 33 d2 09 34 b1 53 d1 99 14 00 d3 09 34 b1 53     .3..4.S......4.S
     d67:	d1 99 14 00 d4 09 34 b1 53 d1 99 14 00 d5 09 34     ......4.S......4
     d77:	b1 53 d1 99 14 00 d6 0a 34 b1 89 49 45 33 29 00     .S......4..IE3).
     d87:	d7 08 24 b1 89 49 aa 18 d8 09 34 b1 1b e9 48 47     ..$..I....4...HG
     d97:	02 d9 08 34 b1 89 9e 49 01 da 08 34 b1 89 9e 49     ...4...I...4...I
     da7:	01 db 08 34 b1 89 9e 49 01 dc 0a 34 b1 89 19 45     ...4...I...4...E
     db7:	33 29 00 dd 08 73 b1 49 56 59 01 de 0b 34 b1 c9     3)...s.IVY...4..
     dc7:	60 c5 91 32 c8 00 df 09 34 b1 53 51 95 56 02 e0     `..2....4.SQ.V..
     dd7:	0a 34 b1 cb 28 8e a8 54 01 e1 09 34 b1 ad c1 88     .4..(..T...4....
     de7:	4a 15 e2 09 34 b1 ad d2 88 4a 15 e3 0a 34 b1 4b     J...4....J...4.K
     df7:	2a 8e a8 54 01 e4 09 34 b1 ab e1 88 4a 15 e5 09     *..T...4....J...
     e07:	34 b1 93 72 44 a5 0a e6 08 24 b1 1b 69 c5 01 e7     4..rD....$..i...
     e17:	08 6b af 9b 19 a8 04 e8 0b 34 b1 cb 28 aa 34 32     .k.......4..(.42
     e27:	50 00 e9 0a 34 b1 ad 81 4a 23 03 05 ea 0b 34 b1     P...4...J#....4.
     e37:	8b 29 aa 34 32 50 00 eb 0b 34 b1 49 99 50 69 64     .).42P...4.I.Pid
     e47:	a0 00 ec 08 73 b1 c9 20 c9 6a ed 07 73 b1 2b 65     ....s.. .j..s.+e
     e57:	35 ee 07 73 b1 ab 66 35 ef 08 73 b1 49 19 c8 6a     5..s..f5..s.I..j
     e67:	f0 0a 34 b1 cb c8 8a 32 29 00 f1 09 34 b1 4b 2a     ..4....2)...4.K*
     e77:	ad 68 06 f2 0a 34 b1 cb 28 aa 28 93 02 f3 0a 34     .h...4..(.(....4
     e87:	b1 ad 81 8a 32 29 00 f4 0a 34 b1 d3 84 8a 32 29     ....2)...4....2)
     e97:	00 f5 0a 34 b1 4b 2a aa 28 93 02 f6 0a 34 b1 ab     ...4.K*.(....4..
     ea7:	a1 8a 32 29 00 f7 09 2c b1 d3 70 64 a8 00 f8 09     ..2)...,..pd....
     eb7:	24 b1 1b 69 a4 91 00 f9 09 34 b1 cb a8 34 d3 00     $..i.....4...4..
     ec7:	fa 07 34 b1 6d 9a 69 fb 08 34 b1 d3 30 9a 69 fc     ..4.m.i..4..0.i.
     ed7:	09 34 b1 ab 51 34 d3 00 fd 09 3c af 6d ca 54 96     .4..Q4....<.m.T.
     ee7:	00 fe 0a 34 af c9 60 45 39 52 06 ff 0a 3c af ab     ...4..`E9R...<..
     ef7:	51 94 a9 2c 01 00 00 00 04 ff ff 00 00              Q..,.........

00000f04 <__ctors_end>:
     f04:	11 24       	eor	r1, r1
     f06:	1f be       	out	0x3f, r1	; 63
     f08:	cf ef       	ldi	r28, 0xFF	; 255
     f0a:	d8 e0       	ldi	r29, 0x08	; 8
     f0c:	de bf       	out	0x3e, r29	; 62
     f0e:	cd bf       	out	0x3d, r28	; 61

00000f10 <__do_copy_data>:
     f10:	13 e0       	ldi	r17, 0x03	; 3
     f12:	a0 e0       	ldi	r26, 0x00	; 0
     f14:	b1 e0       	ldi	r27, 0x01	; 1
     f16:	ee e9       	ldi	r30, 0x9E	; 158
     f18:	fc e4       	ldi	r31, 0x4C	; 76
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <__do_copy_data+0x10>
     f1c:	05 90       	lpm	r0, Z+
     f1e:	0d 92       	st	X+, r0
     f20:	ae 37       	cpi	r26, 0x7E	; 126
     f22:	b1 07       	cpc	r27, r17
     f24:	d9 f7       	brne	.-10     	; 0xf1c <__do_copy_data+0xc>

00000f26 <__do_clear_bss>:
     f26:	25 e0       	ldi	r18, 0x05	; 5
     f28:	ae e7       	ldi	r26, 0x7E	; 126
     f2a:	b3 e0       	ldi	r27, 0x03	; 3
     f2c:	01 c0       	rjmp	.+2      	; 0xf30 <.do_clear_bss_start>

00000f2e <.do_clear_bss_loop>:
     f2e:	1d 92       	st	X+, r1

00000f30 <.do_clear_bss_start>:
     f30:	a0 38       	cpi	r26, 0x80	; 128
     f32:	b2 07       	cpc	r27, r18
     f34:	e1 f7       	brne	.-8      	; 0xf2e <.do_clear_bss_loop>
     f36:	0e 94 ac 0a 	call	0x1558	; 0x1558 <main>
     f3a:	0c 94 4d 26 	jmp	0x4c9a	; 0x4c9a <_exit>

00000f3e <__bad_interrupt>:
     f3e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000f42 <initDistanceSensor>:
     f42:	90 93 b3 04 	sts	0x04B3, r25	; 0x8004b3 <pDistance+0x1>
     f46:	80 93 b2 04 	sts	0x04B2, r24	; 0x8004b2 <pDistance>
     f4a:	70 93 b9 04 	sts	0x04B9, r23	; 0x8004b9 <pAngle_tmp+0x1>
     f4e:	60 93 b8 04 	sts	0x04B8, r22	; 0x8004b8 <pAngle_tmp>
     f52:	22 9a       	sbi	0x04, 2	; 4
     f54:	23 98       	cbi	0x04, 3	; 4
     f56:	24 9a       	sbi	0x04, 4	; 4
     f58:	25 98       	cbi	0x04, 5	; 4
     f5a:	eb e6       	ldi	r30, 0x6B	; 107
     f5c:	f0 e0       	ldi	r31, 0x00	; 0
     f5e:	80 81       	ld	r24, Z
     f60:	88 62       	ori	r24, 0x28	; 40
     f62:	80 83       	st	Z, r24
     f64:	e8 e6       	ldi	r30, 0x68	; 104
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	80 81       	ld	r24, Z
     f6a:	81 60       	ori	r24, 0x01	; 1
     f6c:	80 83       	st	Z, r24
     f6e:	e1 e8       	ldi	r30, 0x81	; 129
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	80 81       	ld	r24, Z
     f74:	83 60       	ori	r24, 0x03	; 3
     f76:	80 83       	st	Z, r24
     f78:	08 95       	ret

00000f7a <sendTriggPulse>:
     f7a:	e4 e8       	ldi	r30, 0x84	; 132
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	11 82       	std	Z+1, r1	; 0x01
     f80:	10 82       	st	Z, r1
     f82:	20 81       	ld	r18, Z
     f84:	31 81       	ldd	r19, Z+1	; 0x01
     f86:	95 b1       	in	r25, 0x05	; 5
     f88:	41 e0       	ldi	r20, 0x01	; 1
     f8a:	50 e0       	ldi	r21, 0x00	; 0
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <sendTriggPulse+0x18>
     f8e:	44 0f       	add	r20, r20
     f90:	55 1f       	adc	r21, r21
     f92:	8a 95       	dec	r24
     f94:	e2 f7       	brpl	.-8      	; 0xf8e <sendTriggPulse+0x14>
     f96:	94 2b       	or	r25, r20
     f98:	95 b9       	out	0x05, r25	; 5
     f9a:	2e 5f       	subi	r18, 0xFE	; 254
     f9c:	3f 4f       	sbci	r19, 0xFF	; 255
     f9e:	80 81       	ld	r24, Z
     fa0:	91 81       	ldd	r25, Z+1	; 0x01
     fa2:	82 17       	cp	r24, r18
     fa4:	93 07       	cpc	r25, r19
     fa6:	d8 f3       	brcs	.-10     	; 0xf9e <sendTriggPulse+0x24>
     fa8:	85 b1       	in	r24, 0x05	; 5
     faa:	40 95       	com	r20
     fac:	48 23       	and	r20, r24
     fae:	45 b9       	out	0x05, r20	; 5
     fb0:	08 95       	ret

00000fb2 <angleCalculator>:
     fb2:	8f 92       	push	r8
     fb4:	9f 92       	push	r9
     fb6:	af 92       	push	r10
     fb8:	bf 92       	push	r11
     fba:	cf 92       	push	r12
     fbc:	df 92       	push	r13
     fbe:	ef 92       	push	r14
     fc0:	ff 92       	push	r15
     fc2:	cf 93       	push	r28
     fc4:	df 93       	push	r29
     fc6:	c0 90 c6 04 	lds	r12, 0x04C6	; 0x8004c6 <echoDistance>
     fca:	d0 90 c7 04 	lds	r13, 0x04C7	; 0x8004c7 <echoDistance+0x1>
     fce:	e0 90 c8 04 	lds	r14, 0x04C8	; 0x8004c8 <echoDistance+0x2>
     fd2:	f0 90 c9 04 	lds	r15, 0x04C9	; 0x8004c9 <echoDistance+0x3>
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	40 ea       	ldi	r20, 0xA0	; 160
     fdc:	51 e4       	ldi	r21, 0x41	; 65
     fde:	c7 01       	movw	r24, r14
     fe0:	b6 01       	movw	r22, r12
     fe2:	0e 94 bd 23 	call	0x477a	; 0x477a <__cmpsf2>
     fe6:	18 16       	cp	r1, r24
     fe8:	0c f4       	brge	.+2      	; 0xfec <angleCalculator+0x3a>
     fea:	4b c0       	rjmp	.+150    	; 0x1082 <angleCalculator+0xd0>
     fec:	80 90 ca 04 	lds	r8, 0x04CA	; 0x8004ca <echoDistance+0x4>
     ff0:	90 90 cb 04 	lds	r9, 0x04CB	; 0x8004cb <echoDistance+0x5>
     ff4:	a0 90 cc 04 	lds	r10, 0x04CC	; 0x8004cc <echoDistance+0x6>
     ff8:	b0 90 cd 04 	lds	r11, 0x04CD	; 0x8004cd <echoDistance+0x7>
     ffc:	a5 01       	movw	r20, r10
     ffe:	94 01       	movw	r18, r8
    1000:	c7 01       	movw	r24, r14
    1002:	b6 01       	movw	r22, r12
    1004:	0e 94 bd 23 	call	0x477a	; 0x477a <__cmpsf2>
    1008:	18 16       	cp	r1, r24
    100a:	dc f1       	brlt	.+118    	; 0x1082 <angleCalculator+0xd0>
    100c:	a7 01       	movw	r20, r14
    100e:	96 01       	movw	r18, r12
    1010:	c5 01       	movw	r24, r10
    1012:	b4 01       	movw	r22, r8
    1014:	0e 94 21 23 	call	0x4642	; 0x4642 <__subsf3>
    1018:	60 93 ba 04 	sts	0x04BA, r22	; 0x8004ba <length>
    101c:	70 93 bb 04 	sts	0x04BB, r23	; 0x8004bb <length+0x1>
    1020:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <length+0x2>
    1024:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <length+0x3>
    1028:	23 e3       	ldi	r18, 0x33	; 51
    102a:	33 e3       	ldi	r19, 0x33	; 51
    102c:	43 ed       	ldi	r20, 0xD3	; 211
    102e:	50 e4       	ldi	r21, 0x40	; 64
    1030:	0e 94 c2 23 	call	0x4784	; 0x4784 <__divsf3>
    1034:	60 93 c2 04 	sts	0x04C2, r22	; 0x8004c2 <differenceLength>
    1038:	70 93 c3 04 	sts	0x04C3, r23	; 0x8004c3 <differenceLength+0x1>
    103c:	80 93 c4 04 	sts	0x04C4, r24	; 0x8004c4 <differenceLength+0x2>
    1040:	90 93 c5 04 	sts	0x04C5, r25	; 0x8004c5 <differenceLength+0x3>
    1044:	0e 94 8e 23 	call	0x471c	; 0x471c <atan>
    1048:	60 93 be 04 	sts	0x04BE, r22	; 0x8004be <angleradian>
    104c:	70 93 bf 04 	sts	0x04BF, r23	; 0x8004bf <angleradian+0x1>
    1050:	80 93 c0 04 	sts	0x04C0, r24	; 0x8004c0 <angleradian+0x2>
    1054:	90 93 c1 04 	sts	0x04C1, r25	; 0x8004c1 <angleradian+0x3>
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	44 e3       	ldi	r20, 0x34	; 52
    105e:	53 e4       	ldi	r21, 0x43	; 67
    1060:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1064:	23 ec       	ldi	r18, 0xC3	; 195
    1066:	35 ef       	ldi	r19, 0xF5	; 245
    1068:	48 e4       	ldi	r20, 0x48	; 72
    106a:	50 e4       	ldi	r21, 0x40	; 64
    106c:	0e 94 c2 23 	call	0x4784	; 0x4784 <__divsf3>
    1070:	60 93 b4 04 	sts	0x04B4, r22	; 0x8004b4 <angledegree>
    1074:	70 93 b5 04 	sts	0x04B5, r23	; 0x8004b5 <angledegree+0x1>
    1078:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <angledegree+0x2>
    107c:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <angledegree+0x3>
    1080:	55 c0       	rjmp	.+170    	; 0x112c <angleCalculator+0x17a>
    1082:	80 90 ca 04 	lds	r8, 0x04CA	; 0x8004ca <echoDistance+0x4>
    1086:	90 90 cb 04 	lds	r9, 0x04CB	; 0x8004cb <echoDistance+0x5>
    108a:	a0 90 cc 04 	lds	r10, 0x04CC	; 0x8004cc <echoDistance+0x6>
    108e:	b0 90 cd 04 	lds	r11, 0x04CD	; 0x8004cd <echoDistance+0x7>
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	40 ea       	ldi	r20, 0xA0	; 160
    1098:	51 e4       	ldi	r21, 0x41	; 65
    109a:	c5 01       	movw	r24, r10
    109c:	b4 01       	movw	r22, r8
    109e:	0e 94 bd 23 	call	0x477a	; 0x477a <__cmpsf2>
    10a2:	18 16       	cp	r1, r24
    10a4:	0c f4       	brge	.+2      	; 0x10a8 <angleCalculator+0xf6>
    10a6:	42 c0       	rjmp	.+132    	; 0x112c <angleCalculator+0x17a>
    10a8:	a5 01       	movw	r20, r10
    10aa:	94 01       	movw	r18, r8
    10ac:	c7 01       	movw	r24, r14
    10ae:	b6 01       	movw	r22, r12
    10b0:	0e 94 43 25 	call	0x4a86	; 0x4a86 <__gesf2>
    10b4:	88 23       	and	r24, r24
    10b6:	d4 f1       	brlt	.+116    	; 0x112c <angleCalculator+0x17a>
    10b8:	a5 01       	movw	r20, r10
    10ba:	94 01       	movw	r18, r8
    10bc:	c7 01       	movw	r24, r14
    10be:	b6 01       	movw	r22, r12
    10c0:	0e 94 21 23 	call	0x4642	; 0x4642 <__subsf3>
    10c4:	60 93 ba 04 	sts	0x04BA, r22	; 0x8004ba <length>
    10c8:	70 93 bb 04 	sts	0x04BB, r23	; 0x8004bb <length+0x1>
    10cc:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <length+0x2>
    10d0:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <length+0x3>
    10d4:	23 e3       	ldi	r18, 0x33	; 51
    10d6:	33 e3       	ldi	r19, 0x33	; 51
    10d8:	43 ed       	ldi	r20, 0xD3	; 211
    10da:	50 e4       	ldi	r21, 0x40	; 64
    10dc:	0e 94 c2 23 	call	0x4784	; 0x4784 <__divsf3>
    10e0:	60 93 c2 04 	sts	0x04C2, r22	; 0x8004c2 <differenceLength>
    10e4:	70 93 c3 04 	sts	0x04C3, r23	; 0x8004c3 <differenceLength+0x1>
    10e8:	80 93 c4 04 	sts	0x04C4, r24	; 0x8004c4 <differenceLength+0x2>
    10ec:	90 93 c5 04 	sts	0x04C5, r25	; 0x8004c5 <differenceLength+0x3>
    10f0:	0e 94 8e 23 	call	0x471c	; 0x471c <atan>
    10f4:	60 93 be 04 	sts	0x04BE, r22	; 0x8004be <angleradian>
    10f8:	70 93 bf 04 	sts	0x04BF, r23	; 0x8004bf <angleradian+0x1>
    10fc:	80 93 c0 04 	sts	0x04C0, r24	; 0x8004c0 <angleradian+0x2>
    1100:	90 93 c1 04 	sts	0x04C1, r25	; 0x8004c1 <angleradian+0x3>
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	44 e3       	ldi	r20, 0x34	; 52
    110a:	53 e4       	ldi	r21, 0x43	; 67
    110c:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1110:	23 ec       	ldi	r18, 0xC3	; 195
    1112:	35 ef       	ldi	r19, 0xF5	; 245
    1114:	48 e4       	ldi	r20, 0x48	; 72
    1116:	50 e4       	ldi	r21, 0x40	; 64
    1118:	0e 94 c2 23 	call	0x4784	; 0x4784 <__divsf3>
    111c:	60 93 b4 04 	sts	0x04B4, r22	; 0x8004b4 <angledegree>
    1120:	70 93 b5 04 	sts	0x04B5, r23	; 0x8004b5 <angledegree+0x1>
    1124:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <angledegree+0x2>
    1128:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <angledegree+0x3>
    112c:	c0 91 b8 04 	lds	r28, 0x04B8	; 0x8004b8 <pAngle_tmp>
    1130:	d0 91 b9 04 	lds	r29, 0x04B9	; 0x8004b9 <pAngle_tmp+0x1>
    1134:	60 91 b4 04 	lds	r22, 0x04B4	; 0x8004b4 <angledegree>
    1138:	70 91 b5 04 	lds	r23, 0x04B5	; 0x8004b5 <angledegree+0x1>
    113c:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <angledegree+0x2>
    1140:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <angledegree+0x3>
    1144:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    1148:	79 83       	std	Y+1, r23	; 0x01
    114a:	68 83       	st	Y, r22
    114c:	df 91       	pop	r29
    114e:	cf 91       	pop	r28
    1150:	ff 90       	pop	r15
    1152:	ef 90       	pop	r14
    1154:	df 90       	pop	r13
    1156:	cf 90       	pop	r12
    1158:	bf 90       	pop	r11
    115a:	af 90       	pop	r10
    115c:	9f 90       	pop	r9
    115e:	8f 90       	pop	r8
    1160:	08 95       	ret

00001162 <__vector_3>:
    1162:	1f 92       	push	r1
    1164:	0f 92       	push	r0
    1166:	0f b6       	in	r0, 0x3f	; 63
    1168:	0f 92       	push	r0
    116a:	11 24       	eor	r1, r1
    116c:	0f 93       	push	r16
    116e:	1f 93       	push	r17
    1170:	2f 93       	push	r18
    1172:	3f 93       	push	r19
    1174:	4f 93       	push	r20
    1176:	5f 93       	push	r21
    1178:	6f 93       	push	r22
    117a:	7f 93       	push	r23
    117c:	8f 93       	push	r24
    117e:	9f 93       	push	r25
    1180:	af 93       	push	r26
    1182:	bf 93       	push	r27
    1184:	cf 93       	push	r28
    1186:	df 93       	push	r29
    1188:	ef 93       	push	r30
    118a:	ff 93       	push	r31
    118c:	83 b1       	in	r24, 0x03	; 3
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	8f 77       	andi	r24, 0x7F	; 127
    1192:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <device.1739+0x1>
    1196:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <device.1739>
    119a:	89 2b       	or	r24, r25
    119c:	41 f4       	brne	.+16     	; 0x11ae <__vector_3+0x4c>
    119e:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <prevDevice.1738>
    11a2:	90 91 83 03 	lds	r25, 0x0383	; 0x800383 <prevDevice.1738+0x1>
    11a6:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <device.1739+0x1>
    11aa:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <device.1739>
    11ae:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <device.1739>
    11b2:	90 91 85 03 	lds	r25, 0x0385	; 0x800385 <device.1739+0x1>
    11b6:	81 30       	cpi	r24, 0x01	; 1
    11b8:	91 05       	cpc	r25, r1
    11ba:	09 f4       	brne	.+2      	; 0x11be <__vector_3+0x5c>
    11bc:	73 c0       	rjmp	.+230    	; 0x12a4 <__vector_3+0x142>
    11be:	1c f4       	brge	.+6      	; 0x11c6 <__vector_3+0x64>
    11c0:	00 97       	sbiw	r24, 0x00	; 0
    11c2:	49 f0       	breq	.+18     	; 0x11d6 <__vector_3+0x74>
    11c4:	d7 c0       	rjmp	.+430    	; 0x1374 <__vector_3+0x212>
    11c6:	88 30       	cpi	r24, 0x08	; 8
    11c8:	91 05       	cpc	r25, r1
    11ca:	29 f0       	breq	.+10     	; 0x11d6 <__vector_3+0x74>
    11cc:	80 32       	cpi	r24, 0x20	; 32
    11ce:	91 05       	cpc	r25, r1
    11d0:	09 f4       	brne	.+2      	; 0x11d4 <__vector_3+0x72>
    11d2:	68 c0       	rjmp	.+208    	; 0x12a4 <__vector_3+0x142>
    11d4:	cf c0       	rjmp	.+414    	; 0x1374 <__vector_3+0x212>
    11d6:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <runcount2.1736>
    11da:	30 91 81 03 	lds	r19, 0x0381	; 0x800381 <runcount2.1736+0x1>
    11de:	23 2b       	or	r18, r19
    11e0:	c1 f4       	brne	.+48     	; 0x1212 <__vector_3+0xb0>
    11e2:	10 92 83 03 	sts	0x0383, r1	; 0x800383 <prevDevice.1738+0x1>
    11e6:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <prevDevice.1738>
    11ea:	e4 e8       	ldi	r30, 0x84	; 132
    11ec:	f0 e0       	ldi	r31, 0x00	; 0
    11ee:	11 82       	std	Z+1, r1	; 0x01
    11f0:	10 82       	st	Z, r1
    11f2:	80 81       	ld	r24, Z
    11f4:	91 81       	ldd	r25, Z+1	; 0x01
    11f6:	90 93 8f 03 	sts	0x038F, r25	; 0x80038f <risingEdgeTimeC+0x1>
    11fa:	80 93 8e 03 	sts	0x038E, r24	; 0x80038e <risingEdgeTimeC>
    11fe:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <runcount2.1736>
    1202:	90 91 81 03 	lds	r25, 0x0381	; 0x800381 <runcount2.1736+0x1>
    1206:	01 96       	adiw	r24, 0x01	; 1
    1208:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <runcount2.1736+0x1>
    120c:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <runcount2.1736>
    1210:	b1 c0       	rjmp	.+354    	; 0x1374 <__vector_3+0x212>
    1212:	2f ef       	ldi	r18, 0xFF	; 255
    1214:	3f ef       	ldi	r19, 0xFF	; 255
    1216:	30 93 83 03 	sts	0x0383, r19	; 0x800383 <prevDevice.1738+0x1>
    121a:	20 93 82 03 	sts	0x0382, r18	; 0x800382 <prevDevice.1738>
    121e:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1222:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1226:	70 93 8d 03 	sts	0x038D, r23	; 0x80038d <fallingEdgeTimeC+0x1>
    122a:	60 93 8c 03 	sts	0x038C, r22	; 0x80038c <fallingEdgeTimeC>
    122e:	20 91 8e 03 	lds	r18, 0x038E	; 0x80038e <risingEdgeTimeC>
    1232:	30 91 8f 03 	lds	r19, 0x038F	; 0x80038f <risingEdgeTimeC+0x1>
    1236:	62 1b       	sub	r22, r18
    1238:	73 0b       	sbc	r23, r19
    123a:	8b 01       	movw	r16, r22
    123c:	07 2e       	mov	r0, r23
    123e:	00 0c       	add	r0, r0
    1240:	22 0b       	sbc	r18, r18
    1242:	33 0b       	sbc	r19, r19
    1244:	00 93 88 03 	sts	0x0388, r16	; 0x800388 <echoHighLevelTimeC>
    1248:	10 93 89 03 	sts	0x0389, r17	; 0x800389 <echoHighLevelTimeC+0x1>
    124c:	20 93 8a 03 	sts	0x038A, r18	; 0x80038a <echoHighLevelTimeC+0x2>
    1250:	30 93 8b 03 	sts	0x038B, r19	; 0x80038b <echoHighLevelTimeC+0x3>
    1254:	66 0f       	add	r22, r22
    1256:	77 1f       	adc	r23, r23
    1258:	66 0f       	add	r22, r22
    125a:	77 1f       	adc	r23, r23
    125c:	70 93 87 03 	sts	0x0387, r23	; 0x800387 <echoHighLevelTimeuS+0x1>
    1260:	60 93 86 03 	sts	0x0386, r22	; 0x800386 <echoHighLevelTimeuS>
    1264:	88 0f       	add	r24, r24
    1266:	99 1f       	adc	r25, r25
    1268:	88 0f       	add	r24, r24
    126a:	99 1f       	adc	r25, r25
    126c:	ec 01       	movw	r28, r24
    126e:	ca 53       	subi	r28, 0x3A	; 58
    1270:	db 4f       	sbci	r29, 0xFB	; 251
    1272:	80 e0       	ldi	r24, 0x00	; 0
    1274:	90 e0       	ldi	r25, 0x00	; 0
    1276:	0e 94 6a 24 	call	0x48d4	; 0x48d4 <__floatunsisf>
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	48 e6       	ldi	r20, 0x68	; 104
    1280:	52 e4       	ldi	r21, 0x42	; 66
    1282:	0e 94 c2 23 	call	0x4784	; 0x4784 <__divsf3>
    1286:	26 e6       	ldi	r18, 0x66	; 102
    1288:	36 e6       	ldi	r19, 0x66	; 102
    128a:	46 ee       	ldi	r20, 0xE6	; 230
    128c:	5f e3       	ldi	r21, 0x3F	; 63
    128e:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1292:	68 83       	st	Y, r22
    1294:	79 83       	std	Y+1, r23	; 0x01
    1296:	8a 83       	std	Y+2, r24	; 0x02
    1298:	9b 83       	std	Y+3, r25	; 0x03
    129a:	10 92 81 03 	sts	0x0381, r1	; 0x800381 <runcount2.1736+0x1>
    129e:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <runcount2.1736>
    12a2:	68 c0       	rjmp	.+208    	; 0x1374 <__vector_3+0x212>
    12a4:	20 91 7e 03 	lds	r18, 0x037E	; 0x80037e <__data_end>
    12a8:	30 91 7f 03 	lds	r19, 0x037F	; 0x80037f <__data_end+0x1>
    12ac:	23 2b       	or	r18, r19
    12ae:	d1 f4       	brne	.+52     	; 0x12e4 <__vector_3+0x182>
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	90 93 83 03 	sts	0x0383, r25	; 0x800383 <prevDevice.1738+0x1>
    12b8:	80 93 82 03 	sts	0x0382, r24	; 0x800382 <prevDevice.1738>
    12bc:	e4 e8       	ldi	r30, 0x84	; 132
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	11 82       	std	Z+1, r1	; 0x01
    12c2:	10 82       	st	Z, r1
    12c4:	80 81       	ld	r24, Z
    12c6:	91 81       	ldd	r25, Z+1	; 0x01
    12c8:	90 93 8f 03 	sts	0x038F, r25	; 0x80038f <risingEdgeTimeC+0x1>
    12cc:	80 93 8e 03 	sts	0x038E, r24	; 0x80038e <risingEdgeTimeC>
    12d0:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    12d4:	90 91 7f 03 	lds	r25, 0x037F	; 0x80037f <__data_end+0x1>
    12d8:	01 96       	adiw	r24, 0x01	; 1
    12da:	90 93 7f 03 	sts	0x037F, r25	; 0x80037f <__data_end+0x1>
    12de:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <__data_end>
    12e2:	48 c0       	rjmp	.+144    	; 0x1374 <__vector_3+0x212>
    12e4:	2e ef       	ldi	r18, 0xFE	; 254
    12e6:	3f ef       	ldi	r19, 0xFF	; 255
    12e8:	30 93 83 03 	sts	0x0383, r19	; 0x800383 <prevDevice.1738+0x1>
    12ec:	20 93 82 03 	sts	0x0382, r18	; 0x800382 <prevDevice.1738>
    12f0:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    12f4:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    12f8:	70 93 8d 03 	sts	0x038D, r23	; 0x80038d <fallingEdgeTimeC+0x1>
    12fc:	60 93 8c 03 	sts	0x038C, r22	; 0x80038c <fallingEdgeTimeC>
    1300:	20 91 8e 03 	lds	r18, 0x038E	; 0x80038e <risingEdgeTimeC>
    1304:	30 91 8f 03 	lds	r19, 0x038F	; 0x80038f <risingEdgeTimeC+0x1>
    1308:	62 1b       	sub	r22, r18
    130a:	73 0b       	sbc	r23, r19
    130c:	8b 01       	movw	r16, r22
    130e:	07 2e       	mov	r0, r23
    1310:	00 0c       	add	r0, r0
    1312:	22 0b       	sbc	r18, r18
    1314:	33 0b       	sbc	r19, r19
    1316:	00 93 88 03 	sts	0x0388, r16	; 0x800388 <echoHighLevelTimeC>
    131a:	10 93 89 03 	sts	0x0389, r17	; 0x800389 <echoHighLevelTimeC+0x1>
    131e:	20 93 8a 03 	sts	0x038A, r18	; 0x80038a <echoHighLevelTimeC+0x2>
    1322:	30 93 8b 03 	sts	0x038B, r19	; 0x80038b <echoHighLevelTimeC+0x3>
    1326:	66 0f       	add	r22, r22
    1328:	77 1f       	adc	r23, r23
    132a:	66 0f       	add	r22, r22
    132c:	77 1f       	adc	r23, r23
    132e:	70 93 87 03 	sts	0x0387, r23	; 0x800387 <echoHighLevelTimeuS+0x1>
    1332:	60 93 86 03 	sts	0x0386, r22	; 0x800386 <echoHighLevelTimeuS>
    1336:	88 0f       	add	r24, r24
    1338:	99 1f       	adc	r25, r25
    133a:	88 0f       	add	r24, r24
    133c:	99 1f       	adc	r25, r25
    133e:	ec 01       	movw	r28, r24
    1340:	ca 53       	subi	r28, 0x3A	; 58
    1342:	db 4f       	sbci	r29, 0xFB	; 251
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	0e 94 6a 24 	call	0x48d4	; 0x48d4 <__floatunsisf>
    134c:	20 e0       	ldi	r18, 0x00	; 0
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	48 e6       	ldi	r20, 0x68	; 104
    1352:	52 e4       	ldi	r21, 0x42	; 66
    1354:	0e 94 c2 23 	call	0x4784	; 0x4784 <__divsf3>
    1358:	26 e6       	ldi	r18, 0x66	; 102
    135a:	36 e6       	ldi	r19, 0x66	; 102
    135c:	46 ee       	ldi	r20, 0xE6	; 230
    135e:	5f e3       	ldi	r21, 0x3F	; 63
    1360:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1364:	68 83       	st	Y, r22
    1366:	79 83       	std	Y+1, r23	; 0x01
    1368:	8a 83       	std	Y+2, r24	; 0x02
    136a:	9b 83       	std	Y+3, r25	; 0x03
    136c:	10 92 7f 03 	sts	0x037F, r1	; 0x80037f <__data_end+0x1>
    1370:	10 92 7e 03 	sts	0x037E, r1	; 0x80037e <__data_end>
    1374:	c0 91 b2 04 	lds	r28, 0x04B2	; 0x8004b2 <pDistance>
    1378:	d0 91 b3 04 	lds	r29, 0x04B3	; 0x8004b3 <pDistance+0x1>
    137c:	06 ec       	ldi	r16, 0xC6	; 198
    137e:	14 e0       	ldi	r17, 0x04	; 4
    1380:	f8 01       	movw	r30, r16
    1382:	60 81       	ld	r22, Z
    1384:	71 81       	ldd	r23, Z+1	; 0x01
    1386:	82 81       	ldd	r24, Z+2	; 0x02
    1388:	93 81       	ldd	r25, Z+3	; 0x03
    138a:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    138e:	79 83       	std	Y+1, r23	; 0x01
    1390:	68 83       	st	Y, r22
    1392:	c0 91 b2 04 	lds	r28, 0x04B2	; 0x8004b2 <pDistance>
    1396:	d0 91 b3 04 	lds	r29, 0x04B3	; 0x8004b3 <pDistance+0x1>
    139a:	f8 01       	movw	r30, r16
    139c:	64 81       	ldd	r22, Z+4	; 0x04
    139e:	75 81       	ldd	r23, Z+5	; 0x05
    13a0:	86 81       	ldd	r24, Z+6	; 0x06
    13a2:	97 81       	ldd	r25, Z+7	; 0x07
    13a4:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    13a8:	28 81       	ld	r18, Y
    13aa:	39 81       	ldd	r19, Y+1	; 0x01
    13ac:	62 0f       	add	r22, r18
    13ae:	73 1f       	adc	r23, r19
    13b0:	79 83       	std	Y+1, r23	; 0x01
    13b2:	68 83       	st	Y, r22
    13b4:	e0 91 b2 04 	lds	r30, 0x04B2	; 0x8004b2 <pDistance>
    13b8:	f0 91 b3 04 	lds	r31, 0x04B3	; 0x8004b3 <pDistance+0x1>
    13bc:	80 81       	ld	r24, Z
    13be:	91 81       	ldd	r25, Z+1	; 0x01
    13c0:	99 23       	and	r25, r25
    13c2:	0c f4       	brge	.+2      	; 0x13c6 <__vector_3+0x264>
    13c4:	01 96       	adiw	r24, 0x01	; 1
    13c6:	95 95       	asr	r25
    13c8:	87 95       	ror	r24
    13ca:	91 83       	std	Z+1, r25	; 0x01
    13cc:	80 83       	st	Z, r24
    13ce:	ff 91       	pop	r31
    13d0:	ef 91       	pop	r30
    13d2:	df 91       	pop	r29
    13d4:	cf 91       	pop	r28
    13d6:	bf 91       	pop	r27
    13d8:	af 91       	pop	r26
    13da:	9f 91       	pop	r25
    13dc:	8f 91       	pop	r24
    13de:	7f 91       	pop	r23
    13e0:	6f 91       	pop	r22
    13e2:	5f 91       	pop	r21
    13e4:	4f 91       	pop	r20
    13e6:	3f 91       	pop	r19
    13e8:	2f 91       	pop	r18
    13ea:	1f 91       	pop	r17
    13ec:	0f 91       	pop	r16
    13ee:	0f 90       	pop	r0
    13f0:	0f be       	out	0x3f, r0	; 63
    13f2:	0f 90       	pop	r0
    13f4:	1f 90       	pop	r1
    13f6:	18 95       	reti

000013f8 <__vector_5>:
#include "avr/io.h"
#include "screencontroller.h"
#include "USART_RS232_H_file.h"

ISR(PCINT2_vect)
{
    13f8:	1f 92       	push	r1
    13fa:	0f 92       	push	r0
    13fc:	0f b6       	in	r0, 0x3f	; 63
    13fe:	0f 92       	push	r0
    1400:	11 24       	eor	r1, r1
    1402:	2f 93       	push	r18
    1404:	3f 93       	push	r19
    1406:	4f 93       	push	r20
    1408:	5f 93       	push	r21
    140a:	6f 93       	push	r22
    140c:	7f 93       	push	r23
    140e:	8f 93       	push	r24
    1410:	9f 93       	push	r25
    1412:	af 93       	push	r26
    1414:	bf 93       	push	r27
    1416:	ef 93       	push	r30
    1418:	ff 93       	push	r31
    141a:	cf 93       	push	r28
    141c:	df 93       	push	r29
    141e:	cd b7       	in	r28, 0x3d	; 61
    1420:	de b7       	in	r29, 0x3e	; 62
    1422:	2a 97       	sbiw	r28, 0x0a	; 10
    1424:	de bf       	out	0x3e, r29	; 62
    1426:	cd bf       	out	0x3d, r28	; 61
	if( !(PIND & (1<<PCINT16) )){
    1428:	48 99       	sbic	0x09, 0	; 9
    142a:	09 c0       	rjmp	.+18     	; 0x143e <__vector_5+0x46>
	char receivedStr[BL_BUFFERSIZE];
	USART_ReceiveString(receivedStr);
    142c:	ce 01       	movw	r24, r28
    142e:	01 96       	adiw	r24, 0x01	; 1
    1430:	0e 94 01 22 	call	0x4402	; 0x4402 <USART_ReceiveString>
	USART_BluetoothChanger(receivedStr);
    1434:	ce 01       	movw	r24, r28
    1436:	01 96       	adiw	r24, 0x01	; 1
    1438:	0e 94 29 22 	call	0x4452	; 0x4452 <USART_BluetoothChanger>
    143c:	23 c0       	rjmp	.+70     	; 0x1484 <__vector_5+0x8c>
	}else{
		if ( (BUTTON_PIN & (1<<DOWN)) == 0 )
    143e:	4c 99       	sbic	0x09, 4	; 9
    1440:	07 c0       	rjmp	.+14     	; 0x1450 <__vector_5+0x58>
		keyPressed = DOWN;
    1442:	84 e0       	ldi	r24, 0x04	; 4
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	90 93 cf 04 	sts	0x04CF, r25	; 0x8004cf <keyPressed+0x1>
    144a:	80 93 ce 04 	sts	0x04CE, r24	; 0x8004ce <keyPressed>
    144e:	1a c0       	rjmp	.+52     	; 0x1484 <__vector_5+0x8c>
		else
		if ( (BUTTON_PIN & (1<<UP)) == 0 )
    1450:	4d 99       	sbic	0x09, 5	; 9
    1452:	07 c0       	rjmp	.+14     	; 0x1462 <__vector_5+0x6a>
		keyPressed = UP;
    1454:	85 e0       	ldi	r24, 0x05	; 5
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	90 93 cf 04 	sts	0x04CF, r25	; 0x8004cf <keyPressed+0x1>
    145c:	80 93 ce 04 	sts	0x04CE, r24	; 0x8004ce <keyPressed>
    1460:	11 c0       	rjmp	.+34     	; 0x1484 <__vector_5+0x8c>
		else
		if ( (BUTTON_PIN & (1<<BACK)) == 0 )
    1462:	4e 99       	sbic	0x09, 6	; 9
    1464:	07 c0       	rjmp	.+14     	; 0x1474 <__vector_5+0x7c>
		keyPressed = BACK;
    1466:	86 e0       	ldi	r24, 0x06	; 6
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	90 93 cf 04 	sts	0x04CF, r25	; 0x8004cf <keyPressed+0x1>
    146e:	80 93 ce 04 	sts	0x04CE, r24	; 0x8004ce <keyPressed>
    1472:	08 c0       	rjmp	.+16     	; 0x1484 <__vector_5+0x8c>
		else
		if ( (BUTTON_PIN & (1<<SELECT)) == 0 )
    1474:	4f 99       	sbic	0x09, 7	; 9
    1476:	06 c0       	rjmp	.+12     	; 0x1484 <__vector_5+0x8c>
		keyPressed = SELECT;
    1478:	87 e0       	ldi	r24, 0x07	; 7
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	90 93 cf 04 	sts	0x04CF, r25	; 0x8004cf <keyPressed+0x1>
    1480:	80 93 ce 04 	sts	0x04CE, r24	; 0x8004ce <keyPressed>
	}
    1484:	2a 96       	adiw	r28, 0x0a	; 10
    1486:	0f b6       	in	r0, 0x3f	; 63
    1488:	f8 94       	cli
    148a:	de bf       	out	0x3e, r29	; 62
    148c:	0f be       	out	0x3f, r0	; 63
    148e:	cd bf       	out	0x3d, r28	; 61
    1490:	df 91       	pop	r29
    1492:	cf 91       	pop	r28
    1494:	ff 91       	pop	r31
    1496:	ef 91       	pop	r30
    1498:	bf 91       	pop	r27
    149a:	af 91       	pop	r26
    149c:	9f 91       	pop	r25
    149e:	8f 91       	pop	r24
    14a0:	7f 91       	pop	r23
    14a2:	6f 91       	pop	r22
    14a4:	5f 91       	pop	r21
    14a6:	4f 91       	pop	r20
    14a8:	3f 91       	pop	r19
    14aa:	2f 91       	pop	r18
    14ac:	0f 90       	pop	r0
    14ae:	0f be       	out	0x3f, r0	; 63
    14b0:	0f 90       	pop	r0
    14b2:	1f 90       	pop	r1
    14b4:	18 95       	reti

000014b6 <setup_display>:
int8_t *main_currentPage = 0;

unsigned int Time_ms = 0;//accuracy is fluctuating
unsigned int Time_min = 0;//accurate

void setup_display(void){
    14b6:	0f 93       	push	r16
    14b8:	1f 93       	push	r17
	//screen initialization
	main_currentPage = u8g2_setup(Settings, &speed, &direction, &distance, &angle_deg); //save the address of the currentPage
    14ba:	08 e9       	ldi	r16, 0x98	; 152
    14bc:	13 e0       	ldi	r17, 0x03	; 3
    14be:	2a e0       	ldi	r18, 0x0A	; 10
    14c0:	31 e0       	ldi	r19, 0x01	; 1
    14c2:	4c e0       	ldi	r20, 0x0C	; 12
    14c4:	51 e0       	ldi	r21, 0x01	; 1
    14c6:	6e e0       	ldi	r22, 0x0E	; 14
    14c8:	71 e0       	ldi	r23, 0x01	; 1
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	91 e0       	ldi	r25, 0x01	; 1
    14ce:	0e 94 be 0a 	call	0x157c	; 0x157c <u8g2_setup>
    14d2:	90 93 97 03 	sts	0x0397, r25	; 0x800397 <main_currentPage+0x1>
    14d6:	80 93 96 03 	sts	0x0396, r24	; 0x800396 <main_currentPage>
	sys_init();
    14da:	0e 94 27 0b 	call	0x164e	; 0x164e <sys_init>
	but_init();
    14de:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <but_init>
	timeInit(&Time_min, &Time_ms);
    14e2:	64 e9       	ldi	r22, 0x94	; 148
    14e4:	73 e0       	ldi	r23, 0x03	; 3
    14e6:	82 e9       	ldi	r24, 0x92	; 146
    14e8:	93 e0       	ldi	r25, 0x03	; 3
    14ea:	0e 94 2d 0b 	call	0x165a	; 0x165a <timeInit>
	ADCinit();
    14ee:	0e 94 20 0c 	call	0x1840	; 0x1840 <ADCinit>
}
    14f2:	1f 91       	pop	r17
    14f4:	0f 91       	pop	r16
    14f6:	08 95       	ret

000014f8 <soundEchoCycle>:

void soundEchoCycle(void){
	
	static int count = 0;
	//add here the code for the cycle it needs to perform to trigger all the sound sensors
	if (TCNT1 >= cycleLengthC && count == 0){
    14f8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    14fc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1500:	88 39       	cpi	r24, 0x98	; 152
    1502:	9a 43       	sbci	r25, 0x3A	; 58
    1504:	88 f0       	brcs	.+34     	; 0x1528 <soundEchoCycle+0x30>
    1506:	80 91 90 03 	lds	r24, 0x0390	; 0x800390 <count.8814>
    150a:	90 91 91 03 	lds	r25, 0x0391	; 0x800391 <count.8814+0x1>
    150e:	89 2b       	or	r24, r25
    1510:	59 f4       	brne	.+22     	; 0x1528 <soundEchoCycle+0x30>
		sendTriggPulse(TRIGG1);
    1512:	84 e0       	ldi	r24, 0x04	; 4
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	0e 94 bd 07 	call	0xf7a	; 0xf7a <sendTriggPulse>
		count = 1;
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	90 93 91 03 	sts	0x0391, r25	; 0x800391 <count.8814+0x1>
    1522:	80 93 90 03 	sts	0x0390, r24	; 0x800390 <count.8814>
    1526:	15 c0       	rjmp	.+42     	; 0x1552 <soundEchoCycle+0x5a>
	}
	else if(TCNT1 >= cycleLengthC && count == 1){
    1528:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    152c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1530:	88 39       	cpi	r24, 0x98	; 152
    1532:	9a 43       	sbci	r25, 0x3A	; 58
    1534:	70 f0       	brcs	.+28     	; 0x1552 <soundEchoCycle+0x5a>
    1536:	80 91 90 03 	lds	r24, 0x0390	; 0x800390 <count.8814>
    153a:	90 91 91 03 	lds	r25, 0x0391	; 0x800391 <count.8814+0x1>
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	41 f4       	brne	.+16     	; 0x1552 <soundEchoCycle+0x5a>
		sendTriggPulse(TRIGG0);
    1542:	82 e0       	ldi	r24, 0x02	; 2
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	0e 94 bd 07 	call	0xf7a	; 0xf7a <sendTriggPulse>
		count = 0;
    154a:	10 92 91 03 	sts	0x0391, r1	; 0x800391 <count.8814+0x1>
    154e:	10 92 90 03 	sts	0x0390, r1	; 0x800390 <count.8814>
	}
	angleCalculator();
    1552:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <angleCalculator>
    1556:	08 95       	ret

00001558 <main>:

int main()
{
	
	
	initBluetooth(Settings);	
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	91 e0       	ldi	r25, 0x01	; 1
    155c:	0e 94 dc 21 	call	0x43b8	; 0x43b8 <initBluetooth>
		
	setup_display();
    1560:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <setup_display>
	
	initDistanceSensor(&distance, &angle_deg);//the default pins are setup in soundsensor.h
    1564:	68 e9       	ldi	r22, 0x98	; 152
    1566:	73 e0       	ldi	r23, 0x03	; 3
    1568:	8a e0       	ldi	r24, 0x0A	; 10
    156a:	91 e0       	ldi	r25, 0x01	; 1
    156c:	0e 94 a1 07 	call	0xf42	; 0xf42 <initDistanceSensor>
	
	sei();
    1570:	78 94       	sei


	while(1){
		
		screenRoutine();//function for updating the display.
    1572:	0e 94 f4 13 	call	0x27e8	; 0x27e8 <screenRoutine>
		
		
		soundEchoCycle();
    1576:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <soundEchoCycle>
    157a:	fb cf       	rjmp	.-10     	; 0x1572 <main+0x1a>

0000157c <u8g2_setup>:
unsigned int *pTime_min;

#define Time_cal 305 //ms calibration

int8_t * u8g2_setup(int pSettings[settings], int *pSpeed, int *pDirection, int *pDistance, int *pangdeg)
{
    157c:	0f 93       	push	r16
    157e:	1f 93       	push	r17
	settingVal = &pSettings[0];
    1580:	90 93 e1 04 	sts	0x04E1, r25	; 0x8004e1 <settingVal+0x1>
    1584:	80 93 e0 04 	sts	0x04E0, r24	; 0x8004e0 <settingVal>
	angleHold = pangdeg;
    1588:	10 93 7a 05 	sts	0x057A, r17	; 0x80057a <angleHold+0x1>
    158c:	00 93 79 05 	sts	0x0579, r16	; 0x800579 <angleHold>
	speedHold = pSpeed;
    1590:	70 93 e3 04 	sts	0x04E3, r23	; 0x8004e3 <speedHold+0x1>
    1594:	60 93 e2 04 	sts	0x04E2, r22	; 0x8004e2 <speedHold>
	directionHold = pDirection;
    1598:	50 93 67 05 	sts	0x0567, r21	; 0x800567 <directionHold+0x1>
    159c:	40 93 66 05 	sts	0x0566, r20	; 0x800566 <directionHold>
	distanceHold = pDistance;
    15a0:	30 93 63 05 	sts	0x0563, r19	; 0x800563 <distanceHold+0x1>
    15a4:	20 93 62 05 	sts	0x0562, r18	; 0x800562 <distanceHold>
	
	//u8g2_Setup_ssd1306_i2c_128x64_noname_f(&u8g2, U8G2_R0, u8x8_byte_avr_hw_i2c, u8x8_avr_delay);
	u8g2_Setup_ssd1306_i2c_128x64_noname_2(&u8g2, U8G2_R0, u8x8_byte_avr_hw_i2c, u8x8_avr_delay);
    15a8:	26 e9       	ldi	r18, 0x96	; 150
    15aa:	3e e1       	ldi	r19, 0x1E	; 30
    15ac:	4b e5       	ldi	r20, 0x5B	; 91
    15ae:	5e e1       	ldi	r21, 0x1E	; 30
    15b0:	63 e6       	ldi	r22, 0x63	; 99
    15b2:	72 e0       	ldi	r23, 0x02	; 2
    15b4:	82 ef       	ldi	r24, 0xF2	; 242
    15b6:	94 e0       	ldi	r25, 0x04	; 4
    15b8:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <u8g2_Setup_ssd1306_i2c_128x64_noname_2>
	
	u8g2_SetI2CAddress(&u8g2, SSD1306_ADDR);
    15bc:	88 e7       	ldi	r24, 0x78	; 120
    15be:	80 93 08 05 	sts	0x0508, r24	; 0x800508 <u8g2+0x16>
	u8g2_InitDisplay(&u8g2);
    15c2:	82 ef       	ldi	r24, 0xF2	; 242
    15c4:	94 e0       	ldi	r25, 0x04	; 4
    15c6:	0e 94 93 20 	call	0x4126	; 0x4126 <u8x8_InitDisplay>
	u8g2_SetPowerSave(&u8g2, 0);
    15ca:	60 e0       	ldi	r22, 0x00	; 0
    15cc:	82 ef       	ldi	r24, 0xF2	; 242
    15ce:	94 e0       	ldi	r25, 0x04	; 4
    15d0:	0e 94 9e 20 	call	0x413c	; 0x413c <u8x8_SetPowerSave>
	
	screenDiv = screenDiv / screenDivholder;//for better resolution
    15d4:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <screenDivholder>
    15d8:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <screenDivholder+0x1>
    15dc:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <screenDivholder+0x2>
    15e0:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <screenDivholder+0x3>
    15e4:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <screenDiv>
    15e8:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <screenDiv+0x1>
    15ec:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <screenDiv+0x2>
    15f0:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <screenDiv+0x3>
    15f4:	0e 94 c2 23 	call	0x4784	; 0x4784 <__divsf3>
    15f8:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <screenDiv>
    15fc:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <screenDiv+0x1>
    1600:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <screenDiv+0x2>
    1604:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <screenDiv+0x3>

	u8g2_SetFont(&u8g2, u8g2_font_6x10_tf);
    1608:	66 e9       	ldi	r22, 0x96	; 150
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	82 ef       	ldi	r24, 0xF2	; 242
    160e:	94 e0       	ldi	r25, 0x04	; 4
    1610:	0e 94 2c 1c 	call	0x3858	; 0x3858 <u8g2_SetFont>
	textHeight = u8g2_GetMaxCharHeight(&u8g2);
    1614:	80 91 42 05 	lds	r24, 0x0542	; 0x800542 <u8g2+0x50>
    1618:	80 93 57 05 	sts	0x0557, r24	; 0x800557 <textHeight>
	maxCharWidth = u8g2_GetMaxCharWidth(&u8g2);
    161c:	80 91 41 05 	lds	r24, 0x0541	; 0x800541 <u8g2+0x4f>
    1620:	80 93 d0 04 	sts	0x04D0, r24	; 0x8004d0 <maxCharWidth>
	
	u8g2_SetFontDirection(&u8g2, 0);//0: 0deg 1:90deg 2: 180deg 3: 270deg
    1624:	60 e0       	ldi	r22, 0x00	; 0
    1626:	82 ef       	ldi	r24, 0xF2	; 242
    1628:	94 e0       	ldi	r25, 0x04	; 4
    162a:	0e 94 49 1c 	call	0x3892	; 0x3892 <u8g2_SetFontDirection>
	
	selections[MENUPAGE] = menuChoices;
    162e:	ea e6       	ldi	r30, 0x6A	; 106
    1630:	f5 e0       	ldi	r31, 0x05	; 5
    1632:	84 e0       	ldi	r24, 0x04	; 4
    1634:	81 83       	std	Z+1, r24	; 0x01
	selections[SETTINGPAGE] = settings;
    1636:	85 e0       	ldi	r24, 0x05	; 5
    1638:	85 83       	std	Z+5, r24	; 0x05
	selectionsVis[MENUPAGE] = menuChoicesVis;
    163a:	e8 e5       	ldi	r30, 0x58	; 88
    163c:	f5 e0       	ldi	r31, 0x05	; 5
    163e:	93 e0       	ldi	r25, 0x03	; 3
    1640:	91 83       	std	Z+1, r25	; 0x01
	selectionsVis[SETTINGPAGE] = settingsVis;
    1642:	85 83       	std	Z+5, r24	; 0x05
	return &currentPage;
}
    1644:	8f ea       	ldi	r24, 0xAF	; 175
    1646:	93 e0       	ldi	r25, 0x03	; 3
    1648:	1f 91       	pop	r17
    164a:	0f 91       	pop	r16
    164c:	08 95       	ret

0000164e <sys_init>:

void sys_init(void)
{
	#if defined(__AVR__)
	/* select minimal prescaler (max system speed) */
	CLKPR = 0x80;
    164e:	e1 e6       	ldi	r30, 0x61	; 97
    1650:	f0 e0       	ldi	r31, 0x00	; 0
    1652:	80 e8       	ldi	r24, 0x80	; 128
    1654:	80 83       	st	Z, r24
	CLKPR = 0x00;
    1656:	10 82       	st	Z, r1
    1658:	08 95       	ret

0000165a <timeInit>:
}

//Time________________________________________________________________________________________________________________________________________________

void timeInit(unsigned int *ptime_min, unsigned int *ptime_ms){
	pTime_min = ptime_min;
    165a:	90 93 e5 04 	sts	0x04E5, r25	; 0x8004e5 <pTime_min+0x1>
    165e:	80 93 e4 04 	sts	0x04E4, r24	; 0x8004e4 <pTime_min>
	pTime_ms = ptime_ms;
    1662:	70 93 f1 04 	sts	0x04F1, r23	; 0x8004f1 <pTime_ms+0x1>
    1666:	60 93 f0 04 	sts	0x04F0, r22	; 0x8004f0 <pTime_ms>
	TCCR0B |= (1<<CS00) | (1<<CS01);
    166a:	85 b5       	in	r24, 0x25	; 37
    166c:	83 60       	ori	r24, 0x03	; 3
    166e:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1<<OCIE0B);
    1670:	ee e6       	ldi	r30, 0x6E	; 110
    1672:	f0 e0       	ldi	r31, 0x00	; 0
    1674:	80 81       	ld	r24, Z
    1676:	84 60       	ori	r24, 0x04	; 4
    1678:	80 83       	st	Z, r24
	OCR0B = 250;//to attain roughly 1 ms for every overflow. this roughness gets calibrated further in the code.
    167a:	8a ef       	ldi	r24, 0xFA	; 250
    167c:	88 bd       	out	0x28, r24	; 40
    167e:	08 95       	ret

00001680 <__vector_15>:
}



ISR(TIMER0_COMPB_vect){
    1680:	1f 92       	push	r1
    1682:	0f 92       	push	r0
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	0f 92       	push	r0
    1688:	11 24       	eor	r1, r1
    168a:	2f 93       	push	r18
    168c:	3f 93       	push	r19
    168e:	4f 93       	push	r20
    1690:	5f 93       	push	r21
    1692:	8f 93       	push	r24
    1694:	9f 93       	push	r25
    1696:	ef 93       	push	r30
    1698:	ff 93       	push	r31
	//this routine updates the time variables.
	static int rCount = 0;
	
	if (_Time_ms >= 60000){
    169a:	80 91 68 05 	lds	r24, 0x0568	; 0x800568 <_Time_ms>
    169e:	90 91 69 05 	lds	r25, 0x0569	; 0x800569 <_Time_ms+0x1>
    16a2:	80 36       	cpi	r24, 0x60	; 96
    16a4:	2a ee       	ldi	r18, 0xEA	; 234
    16a6:	92 07       	cpc	r25, r18
    16a8:	b8 f0       	brcs	.+46     	; 0x16d8 <__vector_15+0x58>
		_Time_ms = Time_cal-117;//Formula for the minutes. pTime_ms = (Time_cal-c): c = 0.615384615*Time_cal
    16aa:	8c eb       	ldi	r24, 0xBC	; 188
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	90 93 69 05 	sts	0x0569, r25	; 0x800569 <_Time_ms+0x1>
    16b2:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <_Time_ms>
		_Time_min++;
    16b6:	80 91 64 05 	lds	r24, 0x0564	; 0x800564 <_Time_min>
    16ba:	90 91 65 05 	lds	r25, 0x0565	; 0x800565 <_Time_min+0x1>
    16be:	01 96       	adiw	r24, 0x01	; 1
    16c0:	90 93 65 05 	sts	0x0565, r25	; 0x800565 <_Time_min+0x1>
    16c4:	80 93 64 05 	sts	0x0564, r24	; 0x800564 <_Time_min>
		rCount = 0;
    16c8:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <rCount.9238+0x1>
    16cc:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <rCount.9238>
		reDrawRequiredTime = 1; //update the screen so the overlay shows the right minutes.
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <reDrawRequiredTime>
    16d6:	18 c0       	rjmp	.+48     	; 0x1708 <__vector_15+0x88>
	}else if (rCount++ >= 13000)
    16d8:	20 91 a9 03 	lds	r18, 0x03A9	; 0x8003a9 <rCount.9238>
    16dc:	30 91 aa 03 	lds	r19, 0x03AA	; 0x8003aa <rCount.9238+0x1>
    16e0:	a9 01       	movw	r20, r18
    16e2:	4f 5f       	subi	r20, 0xFF	; 255
    16e4:	5f 4f       	sbci	r21, 0xFF	; 255
    16e6:	50 93 aa 03 	sts	0x03AA, r21	; 0x8003aa <rCount.9238+0x1>
    16ea:	40 93 a9 03 	sts	0x03A9, r20	; 0x8003a9 <rCount.9238>
    16ee:	28 3c       	cpi	r18, 0xC8	; 200
    16f0:	32 43       	sbci	r19, 0x32	; 50
    16f2:	54 f0       	brlt	.+20     	; 0x1708 <__vector_15+0x88>
	{
		_Time_ms = _Time_ms + Time_cal;
    16f4:	8f 5c       	subi	r24, 0xCF	; 207
    16f6:	9e 4f       	sbci	r25, 0xFE	; 254
    16f8:	90 93 69 05 	sts	0x0569, r25	; 0x800569 <_Time_ms+0x1>
    16fc:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <_Time_ms>
		rCount = 0;
    1700:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <rCount.9238+0x1>
    1704:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <rCount.9238>
	}

	_Time_ms++;
    1708:	80 91 68 05 	lds	r24, 0x0568	; 0x800568 <_Time_ms>
    170c:	90 91 69 05 	lds	r25, 0x0569	; 0x800569 <_Time_ms+0x1>
    1710:	01 96       	adiw	r24, 0x01	; 1
    1712:	90 93 69 05 	sts	0x0569, r25	; 0x800569 <_Time_ms+0x1>
    1716:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <_Time_ms>
	
	*pTime_ms = _Time_ms;
    171a:	e0 91 f0 04 	lds	r30, 0x04F0	; 0x8004f0 <pTime_ms>
    171e:	f0 91 f1 04 	lds	r31, 0x04F1	; 0x8004f1 <pTime_ms+0x1>
    1722:	91 83       	std	Z+1, r25	; 0x01
    1724:	80 83       	st	Z, r24
	*pTime_min = _Time_min;
    1726:	e0 91 e4 04 	lds	r30, 0x04E4	; 0x8004e4 <pTime_min>
    172a:	f0 91 e5 04 	lds	r31, 0x04E5	; 0x8004e5 <pTime_min+0x1>
    172e:	80 91 64 05 	lds	r24, 0x0564	; 0x800564 <_Time_min>
    1732:	90 91 65 05 	lds	r25, 0x0565	; 0x800565 <_Time_min+0x1>
    1736:	91 83       	std	Z+1, r25	; 0x01
    1738:	80 83       	st	Z, r24
}
    173a:	ff 91       	pop	r31
    173c:	ef 91       	pop	r30
    173e:	9f 91       	pop	r25
    1740:	8f 91       	pop	r24
    1742:	5f 91       	pop	r21
    1744:	4f 91       	pop	r20
    1746:	3f 91       	pop	r19
    1748:	2f 91       	pop	r18
    174a:	0f 90       	pop	r0
    174c:	0f be       	out	0x3f, r0	; 63
    174e:	0f 90       	pop	r0
    1750:	1f 90       	pop	r1
    1752:	18 95       	reti

00001754 <getTimeToChar>:

void getTimeToChar(char *s, int TemplateOption){
    1754:	ef 92       	push	r14
    1756:	ff 92       	push	r15
    1758:	0f 93       	push	r16
    175a:	1f 93       	push	r17
    175c:	cf 93       	push	r28
    175e:	df 93       	push	r29
    1760:	00 d0       	rcall	.+0      	; 0x1762 <getTimeToChar+0xe>
    1762:	1f 92       	push	r1
    1764:	cd b7       	in	r28, 0x3d	; 61
    1766:	de b7       	in	r29, 0x3e	; 62
    1768:	8c 01       	movw	r16, r24
    176a:	7b 01       	movw	r14, r22
	//pTime_min and pTime_ms are global variables.
	strcpy(s, ""); // empty string s
    176c:	fc 01       	movw	r30, r24
    176e:	10 82       	st	Z, r1
	char Buff[3] = {0, 0, 0};
    1770:	19 82       	std	Y+1, r1	; 0x01
    1772:	1a 82       	std	Y+2, r1	; 0x02
    1774:	1b 82       	std	Y+3, r1	; 0x03
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    1776:	4a e0       	ldi	r20, 0x0A	; 10
    1778:	be 01       	movw	r22, r28
    177a:	6f 5f       	subi	r22, 0xFF	; 255
    177c:	7f 4f       	sbci	r23, 0xFF	; 255
    177e:	80 91 64 05 	lds	r24, 0x0564	; 0x800564 <_Time_min>
    1782:	90 91 65 05 	lds	r25, 0x0565	; 0x800565 <_Time_min+0x1>
    1786:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
	
	itoa(_Time_min, Buff, 10);
	
	if(_Time_min < 10){
    178a:	80 91 64 05 	lds	r24, 0x0564	; 0x800564 <_Time_min>
    178e:	90 91 65 05 	lds	r25, 0x0565	; 0x800565 <_Time_min+0x1>
    1792:	0a 97       	sbiw	r24, 0x0a	; 10
    1794:	48 f4       	brcc	.+18     	; 0x17a8 <getTimeToChar+0x54>
		strcat(s, "0");
    1796:	f8 01       	movw	r30, r16
    1798:	01 90       	ld	r0, Z+
    179a:	00 20       	and	r0, r0
    179c:	e9 f7       	brne	.-6      	; 0x1798 <getTimeToChar+0x44>
    179e:	31 97       	sbiw	r30, 0x01	; 1
    17a0:	80 e3       	ldi	r24, 0x30	; 48
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	91 83       	std	Z+1, r25	; 0x01
    17a6:	80 83       	st	Z, r24
	}
	strcat(s, Buff);
    17a8:	be 01       	movw	r22, r28
    17aa:	6f 5f       	subi	r22, 0xFF	; 255
    17ac:	7f 4f       	sbci	r23, 0xFF	; 255
    17ae:	c8 01       	movw	r24, r16
    17b0:	0e 94 f9 25 	call	0x4bf2	; 0x4bf2 <strcat>
    17b4:	20 91 68 05 	lds	r18, 0x0568	; 0x800568 <_Time_ms>
    17b8:	30 91 69 05 	lds	r19, 0x0569	; 0x800569 <_Time_ms+0x1>
    17bc:	36 95       	lsr	r19
    17be:	27 95       	ror	r18
    17c0:	36 95       	lsr	r19
    17c2:	27 95       	ror	r18
    17c4:	36 95       	lsr	r19
    17c6:	27 95       	ror	r18
    17c8:	a5 ec       	ldi	r26, 0xC5	; 197
    17ca:	b0 e2       	ldi	r27, 0x20	; 32
    17cc:	0e 94 e3 25 	call	0x4bc6	; 0x4bc6 <__umulhisi3>
    17d0:	4a e0       	ldi	r20, 0x0A	; 10
    17d2:	be 01       	movw	r22, r28
    17d4:	6f 5f       	subi	r22, 0xFF	; 255
    17d6:	7f 4f       	sbci	r23, 0xFF	; 255
    17d8:	92 95       	swap	r25
    17da:	82 95       	swap	r24
    17dc:	8f 70       	andi	r24, 0x0F	; 15
    17de:	89 27       	eor	r24, r25
    17e0:	9f 70       	andi	r25, 0x0F	; 15
    17e2:	89 27       	eor	r24, r25
    17e4:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
	
	itoa((_Time_ms/1000), Buff, 10);
	strcat(s, ":");
    17e8:	f8 01       	movw	r30, r16
    17ea:	01 90       	ld	r0, Z+
    17ec:	00 20       	and	r0, r0
    17ee:	e9 f7       	brne	.-6      	; 0x17ea <getTimeToChar+0x96>
    17f0:	31 97       	sbiw	r30, 0x01	; 1
    17f2:	8a e3       	ldi	r24, 0x3A	; 58
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	91 83       	std	Z+1, r25	; 0x01
    17f8:	80 83       	st	Z, r24
	
	switch (TemplateOption){
    17fa:	ea 94       	dec	r14
    17fc:	ef 28       	or	r14, r15
    17fe:	b1 f4       	brne	.+44     	; 0x182c <getTimeToChar+0xd8>
		//only have the minutes:> 00:
		break;
		
		case 1:
		//include minutes and seconds:> 00:00
		if(_Time_ms/1000 < 10){
    1800:	80 91 68 05 	lds	r24, 0x0568	; 0x800568 <_Time_ms>
    1804:	90 91 69 05 	lds	r25, 0x0569	; 0x800569 <_Time_ms+0x1>
    1808:	80 31       	cpi	r24, 0x10	; 16
    180a:	97 42       	sbci	r25, 0x27	; 39
    180c:	48 f4       	brcc	.+18     	; 0x1820 <getTimeToChar+0xcc>
			strcat(s, "0");
    180e:	f8 01       	movw	r30, r16
    1810:	01 90       	ld	r0, Z+
    1812:	00 20       	and	r0, r0
    1814:	e9 f7       	brne	.-6      	; 0x1810 <getTimeToChar+0xbc>
    1816:	31 97       	sbiw	r30, 0x01	; 1
    1818:	80 e3       	ldi	r24, 0x30	; 48
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	91 83       	std	Z+1, r25	; 0x01
    181e:	80 83       	st	Z, r24
		}
		strcat(s, Buff);
    1820:	be 01       	movw	r22, r28
    1822:	6f 5f       	subi	r22, 0xFF	; 255
    1824:	7f 4f       	sbci	r23, 0xFF	; 255
    1826:	c8 01       	movw	r24, r16
    1828:	0e 94 f9 25 	call	0x4bf2	; 0x4bf2 <strcat>
		break;
	}
}
    182c:	0f 90       	pop	r0
    182e:	0f 90       	pop	r0
    1830:	0f 90       	pop	r0
    1832:	df 91       	pop	r29
    1834:	cf 91       	pop	r28
    1836:	1f 91       	pop	r17
    1838:	0f 91       	pop	r16
    183a:	ff 90       	pop	r15
    183c:	ef 90       	pop	r14
    183e:	08 95       	ret

00001840 <ADCinit>:


//Battery_____________________________________________________________________________________________________________________________________________
void ADCinit(void){
	ADMUX |= (1<<REFS0) | (1<<MUX1);
    1840:	ec e7       	ldi	r30, 0x7C	; 124
    1842:	f0 e0       	ldi	r31, 0x00	; 0
    1844:	80 81       	ld	r24, Z
    1846:	82 64       	ori	r24, 0x42	; 66
    1848:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN) | (1<<ADSC) | (1<<ADATE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
    184a:	ea e7       	ldi	r30, 0x7A	; 122
    184c:	f0 e0       	ldi	r31, 0x00	; 0
    184e:	80 81       	ld	r24, Z
    1850:	87 6e       	ori	r24, 0xE7	; 231
    1852:	80 83       	st	Z, r24
    1854:	08 95       	ret

00001856 <updateBatterySens>:
	
}

int updateBatterySens(){
	static int ADCval = 0;
	ADCval = ADC;
    1856:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
    185a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
	//mimicking a battery voltage by a pot meter.

	return ADCval;
}
    185e:	08 95       	ret

00001860 <choiceAdder>:
		
		reDrawRequiredTime = 0;
	}
}

void choiceAdder(int8_t addValue){ //change the selection in the menu
    1860:	cf 93       	push	r28
    1862:	df 93       	push	r29
	currentChoice[currentPage] += addValue;
    1864:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <currentPage>
    1868:	02 2e       	mov	r0, r18
    186a:	00 0c       	add	r0, r0
    186c:	33 0b       	sbc	r19, r19
    186e:	f9 01       	movw	r30, r18
    1870:	ef 52       	subi	r30, 0x2F	; 47
    1872:	fb 4f       	sbci	r31, 0xFB	; 251
    1874:	90 81       	ld	r25, Z
    1876:	98 0f       	add	r25, r24
    1878:	90 83       	st	Z, r25
	
	if(selectEnable == 1){
    187a:	40 91 7b 05 	lds	r20, 0x057B	; 0x80057b <selectEnable>
    187e:	44 23       	and	r20, r20
    1880:	09 f4       	brne	.+2      	; 0x1884 <choiceAdder+0x24>
    1882:	5a c0       	rjmp	.+180    	; 0x1938 <choiceAdder+0xd8>
		if (currentChoice[currentPage] > selections[currentPage]-1)
    1884:	f9 01       	movw	r30, r18
    1886:	e6 59       	subi	r30, 0x96	; 150
    1888:	fa 4f       	sbci	r31, 0xFA	; 250
    188a:	e0 81       	ld	r30, Z
    188c:	4e 2f       	mov	r20, r30
    188e:	0e 2e       	mov	r0, r30
    1890:	00 0c       	add	r0, r0
    1892:	55 0b       	sbc	r21, r21
    1894:	41 50       	subi	r20, 0x01	; 1
    1896:	51 09       	sbc	r21, r1
    1898:	69 2f       	mov	r22, r25
    189a:	09 2e       	mov	r0, r25
    189c:	00 0c       	add	r0, r0
    189e:	77 0b       	sbc	r23, r23
    18a0:	46 17       	cp	r20, r22
    18a2:	57 07       	cpc	r21, r23
    18a4:	4c f4       	brge	.+18     	; 0x18b8 <choiceAdder+0x58>
		{
			currentChoice[currentPage] = 0;
    18a6:	f9 01       	movw	r30, r18
    18a8:	ef 52       	subi	r30, 0x2F	; 47
    18aa:	fb 4f       	sbci	r31, 0xFB	; 251
    18ac:	10 82       	st	Z, r1
			Scroll[currentPage] = 0;
    18ae:	f9 01       	movw	r30, r18
    18b0:	ea 51       	subi	r30, 0x1A	; 26
    18b2:	fb 4f       	sbci	r31, 0xFB	; 251
    18b4:	10 82       	st	Z, r1
    18b6:	11 c0       	rjmp	.+34     	; 0x18da <choiceAdder+0x7a>
		}
		if (currentChoice[currentPage] < 0)
    18b8:	99 23       	and	r25, r25
    18ba:	7c f4       	brge	.+30     	; 0x18da <choiceAdder+0x7a>
		{
			currentChoice[currentPage] = selections[currentPage]-1;
    18bc:	d9 01       	movw	r26, r18
    18be:	af 52       	subi	r26, 0x2F	; 47
    18c0:	bb 4f       	sbci	r27, 0xFB	; 251
    18c2:	9f ef       	ldi	r25, 0xFF	; 255
    18c4:	9e 0f       	add	r25, r30
    18c6:	9c 93       	st	X, r25
			Scroll[currentPage] = selectionsVis[currentPage] - selections[currentPage];
    18c8:	d9 01       	movw	r26, r18
    18ca:	aa 51       	subi	r26, 0x1A	; 26
    18cc:	bb 4f       	sbci	r27, 0xFB	; 251
    18ce:	e9 01       	movw	r28, r18
    18d0:	c8 5a       	subi	r28, 0xA8	; 168
    18d2:	da 4f       	sbci	r29, 0xFA	; 250
    18d4:	98 81       	ld	r25, Y
    18d6:	9e 1b       	sub	r25, r30
    18d8:	9c 93       	st	X, r25
		}
		if(currentChoice[currentPage] >= selectionsVis[currentPage] - Scroll[currentPage]){
    18da:	f9 01       	movw	r30, r18
    18dc:	ef 52       	subi	r30, 0x2F	; 47
    18de:	fb 4f       	sbci	r31, 0xFB	; 251
    18e0:	60 81       	ld	r22, Z
    18e2:	06 2e       	mov	r0, r22
    18e4:	00 0c       	add	r0, r0
    18e6:	77 0b       	sbc	r23, r23
    18e8:	f9 01       	movw	r30, r18
    18ea:	ea 51       	subi	r30, 0x1A	; 26
    18ec:	fb 4f       	sbci	r31, 0xFB	; 251
    18ee:	90 81       	ld	r25, Z
    18f0:	f9 01       	movw	r30, r18
    18f2:	e8 5a       	subi	r30, 0xA8	; 168
    18f4:	fa 4f       	sbci	r31, 0xFA	; 250
    18f6:	40 81       	ld	r20, Z
    18f8:	04 2e       	mov	r0, r20
    18fa:	00 0c       	add	r0, r0
    18fc:	55 0b       	sbc	r21, r21
    18fe:	49 1b       	sub	r20, r25
    1900:	51 09       	sbc	r21, r1
    1902:	97 fd       	sbrc	r25, 7
    1904:	53 95       	inc	r21
    1906:	64 17       	cp	r22, r20
    1908:	75 07       	cpc	r23, r21
    190a:	2c f0       	brlt	.+10     	; 0x1916 <choiceAdder+0xb6>
			Scroll[currentPage] += -addValue;
    190c:	f9 01       	movw	r30, r18
    190e:	ea 51       	subi	r30, 0x1A	; 26
    1910:	fb 4f       	sbci	r31, 0xFB	; 251
    1912:	98 1b       	sub	r25, r24
    1914:	90 83       	st	Z, r25
		}
		if (currentChoice[currentPage] < -Scroll[currentPage]){
    1916:	f9 01       	movw	r30, r18
    1918:	ea 51       	subi	r30, 0x1A	; 26
    191a:	fb 4f       	sbci	r31, 0xFB	; 251
    191c:	90 81       	ld	r25, Z
    191e:	e9 2f       	mov	r30, r25
    1920:	ff 27       	eor	r31, r31
    1922:	e1 95       	neg	r30
    1924:	0c f4       	brge	.+2      	; 0x1928 <choiceAdder+0xc8>
    1926:	f0 95       	com	r31
    1928:	6e 17       	cp	r22, r30
    192a:	7f 07       	cpc	r23, r31
    192c:	2c f4       	brge	.+10     	; 0x1938 <choiceAdder+0xd8>
			Scroll[currentPage] += -addValue;
    192e:	f9 01       	movw	r30, r18
    1930:	ea 51       	subi	r30, 0x1A	; 26
    1932:	fb 4f       	sbci	r31, 0xFB	; 251
    1934:	98 1b       	sub	r25, r24
    1936:	90 83       	st	Z, r25
		}
	}
}
    1938:	df 91       	pop	r29
    193a:	cf 91       	pop	r28
    193c:	08 95       	ret

0000193e <pageHistory>:
int8_t pageHistory(_Bool GetPrevpage, int pageNum){
	#define historyBuff 4
	static short history[historyBuff];//initialize first page in case you don't use the start up screen.
	static short i = -1;
	
	if (!GetPrevpage)
    193e:	81 11       	cpse	r24, r1
    1940:	15 c0       	rjmp	.+42     	; 0x196c <pageHistory+0x2e>
	{
		if (i < historyBuff-1){
    1942:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <i.9269>
    1946:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <i.9269+0x1>
    194a:	83 30       	cpi	r24, 0x03	; 3
    194c:	91 05       	cpc	r25, r1
    194e:	44 f5       	brge	.+80     	; 0x19a0 <pageHistory+0x62>
			history[++i] = pageNum;
    1950:	01 96       	adiw	r24, 0x01	; 1
    1952:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <i.9269+0x1>
    1956:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <i.9269>
    195a:	88 0f       	add	r24, r24
    195c:	99 1f       	adc	r25, r25
    195e:	fc 01       	movw	r30, r24
    1960:	ef 55       	subi	r30, 0x5F	; 95
    1962:	fc 4f       	sbci	r31, 0xFC	; 252
    1964:	71 83       	std	Z+1, r23	; 0x01
    1966:	60 83       	st	Z, r22
		}
		return -1;
    1968:	8f ef       	ldi	r24, 0xFF	; 255
    196a:	08 95       	ret
		}else{
		
		if (i <= 0)
    196c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <i.9269>
    1970:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <i.9269+0x1>
    1974:	18 16       	cp	r1, r24
    1976:	19 06       	cpc	r1, r25
    1978:	3c f0       	brlt	.+14     	; 0x1988 <pageHistory+0x4a>
		{
			return history[i];
    197a:	88 0f       	add	r24, r24
    197c:	99 1f       	adc	r25, r25
    197e:	fc 01       	movw	r30, r24
    1980:	ef 55       	subi	r30, 0x5F	; 95
    1982:	fc 4f       	sbci	r31, 0xFC	; 252
    1984:	80 81       	ld	r24, Z
    1986:	08 95       	ret
			}else{
			return history[--i];
    1988:	01 97       	sbiw	r24, 0x01	; 1
    198a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <i.9269+0x1>
    198e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <i.9269>
    1992:	88 0f       	add	r24, r24
    1994:	99 1f       	adc	r25, r25
    1996:	fc 01       	movw	r30, r24
    1998:	ef 55       	subi	r30, 0x5F	; 95
    199a:	fc 4f       	sbci	r31, 0xFC	; 252
    199c:	80 81       	ld	r24, Z
    199e:	08 95       	ret
	if (!GetPrevpage)
	{
		if (i < historyBuff-1){
			history[++i] = pageNum;
		}
		return -1;
    19a0:	8f ef       	ldi	r24, 0xFF	; 255
			return history[i];
			}else{
			return history[--i];
		}
	}
}
    19a2:	08 95       	ret

000019a4 <pageSel>:
}

void pageSel(void){
	//code for managing the pageNumbers
	#define firstPage 2
	if (selectEnable){
    19a4:	80 91 7b 05 	lds	r24, 0x057B	; 0x80057b <selectEnable>
    19a8:	88 23       	and	r24, r24
    19aa:	f9 f0       	breq	.+62     	; 0x19ea <pageSel+0x46>
		if (currentPage == MENUPAGE){
    19ac:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <currentPage>
    19b0:	81 30       	cpi	r24, 0x01	; 1
    19b2:	31 f4       	brne	.+12     	; 0x19c0 <pageSel+0x1c>
			currentPage = currentChoice[MENUPAGE] + firstPage; //increment with two because the menu choice pages start at 2
    19b4:	80 91 d2 04 	lds	r24, 0x04D2	; 0x8004d2 <currentChoice+0x1>
    19b8:	8e 5f       	subi	r24, 0xFE	; 254
    19ba:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <currentPage>
    19be:	0d c0       	rjmp	.+26     	; 0x19da <pageSel+0x36>
			}else if(currentPage == 0){
    19c0:	81 11       	cpse	r24, r1
    19c2:	04 c0       	rjmp	.+8      	; 0x19cc <pageSel+0x28>
			currentPage = MENUPAGE;
    19c4:	81 e0       	ldi	r24, 0x01	; 1
    19c6:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <currentPage>
    19ca:	07 c0       	rjmp	.+14     	; 0x19da <pageSel+0x36>
			}else{
			if(currentPage == 5){
    19cc:	85 30       	cpi	r24, 0x05	; 5
    19ce:	29 f4       	brne	.+10     	; 0x19da <pageSel+0x36>
				currentPage = currentChoice[5]+ 1 + 5;
    19d0:	80 91 d6 04 	lds	r24, 0x04D6	; 0x8004d6 <currentChoice+0x5>
    19d4:	8a 5f       	subi	r24, 0xFA	; 250
    19d6:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <currentPage>
			}
			
		}
		pageHistory(0, currentPage);//update page history
    19da:	60 91 af 03 	lds	r22, 0x03AF	; 0x8003af <currentPage>
    19de:	06 2e       	mov	r0, r22
    19e0:	00 0c       	add	r0, r0
    19e2:	77 0b       	sbc	r23, r23
    19e4:	80 e0       	ldi	r24, 0x00	; 0
    19e6:	0e 94 9f 0c 	call	0x193e	; 0x193e <pageHistory>
    19ea:	08 95       	ret

000019ec <but_init>:

//the routine that gets run when the pin change interrupt gets triggered on portD for the enabled pins


void but_init(void){
	BUTTON_REG &= ~((1 << DOWN)|(1 << UP)|(1 << SELECT)|(1 << BACK));     // set pinD 4 5 6 and 7 as an input
    19ec:	8a b1       	in	r24, 0x0a	; 10
    19ee:	8f 70       	andi	r24, 0x0F	; 15
    19f0:	8a b9       	out	0x0a, r24	; 10
	// is now an input
	BUTTON_PORT |= (1 << DOWN)|(1 << UP)|(1 << SELECT)|(1 << BACK);    // turn On the Pull-up on all those pins
    19f2:	8b b1       	in	r24, 0x0b	; 11
    19f4:	80 6f       	ori	r24, 0xF0	; 240
    19f6:	8b b9       	out	0x0b, r24	; 11
	// is now an input with pull-up enabled

	if (BUTTON_PORT == PORTB){
    19f8:	9b b1       	in	r25, 0x0b	; 11
    19fa:	85 b1       	in	r24, 0x05	; 5
    19fc:	98 13       	cpse	r25, r24
    19fe:	0b c0       	rjmp	.+22     	; 0x1a16 <but_init+0x2a>
		//interrupt setup
		PCICR |= (1<<PCIE0);
    1a00:	e8 e6       	ldi	r30, 0x68	; 104
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	80 81       	ld	r24, Z
    1a06:	81 60       	ori	r24, 0x01	; 1
    1a08:	80 83       	st	Z, r24
		PCMSK0 |= (1 << DOWN)|(1 << UP)|(1 << SELECT)|(1 << BACK);//enable the pin change interrupts on pinD 4,5,6,7
    1a0a:	eb e6       	ldi	r30, 0x6B	; 107
    1a0c:	f0 e0       	ldi	r31, 0x00	; 0
    1a0e:	80 81       	ld	r24, Z
    1a10:	80 6f       	ori	r24, 0xF0	; 240
    1a12:	80 83       	st	Z, r24
    1a14:	1d c0       	rjmp	.+58     	; 0x1a50 <but_init+0x64>
		
		}else if (BUTTON_PORT == PORTC){
    1a16:	9b b1       	in	r25, 0x0b	; 11
    1a18:	88 b1       	in	r24, 0x08	; 8
    1a1a:	98 13       	cpse	r25, r24
    1a1c:	0b c0       	rjmp	.+22     	; 0x1a34 <but_init+0x48>
		//interrupt setup
		PCICR |= (1<<PCIE1);
    1a1e:	e8 e6       	ldi	r30, 0x68	; 104
    1a20:	f0 e0       	ldi	r31, 0x00	; 0
    1a22:	80 81       	ld	r24, Z
    1a24:	82 60       	ori	r24, 0x02	; 2
    1a26:	80 83       	st	Z, r24
		PCMSK1 |= (1 << DOWN)|(1 << UP)|(1 << SELECT)|(1 << BACK);//enable the pin change interrupts on pinD 4,5,6,7
    1a28:	ec e6       	ldi	r30, 0x6C	; 108
    1a2a:	f0 e0       	ldi	r31, 0x00	; 0
    1a2c:	80 81       	ld	r24, Z
    1a2e:	80 6f       	ori	r24, 0xF0	; 240
    1a30:	80 83       	st	Z, r24
    1a32:	0e c0       	rjmp	.+28     	; 0x1a50 <but_init+0x64>
		
		}else if (BUTTON_PORT == PORTD){
    1a34:	9b b1       	in	r25, 0x0b	; 11
    1a36:	8b b1       	in	r24, 0x0b	; 11
    1a38:	98 13       	cpse	r25, r24
    1a3a:	0a c0       	rjmp	.+20     	; 0x1a50 <but_init+0x64>
		//interrupt setup
		PCICR |= (1<<PCIE2);
    1a3c:	e8 e6       	ldi	r30, 0x68	; 104
    1a3e:	f0 e0       	ldi	r31, 0x00	; 0
    1a40:	80 81       	ld	r24, Z
    1a42:	84 60       	ori	r24, 0x04	; 4
    1a44:	80 83       	st	Z, r24
		PCMSK2 |= (1 << DOWN)|(1 << UP)|(1 << SELECT)|(1 << BACK);//enable the pin change interrupts on pinD 4,5,6,7
    1a46:	ed e6       	ldi	r30, 0x6D	; 109
    1a48:	f0 e0       	ldi	r31, 0x00	; 0
    1a4a:	80 81       	ld	r24, Z
    1a4c:	80 6f       	ori	r24, 0xF0	; 240
    1a4e:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a50:	2f ef       	ldi	r18, 0xFF	; 255
    1a52:	83 ec       	ldi	r24, 0xC3	; 195
    1a54:	99 e0       	ldi	r25, 0x09	; 9
    1a56:	21 50       	subi	r18, 0x01	; 1
    1a58:	80 40       	sbci	r24, 0x00	; 0
    1a5a:	90 40       	sbci	r25, 0x00	; 0
    1a5c:	e1 f7       	brne	.-8      	; 0x1a56 <but_init+0x6a>
    1a5e:	00 c0       	rjmp	.+0      	; 0x1a60 <but_init+0x74>
    1a60:	00 00       	nop
    1a62:	08 95       	ret

00001a64 <updateButtons>:

	_delay_ms(200);//to prevent accidental interrupt triggering/ dirty fix
}

void updateButtons(void){
	switch (keyPressed)
    1a64:	80 91 ce 04 	lds	r24, 0x04CE	; 0x8004ce <keyPressed>
    1a68:	90 91 cf 04 	lds	r25, 0x04CF	; 0x8004cf <keyPressed+0x1>
    1a6c:	85 30       	cpi	r24, 0x05	; 5
    1a6e:	91 05       	cpc	r25, r1
    1a70:	19 f1       	breq	.+70     	; 0x1ab8 <updateButtons+0x54>
    1a72:	1c f4       	brge	.+6      	; 0x1a7a <updateButtons+0x16>
    1a74:	04 97       	sbiw	r24, 0x04	; 4
    1a76:	59 f1       	breq	.+86     	; 0x1ace <updateButtons+0x6a>
    1a78:	08 95       	ret
    1a7a:	86 30       	cpi	r24, 0x06	; 6
    1a7c:	91 05       	cpc	r25, r1
    1a7e:	19 f0       	breq	.+6      	; 0x1a86 <updateButtons+0x22>
    1a80:	07 97       	sbiw	r24, 0x07	; 7
    1a82:	81 f0       	breq	.+32     	; 0x1aa4 <updateButtons+0x40>
    1a84:	08 95       	ret
	{
		case BACK:
		currentPage = pageHistory(1, 0);
    1a86:	60 e0       	ldi	r22, 0x00	; 0
    1a88:	70 e0       	ldi	r23, 0x00	; 0
    1a8a:	81 e0       	ldi	r24, 0x01	; 1
    1a8c:	0e 94 9f 0c 	call	0x193e	; 0x193e <pageHistory>
    1a90:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <currentPage>
		reDrawRequired = 1;
    1a94:	81 e0       	ldi	r24, 0x01	; 1
    1a96:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
		keyPressed = 0;//reset key pressed
    1a9a:	10 92 cf 04 	sts	0x04CF, r1	; 0x8004cf <keyPressed+0x1>
    1a9e:	10 92 ce 04 	sts	0x04CE, r1	; 0x8004ce <keyPressed>
		break;
    1aa2:	08 95       	ret
		
		case SELECT:
		pageSel();
    1aa4:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <pageSel>
		reDrawRequired = 1;
    1aa8:	81 e0       	ldi	r24, 0x01	; 1
    1aaa:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
		keyPressed = 0;
    1aae:	10 92 cf 04 	sts	0x04CF, r1	; 0x8004cf <keyPressed+0x1>
    1ab2:	10 92 ce 04 	sts	0x04CE, r1	; 0x8004ce <keyPressed>
		break;
    1ab6:	08 95       	ret
		
		case UP:
		choiceAdder(-1);
    1ab8:	8f ef       	ldi	r24, 0xFF	; 255
    1aba:	0e 94 30 0c 	call	0x1860	; 0x1860 <choiceAdder>
		reDrawRequired = 1;
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
		keyPressed = 0;
    1ac4:	10 92 cf 04 	sts	0x04CF, r1	; 0x8004cf <keyPressed+0x1>
    1ac8:	10 92 ce 04 	sts	0x04CE, r1	; 0x8004ce <keyPressed>
		break;
    1acc:	08 95       	ret
		
		case DOWN:
		choiceAdder(+1);
    1ace:	81 e0       	ldi	r24, 0x01	; 1
    1ad0:	0e 94 30 0c 	call	0x1860	; 0x1860 <choiceAdder>
		reDrawRequired = 1;
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
		keyPressed = 0;
    1ada:	10 92 cf 04 	sts	0x04CF, r1	; 0x8004cf <keyPressed+0x1>
    1ade:	10 92 ce 04 	sts	0x04CE, r1	; 0x8004ce <keyPressed>
    1ae2:	08 95       	ret

00001ae4 <MenuStyle0>:
}


//pages_______________________________________________________________________________________________________________________________________________

void MenuStyle0(void){
    1ae4:	2f 92       	push	r2
    1ae6:	3f 92       	push	r3
    1ae8:	4f 92       	push	r4
    1aea:	5f 92       	push	r5
    1aec:	6f 92       	push	r6
    1aee:	7f 92       	push	r7
    1af0:	8f 92       	push	r8
    1af2:	9f 92       	push	r9
    1af4:	af 92       	push	r10
    1af6:	bf 92       	push	r11
    1af8:	cf 92       	push	r12
    1afa:	df 92       	push	r13
    1afc:	ef 92       	push	r14
    1afe:	0f 93       	push	r16
    1b00:	cf 93       	push	r28
    1b02:	df 93       	push	r29
    1b04:	00 d0       	rcall	.+0      	; 0x1b06 <MenuStyle0+0x22>
    1b06:	00 d0       	rcall	.+0      	; 0x1b08 <MenuStyle0+0x24>
    1b08:	cd b7       	in	r28, 0x3d	; 61
    1b0a:	de b7       	in	r29, 0x3e	; 62
	//int yStat = (y+(height/2)+3);
	selectEnable = 1;
    1b0c:	81 e0       	ldi	r24, 0x01	; 1
    1b0e:	80 93 7b 05 	sts	0x057B, r24	; 0x80057b <selectEnable>
    1b12:	0f 2e       	mov	r0, r31
    1b14:	f5 e2       	ldi	r31, 0x25	; 37
    1b16:	cf 2e       	mov	r12, r31
    1b18:	f1 e0       	ldi	r31, 0x01	; 1
    1b1a:	df 2e       	mov	r13, r31
    1b1c:	f0 2d       	mov	r31, r0
	int width;
	int x;
	int y;
	
	// menu
	for (int i = 0; i < menuChoices+1; i++){
    1b1e:	1c 82       	std	Y+4, r1	; 0x04
    1b20:	1b 82       	std	Y+3, r1	; 0x03
		if(i == currentChoice[currentPage]){
    1b22:	e0 91 af 03 	lds	r30, 0x03AF	; 0x8003af <currentPage>
    1b26:	0e 2e       	mov	r0, r30
    1b28:	00 0c       	add	r0, r0
    1b2a:	ff 0b       	sbc	r31, r31
    1b2c:	ef 52       	subi	r30, 0x2F	; 47
    1b2e:	fb 4f       	sbci	r31, 0xFB	; 251
    1b30:	80 81       	ld	r24, Z
    1b32:	08 2e       	mov	r0, r24
    1b34:	00 0c       	add	r0, r0
    1b36:	99 0b       	sbc	r25, r25
    1b38:	2b 81       	ldd	r18, Y+3	; 0x03
    1b3a:	3c 81       	ldd	r19, Y+4	; 0x04
    1b3c:	82 17       	cp	r24, r18
    1b3e:	93 07       	cpc	r25, r19
    1b40:	09 f0       	breq	.+2      	; 0x1b44 <MenuStyle0+0x60>
    1b42:	9d c0       	rjmp	.+314    	; 0x1c7e <MenuStyle0+0x19a>
			//x and the y of the boxes
			width = ((currentFrame+1) *(widthCurChoice - widthChoice))/framesNum+widthChoice;
			height = screenDiv - Margin;
    1b44:	40 90 16 01 	lds	r4, 0x0116	; 0x800116 <screenDiv>
    1b48:	50 90 17 01 	lds	r5, 0x0117	; 0x800117 <screenDiv+0x1>
    1b4c:	60 90 18 01 	lds	r6, 0x0118	; 0x800118 <screenDiv+0x2>
    1b50:	70 90 19 01 	lds	r7, 0x0119	; 0x800119 <screenDiv+0x3>
			
			x = (screenWidth/2) - width / 2;
			y = i * screenDiv + TopMargin + (Scroll[MENUPAGE] * screenDiv);
    1b54:	b9 01       	movw	r22, r18
    1b56:	33 0f       	add	r19, r19
    1b58:	88 0b       	sbc	r24, r24
    1b5a:	99 0b       	sbc	r25, r25
    1b5c:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1b60:	a3 01       	movw	r20, r6
    1b62:	92 01       	movw	r18, r4
    1b64:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1b68:	20 e0       	ldi	r18, 0x00	; 0
    1b6a:	30 e0       	ldi	r19, 0x00	; 0
    1b6c:	40 e1       	ldi	r20, 0x10	; 16
    1b6e:	51 e4       	ldi	r21, 0x41	; 65
    1b70:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1b74:	4b 01       	movw	r8, r22
    1b76:	5c 01       	movw	r10, r24
    1b78:	60 91 e7 04 	lds	r22, 0x04E7	; 0x8004e7 <Scroll+0x1>
    1b7c:	06 2e       	mov	r0, r22
    1b7e:	00 0c       	add	r0, r0
    1b80:	77 0b       	sbc	r23, r23
    1b82:	88 0b       	sbc	r24, r24
    1b84:	99 0b       	sbc	r25, r25
    1b86:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1b8a:	a3 01       	movw	r20, r6
    1b8c:	92 01       	movw	r18, r4
    1b8e:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1b92:	9b 01       	movw	r18, r22
    1b94:	ac 01       	movw	r20, r24
    1b96:	c5 01       	movw	r24, r10
    1b98:	b4 01       	movw	r22, r8
    1b9a:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1b9e:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    1ba2:	4b 01       	movw	r8, r22
    1ba4:	5c 01       	movw	r10, r24
			if (y >= TopMargin)
    1ba6:	69 30       	cpi	r22, 0x09	; 9
    1ba8:	71 05       	cpc	r23, r1
    1baa:	0c f4       	brge	.+2      	; 0x1bae <MenuStyle0+0xca>
    1bac:	d6 c0       	rjmp	.+428    	; 0x1d5a <MenuStyle0+0x276>
	
	// menu
	for (int i = 0; i < menuChoices+1; i++){
		if(i == currentChoice[currentPage]){
			//x and the y of the boxes
			width = ((currentFrame+1) *(widthCurChoice - widthChoice))/framesNum+widthChoice;
    1bae:	20 91 ad 03 	lds	r18, 0x03AD	; 0x8003ad <currentFrame>
    1bb2:	30 91 ae 03 	lds	r19, 0x03AE	; 0x8003ae <currentFrame+0x1>
    1bb6:	2f 5f       	subi	r18, 0xFF	; 255
    1bb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1bba:	00 24       	eor	r0, r0
    1bbc:	36 95       	lsr	r19
    1bbe:	27 95       	ror	r18
    1bc0:	07 94       	ror	r0
    1bc2:	36 95       	lsr	r19
    1bc4:	27 95       	ror	r18
    1bc6:	07 94       	ror	r0
    1bc8:	32 2f       	mov	r19, r18
    1bca:	20 2d       	mov	r18, r0
    1bcc:	ab ea       	ldi	r26, 0xAB	; 171
    1bce:	ba ea       	ldi	r27, 0xAA	; 170
    1bd0:	0e 94 e3 25 	call	0x4bc6	; 0x4bc6 <__umulhisi3>
    1bd4:	96 95       	lsr	r25
    1bd6:	87 95       	ror	r24
    1bd8:	1c 01       	movw	r2, r24
    1bda:	ef e3       	ldi	r30, 0x3F	; 63
    1bdc:	2e 0e       	add	r2, r30
    1bde:	31 1c       	adc	r3, r1
			height = screenDiv - Margin;
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	40 e0       	ldi	r20, 0x00	; 0
    1be6:	50 e4       	ldi	r21, 0x40	; 64
    1be8:	c3 01       	movw	r24, r6
    1bea:	b2 01       	movw	r22, r4
    1bec:	0e 94 21 23 	call	0x4642	; 0x4642 <__subsf3>
    1bf0:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    1bf4:	56 2e       	mov	r5, r22
    1bf6:	47 2e       	mov	r4, r23
			
			x = (screenWidth/2) - width / 2;
    1bf8:	31 01       	movw	r6, r2
    1bfa:	33 20       	and	r3, r3
    1bfc:	1c f4       	brge	.+6      	; 0x1c04 <MenuStyle0+0x120>
    1bfe:	ff ef       	ldi	r31, 0xFF	; 255
    1c00:	6f 1a       	sub	r6, r31
    1c02:	7f 0a       	sbc	r7, r31
    1c04:	75 94       	asr	r7
    1c06:	67 94       	ror	r6
			y = i * screenDiv + TopMargin + (Scroll[MENUPAGE] * screenDiv);
			if (y >= TopMargin)
			{
				u8g2_SetDrawColor(&u8g2, 1);
    1c08:	61 e0       	ldi	r22, 0x01	; 1
    1c0a:	82 ef       	ldi	r24, 0xF2	; 242
    1c0c:	94 e0       	ldi	r25, 0x04	; 4
    1c0e:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawRBox(&u8g2, x, y, width, height, MenuBoxRounding);
    1c12:	20 e4       	ldi	r18, 0x40	; 64
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	26 19       	sub	r18, r6
    1c18:	37 09       	sbc	r19, r7
    1c1a:	3a 83       	std	Y+2, r19	; 0x02
    1c1c:	29 83       	std	Y+1, r18	; 0x01
    1c1e:	0f 2e       	mov	r0, r31
    1c20:	f3 e0       	ldi	r31, 0x03	; 3
    1c22:	ef 2e       	mov	r14, r31
    1c24:	f0 2d       	mov	r31, r0
    1c26:	05 2d       	mov	r16, r5
    1c28:	22 2d       	mov	r18, r2
    1c2a:	48 2d       	mov	r20, r8
    1c2c:	69 81       	ldd	r22, Y+1	; 0x01
    1c2e:	82 ef       	ldi	r24, 0xF2	; 242
    1c30:	94 e0       	ldi	r25, 0x04	; 4
    1c32:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <u8g2_DrawRBox>

				u8g2_SetDrawColor(&u8g2, 0);
    1c36:	60 e0       	ldi	r22, 0x00	; 0
    1c38:	82 ef       	ldi	r24, 0xF2	; 242
    1c3a:	94 e0       	ldi	r25, 0x04	; 4
    1c3c:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawStr(&u8g2, x + (width/2) - u8g2_GetStrWidth(&u8g2, menuStrings[i]) / 2 , y+(height/2)+3, menuStrings[i]);
    1c40:	45 2d       	mov	r20, r5
    1c42:	54 2d       	mov	r21, r4
    1c44:	55 23       	and	r21, r21
    1c46:	14 f4       	brge	.+4      	; 0x1c4c <MenuStyle0+0x168>
    1c48:	4f 5f       	subi	r20, 0xFF	; 255
    1c4a:	5f 4f       	sbci	r21, 0xFF	; 255
    1c4c:	55 95       	asr	r21
    1c4e:	47 95       	ror	r20
    1c50:	4d 5f       	subi	r20, 0xFD	; 253
    1c52:	74 2e       	mov	r7, r20
    1c54:	78 0c       	add	r7, r8
    1c56:	39 81       	ldd	r19, Y+1	; 0x01
    1c58:	63 0e       	add	r6, r19
    1c5a:	f6 01       	movw	r30, r12
    1c5c:	40 80       	ld	r4, Z
    1c5e:	51 80       	ldd	r5, Z+1	; 0x01
    1c60:	b2 01       	movw	r22, r4
    1c62:	82 ef       	ldi	r24, 0xF2	; 242
    1c64:	94 e0       	ldi	r25, 0x04	; 4
    1c66:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    1c6a:	86 95       	lsr	r24
    1c6c:	66 2d       	mov	r22, r6
    1c6e:	68 1b       	sub	r22, r24
    1c70:	92 01       	movw	r18, r4
    1c72:	47 2d       	mov	r20, r7
    1c74:	82 ef       	ldi	r24, 0xF2	; 242
    1c76:	94 e0       	ldi	r25, 0x04	; 4
    1c78:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
    1c7c:	6e c0       	rjmp	.+220    	; 0x1d5a <MenuStyle0+0x276>
			
			}else{
			//x and the y of the boxes
			
			width = widthChoice;
			height = screenDiv - Margin;
    1c7e:	40 90 16 01 	lds	r4, 0x0116	; 0x800116 <screenDiv>
    1c82:	50 90 17 01 	lds	r5, 0x0117	; 0x800117 <screenDiv+0x1>
    1c86:	60 90 18 01 	lds	r6, 0x0118	; 0x800118 <screenDiv+0x2>
    1c8a:	70 90 19 01 	lds	r7, 0x0119	; 0x800119 <screenDiv+0x3>
			x = (screenWidth/2)-widthChoice/2;
			y = i * screenDiv + TopMargin + (Scroll[MENUPAGE] * screenDiv);
    1c8e:	2b 81       	ldd	r18, Y+3	; 0x03
    1c90:	3c 81       	ldd	r19, Y+4	; 0x04
    1c92:	b9 01       	movw	r22, r18
    1c94:	33 0f       	add	r19, r19
    1c96:	88 0b       	sbc	r24, r24
    1c98:	99 0b       	sbc	r25, r25
    1c9a:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1c9e:	a3 01       	movw	r20, r6
    1ca0:	92 01       	movw	r18, r4
    1ca2:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	40 e1       	ldi	r20, 0x10	; 16
    1cac:	51 e4       	ldi	r21, 0x41	; 65
    1cae:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1cb2:	4b 01       	movw	r8, r22
    1cb4:	5c 01       	movw	r10, r24
    1cb6:	60 91 e7 04 	lds	r22, 0x04E7	; 0x8004e7 <Scroll+0x1>
    1cba:	06 2e       	mov	r0, r22
    1cbc:	00 0c       	add	r0, r0
    1cbe:	77 0b       	sbc	r23, r23
    1cc0:	88 0b       	sbc	r24, r24
    1cc2:	99 0b       	sbc	r25, r25
    1cc4:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1cc8:	a3 01       	movw	r20, r6
    1cca:	92 01       	movw	r18, r4
    1ccc:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1cd0:	9b 01       	movw	r18, r22
    1cd2:	ac 01       	movw	r20, r24
    1cd4:	c5 01       	movw	r24, r10
    1cd6:	b4 01       	movw	r22, r8
    1cd8:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1cdc:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    1ce0:	4b 01       	movw	r8, r22
    1ce2:	5c 01       	movw	r10, r24
			if (y >= TopMargin)
    1ce4:	69 30       	cpi	r22, 0x09	; 9
    1ce6:	71 05       	cpc	r23, r1
    1ce8:	c4 f1       	brlt	.+112    	; 0x1d5a <MenuStyle0+0x276>
			
			}else{
			//x and the y of the boxes
			
			width = widthChoice;
			height = screenDiv - Margin;
    1cea:	20 e0       	ldi	r18, 0x00	; 0
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	40 e0       	ldi	r20, 0x00	; 0
    1cf0:	50 e4       	ldi	r21, 0x40	; 64
    1cf2:	c3 01       	movw	r24, r6
    1cf4:	b2 01       	movw	r22, r4
    1cf6:	0e 94 21 23 	call	0x4642	; 0x4642 <__subsf3>
    1cfa:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    1cfe:	76 2e       	mov	r7, r22
    1d00:	67 2e       	mov	r6, r23
			x = (screenWidth/2)-widthChoice/2;
			y = i * screenDiv + TopMargin + (Scroll[MENUPAGE] * screenDiv);
			if (y >= TopMargin)
			{
				//u8g2_SetDefaultForegroundColor(&u8g2);
				u8g2_SetDrawColor(&u8g2, 1);
    1d02:	61 e0       	ldi	r22, 0x01	; 1
    1d04:	82 ef       	ldi	r24, 0xF2	; 242
    1d06:	94 e0       	ldi	r25, 0x04	; 4
    1d08:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawRFrame(&u8g2, x, y, width, height, MenuBoxRounding);
    1d0c:	0f 2e       	mov	r0, r31
    1d0e:	f3 e0       	ldi	r31, 0x03	; 3
    1d10:	ef 2e       	mov	r14, r31
    1d12:	f0 2d       	mov	r31, r0
    1d14:	07 2d       	mov	r16, r7
    1d16:	20 e4       	ldi	r18, 0x40	; 64
    1d18:	48 2d       	mov	r20, r8
    1d1a:	60 e2       	ldi	r22, 0x20	; 32
    1d1c:	82 ef       	ldi	r24, 0xF2	; 242
    1d1e:	94 e0       	ldi	r25, 0x04	; 4
    1d20:	0e 94 67 15 	call	0x2ace	; 0x2ace <u8g2_DrawRFrame>
				u8g2_DrawStr(&u8g2, x + (width/2) - u8g2_GetStrWidth(&u8g2, menuStrings[i]) / 2, y+(height/2)+3, menuStrings[i]);
    1d24:	87 2d       	mov	r24, r7
    1d26:	96 2d       	mov	r25, r6
    1d28:	99 23       	and	r25, r25
    1d2a:	0c f4       	brge	.+2      	; 0x1d2e <MenuStyle0+0x24a>
    1d2c:	01 96       	adiw	r24, 0x01	; 1
    1d2e:	95 95       	asr	r25
    1d30:	87 95       	ror	r24
    1d32:	8d 5f       	subi	r24, 0xFD	; 253
    1d34:	78 2e       	mov	r7, r24
    1d36:	78 0c       	add	r7, r8
    1d38:	f6 01       	movw	r30, r12
    1d3a:	40 80       	ld	r4, Z
    1d3c:	51 80       	ldd	r5, Z+1	; 0x01
    1d3e:	b2 01       	movw	r22, r4
    1d40:	82 ef       	ldi	r24, 0xF2	; 242
    1d42:	94 e0       	ldi	r25, 0x04	; 4
    1d44:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    1d48:	86 95       	lsr	r24
    1d4a:	60 e4       	ldi	r22, 0x40	; 64
    1d4c:	68 1b       	sub	r22, r24
    1d4e:	92 01       	movw	r18, r4
    1d50:	47 2d       	mov	r20, r7
    1d52:	82 ef       	ldi	r24, 0xF2	; 242
    1d54:	94 e0       	ldi	r25, 0x04	; 4
    1d56:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	int width;
	int x;
	int y;
	
	// menu
	for (int i = 0; i < menuChoices+1; i++){
    1d5a:	2b 81       	ldd	r18, Y+3	; 0x03
    1d5c:	3c 81       	ldd	r19, Y+4	; 0x04
    1d5e:	2f 5f       	subi	r18, 0xFF	; 255
    1d60:	3f 4f       	sbci	r19, 0xFF	; 255
    1d62:	3c 83       	std	Y+4, r19	; 0x04
    1d64:	2b 83       	std	Y+3, r18	; 0x03
    1d66:	32 e0       	ldi	r19, 0x02	; 2
    1d68:	c3 0e       	add	r12, r19
    1d6a:	d1 1c       	adc	r13, r1
    1d6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1d70:	05 97       	sbiw	r24, 0x05	; 5
    1d72:	09 f0       	breq	.+2      	; 0x1d76 <MenuStyle0+0x292>
    1d74:	d6 ce       	rjmp	.-596    	; 0x1b22 <MenuStyle0+0x3e>
			}
		}
	}
	
	//stop drawing when the animation is done
	if (currentFrame++ >= framesNum)
    1d76:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <currentFrame>
    1d7a:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <currentFrame+0x1>
    1d7e:	82 30       	cpi	r24, 0x02	; 2
    1d80:	91 05       	cpc	r25, r1
    1d82:	30 f4       	brcc	.+12     	; 0x1d90 <MenuStyle0+0x2ac>
    1d84:	01 96       	adiw	r24, 0x01	; 1
    1d86:	90 93 ae 03 	sts	0x03AE, r25	; 0x8003ae <currentFrame+0x1>
    1d8a:	80 93 ad 03 	sts	0x03AD, r24	; 0x8003ad <currentFrame>
    1d8e:	06 c0       	rjmp	.+12     	; 0x1d9c <MenuStyle0+0x2b8>
	{
		currentFrame = 0;
    1d90:	10 92 ae 03 	sts	0x03AE, r1	; 0x8003ae <currentFrame+0x1>
    1d94:	10 92 ad 03 	sts	0x03AD, r1	; 0x8003ad <currentFrame>
		reDrawRequired = 0;
    1d98:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <reDrawRequired>
	}
	

}
    1d9c:	0f 90       	pop	r0
    1d9e:	0f 90       	pop	r0
    1da0:	0f 90       	pop	r0
    1da2:	0f 90       	pop	r0
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	0f 91       	pop	r16
    1daa:	ef 90       	pop	r14
    1dac:	df 90       	pop	r13
    1dae:	cf 90       	pop	r12
    1db0:	bf 90       	pop	r11
    1db2:	af 90       	pop	r10
    1db4:	9f 90       	pop	r9
    1db6:	8f 90       	pop	r8
    1db8:	7f 90       	pop	r7
    1dba:	6f 90       	pop	r6
    1dbc:	5f 90       	pop	r5
    1dbe:	4f 90       	pop	r4
    1dc0:	3f 90       	pop	r3
    1dc2:	2f 90       	pop	r2
    1dc4:	08 95       	ret

00001dc6 <MenuStyle1>:

void MenuStyle1(void){
    1dc6:	2f 92       	push	r2
    1dc8:	3f 92       	push	r3
    1dca:	4f 92       	push	r4
    1dcc:	5f 92       	push	r5
    1dce:	6f 92       	push	r6
    1dd0:	7f 92       	push	r7
    1dd2:	8f 92       	push	r8
    1dd4:	9f 92       	push	r9
    1dd6:	af 92       	push	r10
    1dd8:	bf 92       	push	r11
    1dda:	cf 92       	push	r12
    1ddc:	df 92       	push	r13
    1dde:	ef 92       	push	r14
    1de0:	0f 93       	push	r16
    1de2:	1f 93       	push	r17
    1de4:	cf 93       	push	r28
    1de6:	df 93       	push	r29
    1de8:	00 d0       	rcall	.+0      	; 0x1dea <MenuStyle1+0x24>
    1dea:	00 d0       	rcall	.+0      	; 0x1dec <MenuStyle1+0x26>
    1dec:	00 d0       	rcall	.+0      	; 0x1dee <MenuStyle1+0x28>
    1dee:	cd b7       	in	r28, 0x3d	; 61
    1df0:	de b7       	in	r29, 0x3e	; 62
	selectEnable = 1;
    1df2:	81 e0       	ldi	r24, 0x01	; 1
    1df4:	80 93 7b 05 	sts	0x057B, r24	; 0x80057b <selectEnable>
	int width = screenWidth;
	int height = screenDiv;
    1df8:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <screenDiv>
    1dfc:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <screenDiv+0x1>
    1e00:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <screenDiv+0x2>
    1e04:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <screenDiv+0x3>
    1e08:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
	
	int x = ((screenWidth/2) - width / 2);
	int y;
	int yStat = (height/2)+3;
    1e0c:	4b 01       	movw	r8, r22
    1e0e:	77 23       	and	r23, r23
    1e10:	1c f4       	brge	.+6      	; 0x1e18 <MenuStyle1+0x52>
    1e12:	2f ef       	ldi	r18, 0xFF	; 255
    1e14:	82 1a       	sub	r8, r18
    1e16:	92 0a       	sbc	r9, r18
    1e18:	95 94       	asr	r9
    1e1a:	87 94       	ror	r8
    1e1c:	33 e0       	ldi	r19, 0x03	; 3
    1e1e:	83 0e       	add	r8, r19
    1e20:	91 1c       	adc	r9, r1
	height = height - Margin;
    1e22:	1b 01       	movw	r2, r22
    1e24:	e2 e0       	ldi	r30, 0x02	; 2
    1e26:	2e 1a       	sub	r2, r30
    1e28:	31 08       	sbc	r3, r1
    1e2a:	0f 2e       	mov	r0, r31
    1e2c:	f5 e2       	ldi	r31, 0x25	; 37
    1e2e:	cf 2e       	mov	r12, r31
    1e30:	f1 e0       	ldi	r31, 0x01	; 1
    1e32:	df 2e       	mov	r13, r31
    1e34:	f0 2d       	mov	r31, r0
	
	for (int i = 0; i < menuChoices+1; i++){//do one extra to dirty fix lib error. make one menu extra outside scope.
    1e36:	1e 82       	std	Y+6, r1	; 0x06
    1e38:	1d 82       	std	Y+5, r1	; 0x05
				u8g2_SetDrawColor(&u8g2, 0);
				u8g2_DrawStr(&u8g2, x + (width/2) - u8g2_GetStrWidth(&u8g2, menuStrings[i]) / 2, y+yStat, menuStrings[i]);
			}
			}else{

			y = i * screenDiv + TopMargin + (Scroll[MENUPAGE] * screenDiv);
    1e3a:	0f 2e       	mov	r0, r31
    1e3c:	f6 ee       	ldi	r31, 0xE6	; 230
    1e3e:	af 2e       	mov	r10, r31
    1e40:	f4 e0       	ldi	r31, 0x04	; 4
    1e42:	bf 2e       	mov	r11, r31
    1e44:	f0 2d       	mov	r31, r0
			}*/
			if (y >= TopMargin)
			{
				u8g2_SetDrawColor(&u8g2, 1);
				u8g2_DrawRFrame(&u8g2, x, y, width, height, MenuBoxRounding);
				u8g2_DrawStr(&u8g2, x + (width/2) - u8g2_GetStrWidth(&u8g2, menuStrings[i]) / 2, y+yStat, menuStrings[i]);
    1e46:	10 e4       	ldi	r17, 0x40	; 64
	int y;
	int yStat = (height/2)+3;
	height = height - Margin;
	
	for (int i = 0; i < menuChoices+1; i++){//do one extra to dirty fix lib error. make one menu extra outside scope.
		if(currentChoice[currentPage] == i){
    1e48:	e0 91 af 03 	lds	r30, 0x03AF	; 0x8003af <currentPage>
    1e4c:	0e 2e       	mov	r0, r30
    1e4e:	00 0c       	add	r0, r0
    1e50:	ff 0b       	sbc	r31, r31
    1e52:	ef 52       	subi	r30, 0x2F	; 47
    1e54:	fb 4f       	sbci	r31, 0xFB	; 251
    1e56:	80 81       	ld	r24, Z
    1e58:	08 2e       	mov	r0, r24
    1e5a:	00 0c       	add	r0, r0
    1e5c:	99 0b       	sbc	r25, r25
    1e5e:	2d 81       	ldd	r18, Y+5	; 0x05
    1e60:	3e 81       	ldd	r19, Y+6	; 0x06
    1e62:	82 17       	cp	r24, r18
    1e64:	93 07       	cpc	r25, r19
    1e66:	09 f0       	breq	.+2      	; 0x1e6a <MenuStyle1+0xa4>
    1e68:	62 c0       	rjmp	.+196    	; 0x1f2e <MenuStyle1+0x168>
			//x and the y of the boxes
			//width = screenWidth;
			//height = screenDiv - Margin;
			
			// 				x = (screenWidth/2) - width / 2;
			y = i * screenDiv + TopMargin + (Scroll[MENUPAGE] * screenDiv);
    1e6a:	40 90 16 01 	lds	r4, 0x0116	; 0x800116 <screenDiv>
    1e6e:	50 90 17 01 	lds	r5, 0x0117	; 0x800117 <screenDiv+0x1>
    1e72:	60 90 18 01 	lds	r6, 0x0118	; 0x800118 <screenDiv+0x2>
    1e76:	70 90 19 01 	lds	r7, 0x0119	; 0x800119 <screenDiv+0x3>
    1e7a:	b9 01       	movw	r22, r18
    1e7c:	33 0f       	add	r19, r19
    1e7e:	88 0b       	sbc	r24, r24
    1e80:	99 0b       	sbc	r25, r25
    1e82:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1e86:	a3 01       	movw	r20, r6
    1e88:	92 01       	movw	r18, r4
    1e8a:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1e8e:	20 e0       	ldi	r18, 0x00	; 0
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	40 e1       	ldi	r20, 0x10	; 16
    1e94:	51 e4       	ldi	r21, 0x41	; 65
    1e96:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1e9a:	69 83       	std	Y+1, r22	; 0x01
    1e9c:	7a 83       	std	Y+2, r23	; 0x02
    1e9e:	8b 83       	std	Y+3, r24	; 0x03
    1ea0:	9c 83       	std	Y+4, r25	; 0x04
    1ea2:	f5 01       	movw	r30, r10
    1ea4:	61 81       	ldd	r22, Z+1	; 0x01
    1ea6:	06 2e       	mov	r0, r22
    1ea8:	00 0c       	add	r0, r0
    1eaa:	77 0b       	sbc	r23, r23
    1eac:	88 0b       	sbc	r24, r24
    1eae:	99 0b       	sbc	r25, r25
    1eb0:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1eb4:	a3 01       	movw	r20, r6
    1eb6:	92 01       	movw	r18, r4
    1eb8:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1ebc:	9b 01       	movw	r18, r22
    1ebe:	ac 01       	movw	r20, r24
    1ec0:	69 81       	ldd	r22, Y+1	; 0x01
    1ec2:	7a 81       	ldd	r23, Y+2	; 0x02
    1ec4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ec6:	9c 81       	ldd	r25, Y+4	; 0x04
    1ec8:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1ecc:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    1ed0:	2b 01       	movw	r4, r22
    1ed2:	3c 01       	movw	r6, r24
			/*	if (Scroll[MENUPAGE] == -1){
			y -= 2;
			}*/
			
			if (y >= TopMargin)
    1ed4:	69 30       	cpi	r22, 0x09	; 9
    1ed6:	71 05       	cpc	r23, r1
    1ed8:	0c f4       	brge	.+2      	; 0x1edc <MenuStyle1+0x116>
    1eda:	86 c0       	rjmp	.+268    	; 0x1fe8 <MenuStyle1+0x222>
			{
				u8g2_SetDrawColor(&u8g2, 1);
    1edc:	61 e0       	ldi	r22, 0x01	; 1
    1ede:	82 ef       	ldi	r24, 0xF2	; 242
    1ee0:	94 e0       	ldi	r25, 0x04	; 4
    1ee2:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawRBox(&u8g2, x, y, width, height, MenuBoxRounding);
    1ee6:	0f 2e       	mov	r0, r31
    1ee8:	f3 e0       	ldi	r31, 0x03	; 3
    1eea:	ef 2e       	mov	r14, r31
    1eec:	f0 2d       	mov	r31, r0
    1eee:	02 2d       	mov	r16, r2
    1ef0:	20 e8       	ldi	r18, 0x80	; 128
    1ef2:	44 2d       	mov	r20, r4
    1ef4:	60 e0       	ldi	r22, 0x00	; 0
    1ef6:	82 ef       	ldi	r24, 0xF2	; 242
    1ef8:	94 e0       	ldi	r25, 0x04	; 4
    1efa:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <u8g2_DrawRBox>

				u8g2_SetDrawColor(&u8g2, 0);
    1efe:	60 e0       	ldi	r22, 0x00	; 0
    1f00:	82 ef       	ldi	r24, 0xF2	; 242
    1f02:	94 e0       	ldi	r25, 0x04	; 4
    1f04:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawStr(&u8g2, x + (width/2) - u8g2_GetStrWidth(&u8g2, menuStrings[i]) / 2, y+yStat, menuStrings[i]);
    1f08:	48 0c       	add	r4, r8
    1f0a:	f6 01       	movw	r30, r12
    1f0c:	60 80       	ld	r6, Z
    1f0e:	71 80       	ldd	r7, Z+1	; 0x01
    1f10:	b3 01       	movw	r22, r6
    1f12:	82 ef       	ldi	r24, 0xF2	; 242
    1f14:	94 e0       	ldi	r25, 0x04	; 4
    1f16:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    1f1a:	86 95       	lsr	r24
    1f1c:	61 2f       	mov	r22, r17
    1f1e:	68 1b       	sub	r22, r24
    1f20:	93 01       	movw	r18, r6
    1f22:	44 2d       	mov	r20, r4
    1f24:	82 ef       	ldi	r24, 0xF2	; 242
    1f26:	94 e0       	ldi	r25, 0x04	; 4
    1f28:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
    1f2c:	5d c0       	rjmp	.+186    	; 0x1fe8 <MenuStyle1+0x222>
			}
			}else{

			y = i * screenDiv + TopMargin + (Scroll[MENUPAGE] * screenDiv);
    1f2e:	40 90 16 01 	lds	r4, 0x0116	; 0x800116 <screenDiv>
    1f32:	50 90 17 01 	lds	r5, 0x0117	; 0x800117 <screenDiv+0x1>
    1f36:	60 90 18 01 	lds	r6, 0x0118	; 0x800118 <screenDiv+0x2>
    1f3a:	70 90 19 01 	lds	r7, 0x0119	; 0x800119 <screenDiv+0x3>
    1f3e:	2d 81       	ldd	r18, Y+5	; 0x05
    1f40:	3e 81       	ldd	r19, Y+6	; 0x06
    1f42:	b9 01       	movw	r22, r18
    1f44:	33 0f       	add	r19, r19
    1f46:	88 0b       	sbc	r24, r24
    1f48:	99 0b       	sbc	r25, r25
    1f4a:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1f4e:	a3 01       	movw	r20, r6
    1f50:	92 01       	movw	r18, r4
    1f52:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1f56:	20 e0       	ldi	r18, 0x00	; 0
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	40 e1       	ldi	r20, 0x10	; 16
    1f5c:	51 e4       	ldi	r21, 0x41	; 65
    1f5e:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1f62:	69 83       	std	Y+1, r22	; 0x01
    1f64:	7a 83       	std	Y+2, r23	; 0x02
    1f66:	8b 83       	std	Y+3, r24	; 0x03
    1f68:	9c 83       	std	Y+4, r25	; 0x04
    1f6a:	f5 01       	movw	r30, r10
    1f6c:	61 81       	ldd	r22, Z+1	; 0x01
    1f6e:	06 2e       	mov	r0, r22
    1f70:	00 0c       	add	r0, r0
    1f72:	77 0b       	sbc	r23, r23
    1f74:	88 0b       	sbc	r24, r24
    1f76:	99 0b       	sbc	r25, r25
    1f78:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <__floatsisf>
    1f7c:	a3 01       	movw	r20, r6
    1f7e:	92 01       	movw	r18, r4
    1f80:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <__mulsf3>
    1f84:	9b 01       	movw	r18, r22
    1f86:	ac 01       	movw	r20, r24
    1f88:	69 81       	ldd	r22, Y+1	; 0x01
    1f8a:	7a 81       	ldd	r23, Y+2	; 0x02
    1f8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1f90:	0e 94 22 23 	call	0x4644	; 0x4644 <__addsf3>
    1f94:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    1f98:	2b 01       	movw	r4, r22
    1f9a:	3c 01       	movw	r6, r24
			/*
			if (Scroll[MENUPAGE] == -1){
			y -= 2;
			}*/
			if (y >= TopMargin)
    1f9c:	69 30       	cpi	r22, 0x09	; 9
    1f9e:	71 05       	cpc	r23, r1
    1fa0:	1c f1       	brlt	.+70     	; 0x1fe8 <MenuStyle1+0x222>
			{
				u8g2_SetDrawColor(&u8g2, 1);
    1fa2:	61 e0       	ldi	r22, 0x01	; 1
    1fa4:	82 ef       	ldi	r24, 0xF2	; 242
    1fa6:	94 e0       	ldi	r25, 0x04	; 4
    1fa8:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawRFrame(&u8g2, x, y, width, height, MenuBoxRounding);
    1fac:	0f 2e       	mov	r0, r31
    1fae:	f3 e0       	ldi	r31, 0x03	; 3
    1fb0:	ef 2e       	mov	r14, r31
    1fb2:	f0 2d       	mov	r31, r0
    1fb4:	02 2d       	mov	r16, r2
    1fb6:	20 e8       	ldi	r18, 0x80	; 128
    1fb8:	44 2d       	mov	r20, r4
    1fba:	60 e0       	ldi	r22, 0x00	; 0
    1fbc:	82 ef       	ldi	r24, 0xF2	; 242
    1fbe:	94 e0       	ldi	r25, 0x04	; 4
    1fc0:	0e 94 67 15 	call	0x2ace	; 0x2ace <u8g2_DrawRFrame>
				u8g2_DrawStr(&u8g2, x + (width/2) - u8g2_GetStrWidth(&u8g2, menuStrings[i]) / 2, y+yStat, menuStrings[i]);
    1fc4:	48 0c       	add	r4, r8
    1fc6:	f6 01       	movw	r30, r12
    1fc8:	60 80       	ld	r6, Z
    1fca:	71 80       	ldd	r7, Z+1	; 0x01
    1fcc:	b3 01       	movw	r22, r6
    1fce:	82 ef       	ldi	r24, 0xF2	; 242
    1fd0:	94 e0       	ldi	r25, 0x04	; 4
    1fd2:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    1fd6:	86 95       	lsr	r24
    1fd8:	61 2f       	mov	r22, r17
    1fda:	68 1b       	sub	r22, r24
    1fdc:	93 01       	movw	r18, r6
    1fde:	44 2d       	mov	r20, r4
    1fe0:	82 ef       	ldi	r24, 0xF2	; 242
    1fe2:	94 e0       	ldi	r25, 0x04	; 4
    1fe4:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	int x = ((screenWidth/2) - width / 2);
	int y;
	int yStat = (height/2)+3;
	height = height - Margin;
	
	for (int i = 0; i < menuChoices+1; i++){//do one extra to dirty fix lib error. make one menu extra outside scope.
    1fe8:	2d 81       	ldd	r18, Y+5	; 0x05
    1fea:	3e 81       	ldd	r19, Y+6	; 0x06
    1fec:	2f 5f       	subi	r18, 0xFF	; 255
    1fee:	3f 4f       	sbci	r19, 0xFF	; 255
    1ff0:	3e 83       	std	Y+6, r19	; 0x06
    1ff2:	2d 83       	std	Y+5, r18	; 0x05
    1ff4:	32 e0       	ldi	r19, 0x02	; 2
    1ff6:	c3 0e       	add	r12, r19
    1ff8:	d1 1c       	adc	r13, r1
    1ffa:	8d 81       	ldd	r24, Y+5	; 0x05
    1ffc:	9e 81       	ldd	r25, Y+6	; 0x06
    1ffe:	05 97       	sbiw	r24, 0x05	; 5
    2000:	09 f0       	breq	.+2      	; 0x2004 <MenuStyle1+0x23e>
    2002:	22 cf       	rjmp	.-444    	; 0x1e48 <MenuStyle1+0x82>
				u8g2_DrawRFrame(&u8g2, x, y, width, height, MenuBoxRounding);
				u8g2_DrawStr(&u8g2, x + (width/2) - u8g2_GetStrWidth(&u8g2, menuStrings[i]) / 2, y+yStat, menuStrings[i]);
			}
		}
	}
	reDrawRequired = 0;
    2004:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <reDrawRequired>
}
    2008:	26 96       	adiw	r28, 0x06	; 6
    200a:	0f b6       	in	r0, 0x3f	; 63
    200c:	f8 94       	cli
    200e:	de bf       	out	0x3e, r29	; 62
    2010:	0f be       	out	0x3f, r0	; 63
    2012:	cd bf       	out	0x3d, r28	; 61
    2014:	df 91       	pop	r29
    2016:	cf 91       	pop	r28
    2018:	1f 91       	pop	r17
    201a:	0f 91       	pop	r16
    201c:	ef 90       	pop	r14
    201e:	df 90       	pop	r13
    2020:	cf 90       	pop	r12
    2022:	bf 90       	pop	r11
    2024:	af 90       	pop	r10
    2026:	9f 90       	pop	r9
    2028:	8f 90       	pop	r8
    202a:	7f 90       	pop	r7
    202c:	6f 90       	pop	r6
    202e:	5f 90       	pop	r5
    2030:	4f 90       	pop	r4
    2032:	3f 90       	pop	r3
    2034:	2f 90       	pop	r2
    2036:	08 95       	ret

00002038 <StartPage>:

void StartPage(void){
    2038:	ef 92       	push	r14
    203a:	ff 92       	push	r15
    203c:	1f 93       	push	r17
    203e:	cf 93       	push	r28
    2040:	df 93       	push	r29
    2042:	cd b7       	in	r28, 0x3d	; 61
    2044:	de b7       	in	r29, 0x3e	; 62
    2046:	28 97       	sbiw	r28, 0x08	; 8
    2048:	0f b6       	in	r0, 0x3f	; 63
    204a:	f8 94       	cli
    204c:	de bf       	out	0x3e, r29	; 62
    204e:	0f be       	out	0x3f, r0	; 63
    2050:	cd bf       	out	0x3d, r28	; 61
	selectEnable = 1;
    2052:	81 e0       	ldi	r24, 0x01	; 1
    2054:	80 93 7b 05 	sts	0x057B, r24	; 0x80057b <selectEnable>
	#define lineNum 4
	char *text[lineNum] = {"SPECIAL THANKS TO :", "Bram , William, ", "Antonis, Corne, ", "Yasmine, Adil"};
    2058:	88 e0       	ldi	r24, 0x08	; 8
    205a:	ee e2       	ldi	r30, 0x2E	; 46
    205c:	f1 e0       	ldi	r31, 0x01	; 1
    205e:	de 01       	movw	r26, r28
    2060:	11 96       	adiw	r26, 0x01	; 1
    2062:	01 90       	ld	r0, Z+
    2064:	0d 92       	st	X+, r0
    2066:	8a 95       	dec	r24
    2068:	e1 f7       	brne	.-8      	; 0x2062 <StartPage+0x2a>
    206a:	ce 01       	movw	r24, r28
    206c:	01 96       	adiw	r24, 0x01	; 1
    206e:	7c 01       	movw	r14, r24
    2070:	11 e0       	ldi	r17, 0x01	; 1
	
	for (int i = 0; i < lineNum; i++)
	{
		u8g2_DrawStr(&u8g2, 0, textHeight * (i + 1), text[i]);
    2072:	f7 01       	movw	r30, r14
    2074:	21 91       	ld	r18, Z+
    2076:	31 91       	ld	r19, Z+
    2078:	7f 01       	movw	r14, r30
    207a:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    207e:	14 9f       	mul	r17, r20
    2080:	40 2d       	mov	r20, r0
    2082:	11 24       	eor	r1, r1
    2084:	60 e0       	ldi	r22, 0x00	; 0
    2086:	82 ef       	ldi	r24, 0xF2	; 242
    2088:	94 e0       	ldi	r25, 0x04	; 4
    208a:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
    208e:	1f 5f       	subi	r17, 0xFF	; 255
void StartPage(void){
	selectEnable = 1;
	#define lineNum 4
	char *text[lineNum] = {"SPECIAL THANKS TO :", "Bram , William, ", "Antonis, Corne, ", "Yasmine, Adil"};
	
	for (int i = 0; i < lineNum; i++)
    2090:	15 30       	cpi	r17, 0x05	; 5
    2092:	79 f7       	brne	.-34     	; 0x2072 <StartPage+0x3a>
	char *text2[2] = {
		"Press \"Select\"",
		" to continue!"
	};
	
	u8g2_DrawStr(&u8g2, screenWidth/2 - u8g2_GetStrWidth(&u8g2, text2[0]) / 2, realScreenHeight-textHeight, text2[0]);
    2094:	10 e4       	ldi	r17, 0x40	; 64
    2096:	80 91 57 05 	lds	r24, 0x0557	; 0x800557 <textHeight>
    209a:	f1 2e       	mov	r15, r17
    209c:	f8 1a       	sub	r15, r24
    209e:	60 e4       	ldi	r22, 0x40	; 64
    20a0:	71 e0       	ldi	r23, 0x01	; 1
    20a2:	82 ef       	ldi	r24, 0xF2	; 242
    20a4:	94 e0       	ldi	r25, 0x04	; 4
    20a6:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    20aa:	86 95       	lsr	r24
    20ac:	61 2f       	mov	r22, r17
    20ae:	68 1b       	sub	r22, r24
    20b0:	20 e4       	ldi	r18, 0x40	; 64
    20b2:	31 e0       	ldi	r19, 0x01	; 1
    20b4:	4f 2d       	mov	r20, r15
    20b6:	82 ef       	ldi	r24, 0xF2	; 242
    20b8:	94 e0       	ldi	r25, 0x04	; 4
    20ba:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	u8g2_DrawStr(&u8g2, screenWidth/2 - u8g2_GetStrWidth(&u8g2, text2[1]) / 2, realScreenHeight, text2[1]);
    20be:	6f e4       	ldi	r22, 0x4F	; 79
    20c0:	71 e0       	ldi	r23, 0x01	; 1
    20c2:	82 ef       	ldi	r24, 0xF2	; 242
    20c4:	94 e0       	ldi	r25, 0x04	; 4
    20c6:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    20ca:	86 95       	lsr	r24
    20cc:	61 2f       	mov	r22, r17
    20ce:	68 1b       	sub	r22, r24
    20d0:	2f e4       	ldi	r18, 0x4F	; 79
    20d2:	31 e0       	ldi	r19, 0x01	; 1
    20d4:	40 e4       	ldi	r20, 0x40	; 64
    20d6:	82 ef       	ldi	r24, 0xF2	; 242
    20d8:	94 e0       	ldi	r25, 0x04	; 4
    20da:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	reDrawRequired = 0;
    20de:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <reDrawRequired>
}
    20e2:	28 96       	adiw	r28, 0x08	; 8
    20e4:	0f b6       	in	r0, 0x3f	; 63
    20e6:	f8 94       	cli
    20e8:	de bf       	out	0x3e, r29	; 62
    20ea:	0f be       	out	0x3f, r0	; 63
    20ec:	cd bf       	out	0x3d, r28	; 61
    20ee:	df 91       	pop	r29
    20f0:	cf 91       	pop	r28
    20f2:	1f 91       	pop	r17
    20f4:	ff 90       	pop	r15
    20f6:	ef 90       	pop	r14
    20f8:	08 95       	ret

000020fa <nopage>:

void nopage(void){
	u8g2_DrawStr(&u8g2, 0, textHeight + TopMargin, "No content yet!");
    20fa:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    20fe:	47 5f       	subi	r20, 0xF7	; 247
    2100:	21 ea       	ldi	r18, 0xA1	; 161
    2102:	31 e0       	ldi	r19, 0x01	; 1
    2104:	60 e0       	ldi	r22, 0x00	; 0
    2106:	82 ef       	ldi	r24, 0xF2	; 242
    2108:	94 e0       	ldi	r25, 0x04	; 4
    210a:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	selectEnable = 0;
    210e:	10 92 7b 05 	sts	0x057B, r1	; 0x80057b <selectEnable>
	reDrawRequired = 0;
    2112:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <reDrawRequired>
    2116:	08 95       	ret

00002118 <ScreenOverlay>:
}


void ScreenOverlay(void){
    2118:	ef 92       	push	r14
    211a:	ff 92       	push	r15
    211c:	0f 93       	push	r16
    211e:	1f 93       	push	r17
    2120:	cf 93       	push	r28
    2122:	df 93       	push	r29
    2124:	cd b7       	in	r28, 0x3d	; 61
    2126:	de b7       	in	r29, 0x3e	; 62
    2128:	28 97       	sbiw	r28, 0x08	; 8
    212a:	0f b6       	in	r0, 0x3f	; 63
    212c:	f8 94       	cli
    212e:	de bf       	out	0x3e, r29	; 62
    2130:	0f be       	out	0x3f, r0	; 63
    2132:	cd bf       	out	0x3d, r28	; 61
	int y2 = height2/2;
	
	int width3 = width1/3 - 2;
	int height3 = height1 - 4;
	
	u8g2_DrawFrame(&u8g2, x1, y1, width1, height1);
    2134:	08 e0       	ldi	r16, 0x08	; 8
    2136:	2f e0       	ldi	r18, 0x0F	; 15
    2138:	40 e0       	ldi	r20, 0x00	; 0
    213a:	69 e3       	ldi	r22, 0x39	; 57
    213c:	82 ef       	ldi	r24, 0xF2	; 242
    213e:	94 e0       	ldi	r25, 0x04	; 4
    2140:	0e 94 b1 14 	call	0x2962	; 0x2962 <u8g2_DrawFrame>
	u8g2_DrawFrame(&u8g2, x2, y2, width2, height2);
    2144:	04 e0       	ldi	r16, 0x04	; 4
    2146:	23 e0       	ldi	r18, 0x03	; 3
    2148:	42 e0       	ldi	r20, 0x02	; 2
    214a:	67 e4       	ldi	r22, 0x47	; 71
    214c:	82 ef       	ldi	r24, 0xF2	; 242
    214e:	94 e0       	ldi	r25, 0x04	; 4
    2150:	0e 94 b1 14 	call	0x2962	; 0x2962 <u8g2_DrawFrame>
	
	unsigned int ADCval = updateBatterySens();
    2154:	0e 94 2b 0c 	call	0x1856	; 0x1856 <updateBatterySens>
	if (ADCval<=256){
    2158:	81 30       	cpi	r24, 0x01	; 1
    215a:	21 e0       	ldi	r18, 0x01	; 1
    215c:	92 07       	cpc	r25, r18
    215e:	68 f4       	brcc	.+26     	; 0x217a <ScreenOverlay+0x62>
		batteryBars = 0;
    2160:	10 92 ac 03 	sts	0x03AC, r1	; 0x8003ac <batteryBars+0x1>
    2164:	10 92 ab 03 	sts	0x03AB, r1	; 0x8003ab <batteryBars>
    2168:	3d c0       	rjmp	.+122    	; 0x21e4 <ScreenOverlay+0xcc>
		batteryBars = 2;
		}else if (ADCval <= 1024){
		batteryBars = 3;
	}
	
	for (int i = 0 ; i < batteryBars; i++)//batteryBars is a global variable used to measure the amount of bars that need to be drawn to represent the battery's charge
    216a:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <batteryBars>
    216e:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <batteryBars+0x1>
    2172:	18 16       	cp	r1, r24
    2174:	19 06       	cpc	r1, r25
    2176:	04 f1       	brlt	.+64     	; 0x21b8 <ScreenOverlay+0xa0>
    2178:	35 c0       	rjmp	.+106    	; 0x21e4 <ScreenOverlay+0xcc>
	u8g2_DrawFrame(&u8g2, x2, y2, width2, height2);
	
	unsigned int ADCval = updateBatterySens();
	if (ADCval<=256){
		batteryBars = 0;
		}else if (ADCval <= 512){
    217a:	81 30       	cpi	r24, 0x01	; 1
    217c:	22 e0       	ldi	r18, 0x02	; 2
    217e:	92 07       	cpc	r25, r18
    2180:	38 f4       	brcc	.+14     	; 0x2190 <ScreenOverlay+0x78>
		batteryBars = 1;
    2182:	81 e0       	ldi	r24, 0x01	; 1
    2184:	90 e0       	ldi	r25, 0x00	; 0
    2186:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <batteryBars+0x1>
    218a:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <batteryBars>
    218e:	14 c0       	rjmp	.+40     	; 0x21b8 <ScreenOverlay+0xa0>
		}else if (ADCval <= 786){
    2190:	83 31       	cpi	r24, 0x13	; 19
    2192:	23 e0       	ldi	r18, 0x03	; 3
    2194:	92 07       	cpc	r25, r18
    2196:	38 f4       	brcc	.+14     	; 0x21a6 <ScreenOverlay+0x8e>
		batteryBars = 2;
    2198:	82 e0       	ldi	r24, 0x02	; 2
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <batteryBars+0x1>
    21a0:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <batteryBars>
    21a4:	09 c0       	rjmp	.+18     	; 0x21b8 <ScreenOverlay+0xa0>
		}else if (ADCval <= 1024){
    21a6:	81 30       	cpi	r24, 0x01	; 1
    21a8:	94 40       	sbci	r25, 0x04	; 4
    21aa:	f8 f6       	brcc	.-66     	; 0x216a <ScreenOverlay+0x52>
		batteryBars = 3;
    21ac:	83 e0       	ldi	r24, 0x03	; 3
    21ae:	90 e0       	ldi	r25, 0x00	; 0
    21b0:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <batteryBars+0x1>
    21b4:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <batteryBars>
	selectEnable = 0;
	reDrawRequired = 0;
}


void ScreenOverlay(void){
    21b8:	1b e3       	ldi	r17, 0x3B	; 59
    21ba:	e1 2c       	mov	r14, r1
    21bc:	f1 2c       	mov	r15, r1
		batteryBars = 3;
	}
	
	for (int i = 0 ; i < batteryBars; i++)//batteryBars is a global variable used to measure the amount of bars that need to be drawn to represent the battery's charge
	{
		u8g2_DrawBox(&u8g2, x1 + 2 + (width3+1) * i, y1 + 2, width3, height3);
    21be:	04 e0       	ldi	r16, 0x04	; 4
    21c0:	23 e0       	ldi	r18, 0x03	; 3
    21c2:	42 e0       	ldi	r20, 0x02	; 2
    21c4:	61 2f       	mov	r22, r17
    21c6:	82 ef       	ldi	r24, 0xF2	; 242
    21c8:	94 e0       	ldi	r25, 0x04	; 4
    21ca:	0e 94 89 14 	call	0x2912	; 0x2912 <u8g2_DrawBox>
		batteryBars = 2;
		}else if (ADCval <= 1024){
		batteryBars = 3;
	}
	
	for (int i = 0 ; i < batteryBars; i++)//batteryBars is a global variable used to measure the amount of bars that need to be drawn to represent the battery's charge
    21ce:	8f ef       	ldi	r24, 0xFF	; 255
    21d0:	e8 1a       	sub	r14, r24
    21d2:	f8 0a       	sbc	r15, r24
    21d4:	1c 5f       	subi	r17, 0xFC	; 252
    21d6:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <batteryBars>
    21da:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <batteryBars+0x1>
    21de:	e8 16       	cp	r14, r24
    21e0:	f9 06       	cpc	r15, r25
    21e2:	6c f3       	brlt	.-38     	; 0x21be <ScreenOverlay+0xa6>
	}
	
	
	
	//Mode:
	char modeTxt[7] = "Mode: ";
    21e4:	87 e0       	ldi	r24, 0x07	; 7
    21e6:	e1 eb       	ldi	r30, 0xB1	; 177
    21e8:	f1 e0       	ldi	r31, 0x01	; 1
    21ea:	de 01       	movw	r26, r28
    21ec:	11 96       	adiw	r26, 0x01	; 1
    21ee:	01 90       	ld	r0, Z+
    21f0:	0d 92       	st	X+, r0
    21f2:	8a 95       	dec	r24
    21f4:	e1 f7       	brne	.-8      	; 0x21ee <ScreenOverlay+0xd6>
	char modeTxthold[1];
	itoa(*(settingVal+0), modeTxthold, 10);
    21f6:	e0 91 e0 04 	lds	r30, 0x04E0	; 0x8004e0 <settingVal>
    21fa:	f0 91 e1 04 	lds	r31, 0x04E1	; 0x8004e1 <settingVal+0x1>
    21fe:	4a e0       	ldi	r20, 0x0A	; 10
    2200:	be 01       	movw	r22, r28
    2202:	68 5f       	subi	r22, 0xF8	; 248
    2204:	7f 4f       	sbci	r23, 0xFF	; 255
    2206:	80 81       	ld	r24, Z
    2208:	91 81       	ldd	r25, Z+1	; 0x01
    220a:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
	strcat(modeTxt, modeTxthold);
    220e:	be 01       	movw	r22, r28
    2210:	68 5f       	subi	r22, 0xF8	; 248
    2212:	7f 4f       	sbci	r23, 0xFF	; 255
    2214:	ce 01       	movw	r24, r28
    2216:	01 96       	adiw	r24, 0x01	; 1
    2218:	0e 94 f9 25 	call	0x4bf2	; 0x4bf2 <strcat>
	
	u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
    221c:	67 e7       	ldi	r22, 0x77	; 119
    221e:	78 e0       	ldi	r23, 0x08	; 8
    2220:	82 ef       	ldi	r24, 0xF2	; 242
    2222:	94 e0       	ldi	r25, 0x04	; 4
    2224:	0e 94 2c 1c 	call	0x3858	; 0x3858 <u8g2_SetFont>
	u8g2_DrawStr(&u8g2, screenWidth - u8g2_GetStrWidth(&u8g2, modeTxt), textHeight-3, modeTxt);
    2228:	10 91 57 05 	lds	r17, 0x0557	; 0x800557 <textHeight>
    222c:	13 50       	subi	r17, 0x03	; 3
    222e:	be 01       	movw	r22, r28
    2230:	6f 5f       	subi	r22, 0xFF	; 255
    2232:	7f 4f       	sbci	r23, 0xFF	; 255
    2234:	82 ef       	ldi	r24, 0xF2	; 242
    2236:	94 e0       	ldi	r25, 0x04	; 4
    2238:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    223c:	60 e8       	ldi	r22, 0x80	; 128
    223e:	68 1b       	sub	r22, r24
    2240:	9e 01       	movw	r18, r28
    2242:	2f 5f       	subi	r18, 0xFF	; 255
    2244:	3f 4f       	sbci	r19, 0xFF	; 255
    2246:	41 2f       	mov	r20, r17
    2248:	82 ef       	ldi	r24, 0xF2	; 242
    224a:	94 e0       	ldi	r25, 0x04	; 4
    224c:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	
	
	//Time
	u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
    2250:	67 e7       	ldi	r22, 0x77	; 119
    2252:	78 e0       	ldi	r23, 0x08	; 8
    2254:	82 ef       	ldi	r24, 0xF2	; 242
    2256:	94 e0       	ldi	r25, 0x04	; 4
    2258:	0e 94 2c 1c 	call	0x3858	; 0x3858 <u8g2_SetFont>
	static char timeTxt[7] = {0,0,0,0,0,0,0};
	getTimeToChar(timeTxt, 0);
    225c:	60 e0       	ldi	r22, 0x00	; 0
    225e:	70 e0       	ldi	r23, 0x00	; 0
    2260:	8a e9       	ldi	r24, 0x9A	; 154
    2262:	93 e0       	ldi	r25, 0x03	; 3
    2264:	0e 94 aa 0b 	call	0x1754	; 0x1754 <getTimeToChar>
	
	u8g2_DrawStr(&u8g2, 0, textHeight-3, timeTxt);
    2268:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    226c:	43 50       	subi	r20, 0x03	; 3
    226e:	2a e9       	ldi	r18, 0x9A	; 154
    2270:	33 e0       	ldi	r19, 0x03	; 3
    2272:	60 e0       	ldi	r22, 0x00	; 0
    2274:	82 ef       	ldi	r24, 0xF2	; 242
    2276:	94 e0       	ldi	r25, 0x04	; 4
    2278:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	
	
	u8g2_SetFont(&u8g2, u8g2_font_6x10_tf);//reset font to the main font.
    227c:	66 e9       	ldi	r22, 0x96	; 150
    227e:	70 e0       	ldi	r23, 0x00	; 0
    2280:	82 ef       	ldi	r24, 0xF2	; 242
    2282:	94 e0       	ldi	r25, 0x04	; 4
    2284:	0e 94 2c 1c 	call	0x3858	; 0x3858 <u8g2_SetFont>
}
    2288:	28 96       	adiw	r28, 0x08	; 8
    228a:	0f b6       	in	r0, 0x3f	; 63
    228c:	f8 94       	cli
    228e:	de bf       	out	0x3e, r29	; 62
    2290:	0f be       	out	0x3f, r0	; 63
    2292:	cd bf       	out	0x3d, r28	; 61
    2294:	df 91       	pop	r29
    2296:	cf 91       	pop	r28
    2298:	1f 91       	pop	r17
    229a:	0f 91       	pop	r16
    229c:	ff 90       	pop	r15
    229e:	ef 90       	pop	r14
    22a0:	08 95       	ret

000022a2 <Page_2>:

void Page_2(void){
    22a2:	7f 92       	push	r7
    22a4:	8f 92       	push	r8
    22a6:	9f 92       	push	r9
    22a8:	af 92       	push	r10
    22aa:	bf 92       	push	r11
    22ac:	cf 92       	push	r12
    22ae:	df 92       	push	r13
    22b0:	ef 92       	push	r14
    22b2:	ff 92       	push	r15
    22b4:	0f 93       	push	r16
    22b6:	1f 93       	push	r17
    22b8:	cf 93       	push	r28
    22ba:	df 93       	push	r29
    22bc:	cd b7       	in	r28, 0x3d	; 61
    22be:	de b7       	in	r29, 0x3e	; 62
    22c0:	a8 97       	sbiw	r28, 0x28	; 40
    22c2:	0f b6       	in	r0, 0x3f	; 63
    22c4:	f8 94       	cli
    22c6:	de bf       	out	0x3e, r29	; 62
    22c8:	0f be       	out	0x3f, r0	; 63
    22ca:	cd bf       	out	0x3d, r28	; 61
	#define Lines 4
	#define digAmount 8
	
	#define startLine_Data 3
	selectEnable = 0;
    22cc:	10 92 7b 05 	sts	0x057B, r1	; 0x80057b <selectEnable>
		"Direction:> ",
		"Distance:> ",
		"runTime:> "
	};
	
	int maxPrefixWidth = u8g2_GetStrWidth(&u8g2, text2[1]);
    22d0:	68 eb       	ldi	r22, 0xB8	; 184
    22d2:	71 e0       	ldi	r23, 0x01	; 1
    22d4:	82 ef       	ldi	r24, 0xF2	; 242
    22d6:	94 e0       	ldi	r25, 0x04	; 4
    22d8:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    22dc:	78 2e       	mov	r7, r24
	//placeholders for the data
	char d1[digAmount];
	char d2[digAmount];
	char d3[digAmount];
	char d4[digAmount];
	char *Data[Lines] = { d1, d2, d3, d4};
    22de:	be 01       	movw	r22, r28
    22e0:	6f 5f       	subi	r22, 0xFF	; 255
    22e2:	7f 4f       	sbci	r23, 0xFF	; 255
    22e4:	7a a3       	std	Y+34, r23	; 0x22
    22e6:	69 a3       	std	Y+33, r22	; 0x21
    22e8:	6e 01       	movw	r12, r28
    22ea:	89 e0       	ldi	r24, 0x09	; 9
    22ec:	c8 0e       	add	r12, r24
    22ee:	d1 1c       	adc	r13, r1
    22f0:	dc a2       	std	Y+36, r13	; 0x24
    22f2:	cb a2       	std	Y+35, r12	; 0x23
    22f4:	7e 01       	movw	r14, r28
    22f6:	e1 e1       	ldi	r30, 0x11	; 17
    22f8:	ee 0e       	add	r14, r30
    22fa:	f1 1c       	adc	r15, r1
    22fc:	fe a2       	std	Y+38, r15	; 0x26
    22fe:	ed a2       	std	Y+37, r14	; 0x25
    2300:	8e 01       	movw	r16, r28
    2302:	07 5e       	subi	r16, 0xE7	; 231
    2304:	1f 4f       	sbci	r17, 0xFF	; 255
    2306:	18 a7       	std	Y+40, r17	; 0x28
    2308:	0f a3       	std	Y+39, r16	; 0x27
		
	itoa(*speedHold, Data[0], 10);
    230a:	e0 91 e2 04 	lds	r30, 0x04E2	; 0x8004e2 <speedHold>
    230e:	f0 91 e3 04 	lds	r31, 0x04E3	; 0x8004e3 <speedHold+0x1>
    2312:	4a e0       	ldi	r20, 0x0A	; 10
    2314:	80 81       	ld	r24, Z
    2316:	91 81       	ldd	r25, Z+1	; 0x01
    2318:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
	itoa(*directionHold, Data[1], 10);
    231c:	e0 91 66 05 	lds	r30, 0x0566	; 0x800566 <directionHold>
    2320:	f0 91 67 05 	lds	r31, 0x0567	; 0x800567 <directionHold+0x1>
    2324:	4a e0       	ldi	r20, 0x0A	; 10
    2326:	b6 01       	movw	r22, r12
    2328:	80 81       	ld	r24, Z
    232a:	91 81       	ldd	r25, Z+1	; 0x01
    232c:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
	itoa(*distanceHold, Data[2], 10);
    2330:	e0 91 62 05 	lds	r30, 0x0562	; 0x800562 <distanceHold>
    2334:	f0 91 63 05 	lds	r31, 0x0563	; 0x800563 <distanceHold+0x1>
    2338:	4a e0       	ldi	r20, 0x0A	; 10
    233a:	b7 01       	movw	r22, r14
    233c:	80 81       	ld	r24, Z
    233e:	91 81       	ldd	r25, Z+1	; 0x01
    2340:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
	
	//little bit of code to make a typical digital watch look for the time String
	getTimeToChar(Data[3], 1);
    2344:	61 e0       	ldi	r22, 0x01	; 1
    2346:	70 e0       	ldi	r23, 0x00	; 0
    2348:	c8 01       	movw	r24, r16
    234a:	0e 94 aa 0b 	call	0x1754	; 0x1754 <getTimeToChar>
	
	
	
	//title
	u8g2_DrawStr(&u8g2, 0, textHeight + TopMargin, menuStrings[currentChoice[MENUPAGE]]);
    234e:	e0 91 d2 04 	lds	r30, 0x04D2	; 0x8004d2 <currentChoice+0x1>
    2352:	ee 0f       	add	r30, r30
    2354:	ff 0b       	sbc	r31, r31
    2356:	eb 5d       	subi	r30, 0xDB	; 219
    2358:	fe 4f       	sbci	r31, 0xFE	; 254
    235a:	20 81       	ld	r18, Z
    235c:	31 81       	ldd	r19, Z+1	; 0x01
    235e:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    2362:	47 5f       	subi	r20, 0xF7	; 247
    2364:	60 e0       	ldi	r22, 0x00	; 0
    2366:	82 ef       	ldi	r24, 0xF2	; 242
    2368:	94 e0       	ldi	r25, 0x04	; 4
    236a:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
    236e:	5e 01       	movw	r10, r28
    2370:	f1 e2       	ldi	r31, 0x21	; 33
    2372:	af 0e       	add	r10, r31
    2374:	b1 1c       	adc	r11, r1
    2376:	0f 2e       	mov	r0, r31
    2378:	fb e5       	ldi	r31, 0x5B	; 91
    237a:	cf 2e       	mov	r12, r31
    237c:	f2 e0       	ldi	r31, 0x02	; 2
    237e:	df 2e       	mov	r13, r31
    2380:	f0 2d       	mov	r31, r0
    2382:	0f 2e       	mov	r0, r31
    2384:	f3 e5       	ldi	r31, 0x53	; 83
    2386:	ef 2e       	mov	r14, r31
    2388:	f2 e0       	ldi	r31, 0x02	; 2
    238a:	ff 2e       	mov	r15, r31
    238c:	f0 2d       	mov	r31, r0
    238e:	13 e0       	ldi	r17, 0x03	; 3

	for (int i = 0; i < Lines; i++)
	{
		int dataWidth = u8g2_GetStrWidth(&u8g2, Data[i]);
    2390:	f5 01       	movw	r30, r10
    2392:	81 90       	ld	r8, Z+
    2394:	91 90       	ld	r9, Z+
    2396:	5f 01       	movw	r10, r30
    2398:	b4 01       	movw	r22, r8
    239a:	82 ef       	ldi	r24, 0xF2	; 242
    239c:	94 e0       	ldi	r25, 0x04	; 4
    239e:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    23a2:	08 2f       	mov	r16, r24
		u8g2_DrawStr(&u8g2, 0, textHeight*(i+startLine_Data), text2[i]);
    23a4:	f6 01       	movw	r30, r12
    23a6:	21 91       	ld	r18, Z+
    23a8:	31 91       	ld	r19, Z+
    23aa:	6f 01       	movw	r12, r30
    23ac:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    23b0:	14 9f       	mul	r17, r20
    23b2:	40 2d       	mov	r20, r0
    23b4:	11 24       	eor	r1, r1
    23b6:	60 e0       	ldi	r22, 0x00	; 0
    23b8:	82 ef       	ldi	r24, 0xF2	; 242
    23ba:	94 e0       	ldi	r25, 0x04	; 4
    23bc:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
		u8g2_DrawStr(&u8g2, maxPrefixWidth, textHeight*(i+startLine_Data), Data[i]);
    23c0:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    23c4:	14 9f       	mul	r17, r20
    23c6:	40 2d       	mov	r20, r0
    23c8:	11 24       	eor	r1, r1
    23ca:	94 01       	movw	r18, r8
    23cc:	67 2d       	mov	r22, r7
    23ce:	82 ef       	ldi	r24, 0xF2	; 242
    23d0:	94 e0       	ldi	r25, 0x04	; 4
    23d2:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
		u8g2_DrawStr(&u8g2, maxPrefixWidth + dataWidth + maxCharWidth/2, textHeight*(i+startLine_Data), postFixes[i]);
    23d6:	f7 01       	movw	r30, r14
    23d8:	21 91       	ld	r18, Z+
    23da:	31 91       	ld	r19, Z+
    23dc:	7f 01       	movw	r14, r30
    23de:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    23e2:	14 9f       	mul	r17, r20
    23e4:	40 2d       	mov	r20, r0
    23e6:	11 24       	eor	r1, r1
    23e8:	60 91 d0 04 	lds	r22, 0x04D0	; 0x8004d0 <maxCharWidth>
    23ec:	66 95       	lsr	r22
    23ee:	67 0d       	add	r22, r7
    23f0:	60 0f       	add	r22, r16
    23f2:	82 ef       	ldi	r24, 0xF2	; 242
    23f4:	94 e0       	ldi	r25, 0x04	; 4
    23f6:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
    23fa:	1f 5f       	subi	r17, 0xFF	; 255
	
	
	//title
	u8g2_DrawStr(&u8g2, 0, textHeight + TopMargin, menuStrings[currentChoice[MENUPAGE]]);

	for (int i = 0; i < Lines; i++)
    23fc:	17 30       	cpi	r17, 0x07	; 7
    23fe:	41 f6       	brne	.-112    	; 0x2390 <Page_2+0xee>
		u8g2_DrawStr(&u8g2, 0, textHeight*(i+startLine_Data), text2[i]);
		u8g2_DrawStr(&u8g2, maxPrefixWidth, textHeight*(i+startLine_Data), Data[i]);
		u8g2_DrawStr(&u8g2, maxPrefixWidth + dataWidth + maxCharWidth/2, textHeight*(i+startLine_Data), postFixes[i]);
	}
	
	reDrawRequired = 1;
    2400:	81 e0       	ldi	r24, 0x01	; 1
    2402:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
}
    2406:	a8 96       	adiw	r28, 0x28	; 40
    2408:	0f b6       	in	r0, 0x3f	; 63
    240a:	f8 94       	cli
    240c:	de bf       	out	0x3e, r29	; 62
    240e:	0f be       	out	0x3f, r0	; 63
    2410:	cd bf       	out	0x3d, r28	; 61
    2412:	df 91       	pop	r29
    2414:	cf 91       	pop	r28
    2416:	1f 91       	pop	r17
    2418:	0f 91       	pop	r16
    241a:	ff 90       	pop	r15
    241c:	ef 90       	pop	r14
    241e:	df 90       	pop	r13
    2420:	cf 90       	pop	r12
    2422:	bf 90       	pop	r11
    2424:	af 90       	pop	r10
    2426:	9f 90       	pop	r9
    2428:	8f 90       	pop	r8
    242a:	7f 90       	pop	r7
    242c:	08 95       	ret

0000242e <Page_3>:

void Page_3(void){
    242e:	cf 93       	push	r28
    2430:	df 93       	push	r29
    2432:	cd b7       	in	r28, 0x3d	; 61
    2434:	de b7       	in	r29, 0x3e	; 62
    2436:	28 97       	sbiw	r28, 0x08	; 8
    2438:	0f b6       	in	r0, 0x3f	; 63
    243a:	f8 94       	cli
    243c:	de bf       	out	0x3e, r29	; 62
    243e:	0f be       	out	0x3f, r0	; 63
    2440:	cd bf       	out	0x3d, r28	; 61
	selectEnable = 0;
    2442:	10 92 7b 05 	sts	0x057B, r1	; 0x80057b <selectEnable>
	
	char angleHolder[8];
	
	itoa(*angleHold, angleHolder, 10);
    2446:	e0 91 79 05 	lds	r30, 0x0579	; 0x800579 <angleHold>
    244a:	f0 91 7a 05 	lds	r31, 0x057A	; 0x80057a <angleHold+0x1>
    244e:	4a e0       	ldi	r20, 0x0A	; 10
    2450:	be 01       	movw	r22, r28
    2452:	6f 5f       	subi	r22, 0xFF	; 255
    2454:	7f 4f       	sbci	r23, 0xFF	; 255
    2456:	80 81       	ld	r24, Z
    2458:	91 81       	ldd	r25, Z+1	; 0x01
    245a:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
	u8g2_DrawStr(&u8g2, 0, textHeight+ TopMargin, menuStrings[currentChoice[MENUPAGE]]);//the titles needs to be the same as the titles of the choices in the menu
    245e:	e0 91 d2 04 	lds	r30, 0x04D2	; 0x8004d2 <currentChoice+0x1>
    2462:	ee 0f       	add	r30, r30
    2464:	ff 0b       	sbc	r31, r31
    2466:	eb 5d       	subi	r30, 0xDB	; 219
    2468:	fe 4f       	sbci	r31, 0xFE	; 254
    246a:	20 81       	ld	r18, Z
    246c:	31 81       	ldd	r19, Z+1	; 0x01
    246e:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    2472:	47 5f       	subi	r20, 0xF7	; 247
    2474:	60 e0       	ldi	r22, 0x00	; 0
    2476:	82 ef       	ldi	r24, 0xF2	; 242
    2478:	94 e0       	ldi	r25, 0x04	; 4
    247a:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	u8g2_DrawStr(&u8g2, 0, textHeight*2 + TopMargin, angleHolder);
    247e:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    2482:	44 0f       	add	r20, r20
    2484:	47 5f       	subi	r20, 0xF7	; 247
    2486:	9e 01       	movw	r18, r28
    2488:	2f 5f       	subi	r18, 0xFF	; 255
    248a:	3f 4f       	sbci	r19, 0xFF	; 255
    248c:	60 e0       	ldi	r22, 0x00	; 0
    248e:	82 ef       	ldi	r24, 0xF2	; 242
    2490:	94 e0       	ldi	r25, 0x04	; 4
    2492:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
	reDrawRequired = 1;
    2496:	81 e0       	ldi	r24, 0x01	; 1
    2498:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
}
    249c:	28 96       	adiw	r28, 0x08	; 8
    249e:	0f b6       	in	r0, 0x3f	; 63
    24a0:	f8 94       	cli
    24a2:	de bf       	out	0x3e, r29	; 62
    24a4:	0f be       	out	0x3f, r0	; 63
    24a6:	cd bf       	out	0x3d, r28	; 61
    24a8:	df 91       	pop	r29
    24aa:	cf 91       	pop	r28
    24ac:	08 95       	ret

000024ae <Page_4>:

void Page_4(void){
	selectEnable = 0;
    24ae:	10 92 7b 05 	sts	0x057B, r1	; 0x80057b <selectEnable>
	u8g2_DrawStr(&u8g2, 0, textHeight+ TopMargin, menuStrings[currentChoice[MENUPAGE]]);
    24b2:	e0 91 d2 04 	lds	r30, 0x04D2	; 0x8004d2 <currentChoice+0x1>
    24b6:	ee 0f       	add	r30, r30
    24b8:	ff 0b       	sbc	r31, r31
    24ba:	eb 5d       	subi	r30, 0xDB	; 219
    24bc:	fe 4f       	sbci	r31, 0xFE	; 254
    24be:	20 81       	ld	r18, Z
    24c0:	31 81       	ldd	r19, Z+1	; 0x01
    24c2:	40 91 57 05 	lds	r20, 0x0557	; 0x800557 <textHeight>
    24c6:	47 5f       	subi	r20, 0xF7	; 247
    24c8:	60 e0       	ldi	r22, 0x00	; 0
    24ca:	82 ef       	ldi	r24, 0xF2	; 242
    24cc:	94 e0       	ldi	r25, 0x04	; 4
    24ce:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>

	reDrawRequired = 0;
    24d2:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <reDrawRequired>
    24d6:	08 95       	ret

000024d8 <Page_5>:
}

void Page_5(void){//settings
    24d8:	2f 92       	push	r2
    24da:	3f 92       	push	r3
    24dc:	4f 92       	push	r4
    24de:	5f 92       	push	r5
    24e0:	6f 92       	push	r6
    24e2:	7f 92       	push	r7
    24e4:	8f 92       	push	r8
    24e6:	9f 92       	push	r9
    24e8:	af 92       	push	r10
    24ea:	bf 92       	push	r11
    24ec:	cf 92       	push	r12
    24ee:	df 92       	push	r13
    24f0:	ef 92       	push	r14
    24f2:	ff 92       	push	r15
    24f4:	0f 93       	push	r16
    24f6:	1f 93       	push	r17
    24f8:	cf 93       	push	r28
    24fa:	df 93       	push	r29
    24fc:	00 d0       	rcall	.+0      	; 0x24fe <Page_5+0x26>
    24fe:	00 d0       	rcall	.+0      	; 0x2500 <Page_5+0x28>
    2500:	1f 92       	push	r1
    2502:	cd b7       	in	r28, 0x3d	; 61
    2504:	de b7       	in	r29, 0x3e	; 62
	selectEnable = 1;
    2506:	81 e0       	ldi	r24, 0x01	; 1
    2508:	80 93 7b 05 	sts	0x057B, r24	; 0x80057b <selectEnable>
	#define selector "-> "
	

	int height = screenDiv;
	
	int x = selectorWidth;
    250c:	10 91 d0 04 	lds	r17, 0x04D0	; 0x8004d0 <maxCharWidth>
    2510:	81 2f       	mov	r24, r17
    2512:	90 e0       	ldi	r25, 0x00	; 0
    2514:	9c 01       	movw	r18, r24
    2516:	22 0f       	add	r18, r18
    2518:	33 1f       	adc	r19, r19
    251a:	12 2f       	mov	r17, r18
    251c:	18 0f       	add	r17, r24
	int y;
	int yStat = (height/2)+3;
    251e:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <screenDiv>
    2522:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <screenDiv+0x1>
    2526:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <screenDiv+0x2>
    252a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <screenDiv+0x3>
    252e:	0e 94 34 24 	call	0x4868	; 0x4868 <__fixsfsi>
    2532:	3b 01       	movw	r6, r22
    2534:	77 23       	and	r23, r23
    2536:	1c f4       	brge	.+6      	; 0x253e <Page_5+0x66>
    2538:	2f ef       	ldi	r18, 0xFF	; 255
    253a:	62 1a       	sub	r6, r18
    253c:	72 0a       	sbc	r7, r18
    253e:	75 94       	asr	r7
    2540:	67 94       	ror	r6
    2542:	83 e0       	ldi	r24, 0x03	; 3
    2544:	68 0e       	add	r6, r24
    2546:	71 1c       	adc	r7, r1
	height = height - Margin;
	_Bool highlightChoice = 0;
	
	if (currentPage > 5 && currentPage <= 5 + settings){//code for enabling the settings to be changed
    2548:	e0 91 af 03 	lds	r30, 0x03AF	; 0x8003af <currentPage>
    254c:	8a ef       	ldi	r24, 0xFA	; 250
    254e:	8e 0f       	add	r24, r30
    2550:	85 30       	cpi	r24, 0x05	; 5
    2552:	30 f5       	brcc	.+76     	; 0x25a0 <Page_5+0xc8>
		selectEnable = 0;
    2554:	10 92 7b 05 	sts	0x057B, r1	; 0x80057b <selectEnable>
		//you selected a setting
		*(settingVal + currentChoice[5]) -= currentChoice[currentPage];
    2558:	a0 91 d6 04 	lds	r26, 0x04D6	; 0x8004d6 <currentChoice+0x5>
    255c:	aa 0f       	add	r26, r26
    255e:	bb 0b       	sbc	r27, r27
    2560:	80 91 e0 04 	lds	r24, 0x04E0	; 0x8004e0 <settingVal>
    2564:	90 91 e1 04 	lds	r25, 0x04E1	; 0x8004e1 <settingVal+0x1>
    2568:	a8 0f       	add	r26, r24
    256a:	b9 1f       	adc	r27, r25
    256c:	0e 2e       	mov	r0, r30
    256e:	00 0c       	add	r0, r0
    2570:	ff 0b       	sbc	r31, r31
    2572:	ef 52       	subi	r30, 0x2F	; 47
    2574:	fb 4f       	sbci	r31, 0xFB	; 251
    2576:	20 81       	ld	r18, Z
    2578:	8d 91       	ld	r24, X+
    257a:	9c 91       	ld	r25, X
    257c:	11 97       	sbiw	r26, 0x01	; 1
    257e:	82 1b       	sub	r24, r18
    2580:	91 09       	sbc	r25, r1
    2582:	27 fd       	sbrc	r18, 7
    2584:	93 95       	inc	r25
    2586:	8d 93       	st	X+, r24
    2588:	9c 93       	st	X, r25
		currentChoice[currentPage] = 0;
    258a:	e0 91 af 03 	lds	r30, 0x03AF	; 0x8003af <currentPage>
    258e:	0e 2e       	mov	r0, r30
    2590:	00 0c       	add	r0, r0
    2592:	ff 0b       	sbc	r31, r31
    2594:	ef 52       	subi	r30, 0x2F	; 47
    2596:	fb 4f       	sbci	r31, 0xFB	; 251
    2598:	10 82       	st	Z, r1
		highlightChoice = 1;
    259a:	e1 e0       	ldi	r30, 0x01	; 1
    259c:	ed 83       	std	Y+5, r30	; 0x05
    259e:	01 c0       	rjmp	.+2      	; 0x25a2 <Page_5+0xca>
	
	int x = selectorWidth;
	int y;
	int yStat = (height/2)+3;
	height = height - Margin;
	_Bool highlightChoice = 0;
    25a0:	1d 82       	std	Y+5, r1	; 0x05
    25a2:	0f 2e       	mov	r0, r31
    25a4:	fb e1       	ldi	r31, 0x1B	; 27
    25a6:	af 2e       	mov	r10, r31
    25a8:	f1 e0       	ldi	r31, 0x01	; 1
    25aa:	bf 2e       	mov	r11, r31
    25ac:	f0 2d       	mov	r31, r0
	if (currentPage > 5 && currentPage <= 5 + settings){//code for enabling the settings to be changed
		selectEnable = 0;
		//you selected a setting
		*(settingVal + currentChoice[5]) -= currentChoice[currentPage];
		currentChoice[currentPage] = 0;
		highlightChoice = 1;
    25ae:	81 2c       	mov	r8, r1
    25b0:	91 2c       	mov	r9, r1
	}
	
	for (int i = 0; i < settings; i++){
    25b2:	c1 2c       	mov	r12, r1
    25b4:	d1 2c       	mov	r13, r1
		
		y = TopMargin + i * textHeight/* +  (Scroll[currentPage] * textHeight)*/;

		if(currentChoice[5] == i){
    25b6:	0f 2e       	mov	r0, r31
    25b8:	f1 ed       	ldi	r31, 0xD1	; 209
    25ba:	4f 2e       	mov	r4, r31
    25bc:	f4 e0       	ldi	r31, 0x04	; 4
    25be:	5f 2e       	mov	r5, r31
    25c0:	f0 2d       	mov	r31, r0
			u8g2_SetDrawColor(&u8g2, 1);
			
			u8g2_DrawStr(&u8g2, 0, y+yStat, selector);
			if(highlightChoice){
				u8g2_SetDrawColor(&u8g2, 1);
				u8g2_DrawRBox(&u8g2, x-2, y+yStat - textHeight+1, u8g2_GetStrWidth(&u8g2, settingStrings[i]), textHeight + 1, 2);
    25c2:	0f 2e       	mov	r0, r31
    25c4:	fe ef       	ldi	r31, 0xFE	; 254
    25c6:	3f 2e       	mov	r3, r31
    25c8:	f0 2d       	mov	r31, r0
    25ca:	31 0e       	add	r3, r17
		highlightChoice = 1;
	}
	
	for (int i = 0; i < settings; i++){
		
		y = TopMargin + i * textHeight/* +  (Scroll[currentPage] * textHeight)*/;
    25cc:	20 91 57 05 	lds	r18, 0x0557	; 0x800557 <textHeight>
    25d0:	2c 9d       	mul	r18, r12
    25d2:	c0 01       	movw	r24, r0
    25d4:	2d 9d       	mul	r18, r13
    25d6:	90 0d       	add	r25, r0
    25d8:	11 24       	eor	r1, r1
    25da:	7c 01       	movw	r14, r24
    25dc:	f9 e0       	ldi	r31, 0x09	; 9
    25de:	ef 0e       	add	r14, r31
    25e0:	f1 1c       	adc	r15, r1

		if(currentChoice[5] == i){
    25e2:	f2 01       	movw	r30, r4
    25e4:	85 81       	ldd	r24, Z+5	; 0x05
    25e6:	08 2e       	mov	r0, r24
    25e8:	00 0c       	add	r0, r0
    25ea:	99 0b       	sbc	r25, r25
    25ec:	8c 15       	cp	r24, r12
    25ee:	9d 05       	cpc	r25, r13
    25f0:	09 f0       	breq	.+2      	; 0x25f4 <Page_5+0x11c>
    25f2:	6c c0       	rjmp	.+216    	; 0x26cc <Page_5+0x1f4>
			
			u8g2_SetDrawColor(&u8g2, 1);
    25f4:	61 e0       	ldi	r22, 0x01	; 1
    25f6:	82 ef       	ldi	r24, 0xF2	; 242
    25f8:	94 e0       	ldi	r25, 0x04	; 4
    25fa:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
			
			u8g2_DrawStr(&u8g2, 0, y+yStat, selector);
    25fe:	2e 2c       	mov	r2, r14
    2600:	26 0c       	add	r2, r6
    2602:	25 ec       	ldi	r18, 0xC5	; 197
    2604:	31 e0       	ldi	r19, 0x01	; 1
    2606:	42 2d       	mov	r20, r2
    2608:	60 e0       	ldi	r22, 0x00	; 0
    260a:	82 ef       	ldi	r24, 0xF2	; 242
    260c:	94 e0       	ldi	r25, 0x04	; 4
    260e:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
			if(highlightChoice){
    2612:	fd 81       	ldd	r31, Y+5	; 0x05
    2614:	ff 23       	and	r31, r31
    2616:	89 f1       	breq	.+98     	; 0x267a <Page_5+0x1a2>
				u8g2_SetDrawColor(&u8g2, 1);
    2618:	61 e0       	ldi	r22, 0x01	; 1
    261a:	82 ef       	ldi	r24, 0xF2	; 242
    261c:	94 e0       	ldi	r25, 0x04	; 4
    261e:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawRBox(&u8g2, x-2, y+yStat - textHeight+1, u8g2_GetStrWidth(&u8g2, settingStrings[i]), textHeight + 1, 2);
    2622:	00 91 57 05 	lds	r16, 0x0557	; 0x800557 <textHeight>
    2626:	0f 5f       	subi	r16, 0xFF	; 255
    2628:	f5 01       	movw	r30, r10
    262a:	60 81       	ld	r22, Z
    262c:	71 81       	ldd	r23, Z+1	; 0x01
    262e:	82 ef       	ldi	r24, 0xF2	; 242
    2630:	94 e0       	ldi	r25, 0x04	; 4
    2632:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    2636:	90 91 57 05 	lds	r25, 0x0557	; 0x800557 <textHeight>
    263a:	42 2d       	mov	r20, r2
    263c:	49 1b       	sub	r20, r25
    263e:	4f 5f       	subi	r20, 0xFF	; 255
    2640:	68 94       	set
    2642:	ee 24       	eor	r14, r14
    2644:	e1 f8       	bld	r14, 1
    2646:	28 2f       	mov	r18, r24
    2648:	63 2d       	mov	r22, r3
    264a:	82 ef       	ldi	r24, 0xF2	; 242
    264c:	94 e0       	ldi	r25, 0x04	; 4
    264e:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <u8g2_DrawRBox>
				u8g2_SetDrawColor(&u8g2, 0);
    2652:	60 e0       	ldi	r22, 0x00	; 0
    2654:	82 ef       	ldi	r24, 0xF2	; 242
    2656:	94 e0       	ldi	r25, 0x04	; 4
    2658:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
				u8g2_DrawStr(&u8g2, x, y+yStat, settingStrings[i]);
    265c:	f5 01       	movw	r30, r10
    265e:	20 81       	ld	r18, Z
    2660:	31 81       	ldd	r19, Z+1	; 0x01
    2662:	42 2d       	mov	r20, r2
    2664:	61 2f       	mov	r22, r17
    2666:	82 ef       	ldi	r24, 0xF2	; 242
    2668:	94 e0       	ldi	r25, 0x04	; 4
    266a:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
				u8g2_SetDrawColor(&u8g2, 1);
    266e:	61 e0       	ldi	r22, 0x01	; 1
    2670:	82 ef       	ldi	r24, 0xF2	; 242
    2672:	94 e0       	ldi	r25, 0x04	; 4
    2674:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <u8g2_SetDrawColor>
    2678:	09 c0       	rjmp	.+18     	; 0x268c <Page_5+0x1b4>
				}else{
				
				u8g2_DrawStr(&u8g2, x, y+yStat, settingStrings[i]);
    267a:	f5 01       	movw	r30, r10
    267c:	20 81       	ld	r18, Z
    267e:	31 81       	ldd	r19, Z+1	; 0x01
    2680:	42 2d       	mov	r20, r2
    2682:	61 2f       	mov	r22, r17
    2684:	82 ef       	ldi	r24, 0xF2	; 242
    2686:	94 e0       	ldi	r25, 0x04	; 4
    2688:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
			}
			
			
			char tmptxt[4];
			itoa(*(settingVal + i), tmptxt, 10);
    268c:	e0 91 e0 04 	lds	r30, 0x04E0	; 0x8004e0 <settingVal>
    2690:	f0 91 e1 04 	lds	r31, 0x04E1	; 0x8004e1 <settingVal+0x1>
    2694:	e8 0d       	add	r30, r8
    2696:	f9 1d       	adc	r31, r9
    2698:	4a e0       	ldi	r20, 0x0A	; 10
    269a:	be 01       	movw	r22, r28
    269c:	6f 5f       	subi	r22, 0xFF	; 255
    269e:	7f 4f       	sbci	r23, 0xFF	; 255
    26a0:	80 81       	ld	r24, Z
    26a2:	91 81       	ldd	r25, Z+1	; 0x01
    26a4:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
			u8g2_DrawStr(&u8g2, x + u8g2_GetStrWidth(&u8g2, settingStrings[i]), y+yStat, tmptxt);
    26a8:	f5 01       	movw	r30, r10
    26aa:	60 81       	ld	r22, Z
    26ac:	71 81       	ldd	r23, Z+1	; 0x01
    26ae:	82 ef       	ldi	r24, 0xF2	; 242
    26b0:	94 e0       	ldi	r25, 0x04	; 4
    26b2:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    26b6:	68 2f       	mov	r22, r24
    26b8:	61 0f       	add	r22, r17
    26ba:	9e 01       	movw	r18, r28
    26bc:	2f 5f       	subi	r18, 0xFF	; 255
    26be:	3f 4f       	sbci	r19, 0xFF	; 255
    26c0:	42 2d       	mov	r20, r2
    26c2:	82 ef       	ldi	r24, 0xF2	; 242
    26c4:	94 e0       	ldi	r25, 0x04	; 4
    26c6:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
    26ca:	2a c0       	rjmp	.+84     	; 0x2720 <Page_5+0x248>
			}else{
			u8g2_DrawStr(&u8g2, x, y+yStat, settingStrings[i]);
    26cc:	0e 2d       	mov	r16, r14
    26ce:	06 0d       	add	r16, r6
    26d0:	f5 01       	movw	r30, r10
    26d2:	20 81       	ld	r18, Z
    26d4:	31 81       	ldd	r19, Z+1	; 0x01
    26d6:	40 2f       	mov	r20, r16
    26d8:	61 2f       	mov	r22, r17
    26da:	82 ef       	ldi	r24, 0xF2	; 242
    26dc:	94 e0       	ldi	r25, 0x04	; 4
    26de:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
			char tmptxt[4];
			itoa(*(settingVal + i), tmptxt, 10);
    26e2:	e0 91 e0 04 	lds	r30, 0x04E0	; 0x8004e0 <settingVal>
    26e6:	f0 91 e1 04 	lds	r31, 0x04E1	; 0x8004e1 <settingVal+0x1>
    26ea:	e8 0d       	add	r30, r8
    26ec:	f9 1d       	adc	r31, r9
    26ee:	4a e0       	ldi	r20, 0x0A	; 10
    26f0:	be 01       	movw	r22, r28
    26f2:	6f 5f       	subi	r22, 0xFF	; 255
    26f4:	7f 4f       	sbci	r23, 0xFF	; 255
    26f6:	80 81       	ld	r24, Z
    26f8:	91 81       	ldd	r25, Z+1	; 0x01
    26fa:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__itoa_ncheck>
			u8g2_DrawStr(&u8g2, x + u8g2_GetStrWidth(&u8g2, settingStrings[i]), y+yStat, tmptxt);
    26fe:	f5 01       	movw	r30, r10
    2700:	60 81       	ld	r22, Z
    2702:	71 81       	ldd	r23, Z+1	; 0x01
    2704:	82 ef       	ldi	r24, 0xF2	; 242
    2706:	94 e0       	ldi	r25, 0x04	; 4
    2708:	0e 94 41 1c 	call	0x3882	; 0x3882 <u8g2_GetStrWidth>
    270c:	61 2f       	mov	r22, r17
    270e:	68 0f       	add	r22, r24
    2710:	9e 01       	movw	r18, r28
    2712:	2f 5f       	subi	r18, 0xFF	; 255
    2714:	3f 4f       	sbci	r19, 0xFF	; 255
    2716:	40 2f       	mov	r20, r16
    2718:	82 ef       	ldi	r24, 0xF2	; 242
    271a:	94 e0       	ldi	r25, 0x04	; 4
    271c:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <u8g2_DrawStr>
		*(settingVal + currentChoice[5]) -= currentChoice[currentPage];
		currentChoice[currentPage] = 0;
		highlightChoice = 1;
	}
	
	for (int i = 0; i < settings; i++){
    2720:	ff ef       	ldi	r31, 0xFF	; 255
    2722:	cf 1a       	sub	r12, r31
    2724:	df 0a       	sbc	r13, r31
    2726:	22 e0       	ldi	r18, 0x02	; 2
    2728:	82 0e       	add	r8, r18
    272a:	91 1c       	adc	r9, r1
    272c:	82 e0       	ldi	r24, 0x02	; 2
    272e:	a8 0e       	add	r10, r24
    2730:	b1 1c       	adc	r11, r1
    2732:	e5 e0       	ldi	r30, 0x05	; 5
    2734:	ce 16       	cp	r12, r30
    2736:	d1 04       	cpc	r13, r1
    2738:	09 f0       	breq	.+2      	; 0x273c <Page_5+0x264>
    273a:	48 cf       	rjmp	.-368    	; 0x25cc <Page_5+0xf4>
			u8g2_DrawStr(&u8g2, x + u8g2_GetStrWidth(&u8g2, settingStrings[i]), y+yStat, tmptxt);
		}
	}


	reDrawRequired = 1;
    273c:	81 e0       	ldi	r24, 0x01	; 1
    273e:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
}
    2742:	0f 90       	pop	r0
    2744:	0f 90       	pop	r0
    2746:	0f 90       	pop	r0
    2748:	0f 90       	pop	r0
    274a:	0f 90       	pop	r0
    274c:	df 91       	pop	r29
    274e:	cf 91       	pop	r28
    2750:	1f 91       	pop	r17
    2752:	0f 91       	pop	r16
    2754:	ff 90       	pop	r15
    2756:	ef 90       	pop	r14
    2758:	df 90       	pop	r13
    275a:	cf 90       	pop	r12
    275c:	bf 90       	pop	r11
    275e:	af 90       	pop	r10
    2760:	9f 90       	pop	r9
    2762:	8f 90       	pop	r8
    2764:	7f 90       	pop	r7
    2766:	6f 90       	pop	r6
    2768:	5f 90       	pop	r5
    276a:	4f 90       	pop	r4
    276c:	3f 90       	pop	r3
    276e:	2f 90       	pop	r2
    2770:	08 95       	ret

00002772 <draw>:
		}
	}
}

void draw(void){
	switch(currentPage){
    2772:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <currentPage>
    2776:	82 30       	cpi	r24, 0x02	; 2
    2778:	e9 f0       	breq	.+58     	; 0x27b4 <draw+0x42>
    277a:	2c f4       	brge	.+10     	; 0x2786 <draw+0x14>
    277c:	88 23       	and	r24, r24
    277e:	41 f0       	breq	.+16     	; 0x2790 <draw+0x1e>
    2780:	81 30       	cpi	r24, 0x01	; 1
    2782:	49 f0       	breq	.+18     	; 0x2796 <draw+0x24>
    2784:	26 c0       	rjmp	.+76     	; 0x27d2 <draw+0x60>
    2786:	83 30       	cpi	r24, 0x03	; 3
    2788:	d1 f0       	breq	.+52     	; 0x27be <draw+0x4c>
    278a:	84 30       	cpi	r24, 0x04	; 4
    278c:	e9 f0       	breq	.+58     	; 0x27c8 <draw+0x56>
    278e:	21 c0       	rjmp	.+66     	; 0x27d2 <draw+0x60>
		case 0:// page 0 start
		StartPage();
    2790:	0e 94 1c 10 	call	0x2038	; 0x2038 <StartPage>
		break;//end page0
    2794:	08 95       	ret
		
		case 1://page 1 menu
		ScreenOverlay();//remove this if you don't want the overlay
    2796:	0e 94 8c 10 	call	0x2118	; 0x2118 <ScreenOverlay>
		
		switch (MenuAnim)//for switching between menu animations
    279a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <MenuAnim>
    279e:	88 23       	and	r24, r24
    27a0:	19 f0       	breq	.+6      	; 0x27a8 <draw+0x36>
    27a2:	81 30       	cpi	r24, 0x01	; 1
    27a4:	21 f0       	breq	.+8      	; 0x27ae <draw+0x3c>
    27a6:	08 95       	ret
		{
			case 0://animation 0
			MenuStyle0();
    27a8:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <MenuStyle0>
			break;//end animation 0
    27ac:	08 95       	ret
			
			case 1://animation 1
			MenuStyle1();
    27ae:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <MenuStyle1>
			break;//end animation 1
    27b2:	08 95       	ret
		}
		break;//end page 1
		
		case 2:
		ScreenOverlay();
    27b4:	0e 94 8c 10 	call	0x2118	; 0x2118 <ScreenOverlay>
		Page_2();
    27b8:	0e 94 51 11 	call	0x22a2	; 0x22a2 <Page_2>
		break;
    27bc:	08 95       	ret

		case 3:
		ScreenOverlay();
    27be:	0e 94 8c 10 	call	0x2118	; 0x2118 <ScreenOverlay>
		Page_3();
    27c2:	0e 94 17 12 	call	0x242e	; 0x242e <Page_3>
		break;
    27c6:	08 95       	ret
		
		case 4:
		ScreenOverlay();
    27c8:	0e 94 8c 10 	call	0x2118	; 0x2118 <ScreenOverlay>
		Page_4();
    27cc:	0e 94 57 12 	call	0x24ae	; 0x24ae <Page_4>
		break;
    27d0:	08 95       	ret
		
		default:
		if (currentPage >= SETTINGPAGE && currentPage <= SETTINGPAGE + settings){
    27d2:	85 50       	subi	r24, 0x05	; 5
    27d4:	86 30       	cpi	r24, 0x06	; 6
    27d6:	28 f4       	brcc	.+10     	; 0x27e2 <draw+0x70>
			ScreenOverlay();
    27d8:	0e 94 8c 10 	call	0x2118	; 0x2118 <ScreenOverlay>
			Page_5();
    27dc:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <Page_5>
    27e0:	08 95       	ret
			}else{
			nopage();
    27e2:	0e 94 7d 10 	call	0x20fa	; 0x20fa <nopage>
    27e6:	08 95       	ret

000027e8 <screenRoutine>:

	return ADCval;
}
//--------------------------------------
void screenRoutine(void){
	updateButtons();
    27e8:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <updateButtons>
	updateBatterySens();
    27ec:	0e 94 2b 0c 	call	0x1856	; 0x1856 <updateBatterySens>
	if (reDrawRequired || reDrawRequiredTime)
    27f0:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <reDrawRequired>
    27f4:	81 11       	cpse	r24, r1
    27f6:	04 c0       	rjmp	.+8      	; 0x2800 <screenRoutine+0x18>
    27f8:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <reDrawRequiredTime>
    27fc:	88 23       	and	r24, r24
    27fe:	89 f0       	breq	.+34     	; 0x2822 <screenRoutine+0x3a>
	{
		reDrawRequired = 1;
    2800:	81 e0       	ldi	r24, 0x01	; 1
    2802:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <reDrawRequired>
		u8g2_ClearBuffer(&u8g2);
		draw();
		u8g2_SendBuffer(&u8g2);
		
*/
		u8g2_FirstPage(&u8g2);
    2806:	82 ef       	ldi	r24, 0xF2	; 242
    2808:	94 e0       	ldi	r25, 0x04	; 4
    280a:	0e 94 58 16 	call	0x2cb0	; 0x2cb0 <u8g2_FirstPage>
		do{
		draw();
    280e:	0e 94 b9 13 	call	0x2772	; 0x2772 <draw>
		}while(u8g2_NextPage(&u8g2));
    2812:	82 ef       	ldi	r24, 0xF2	; 242
    2814:	94 e0       	ldi	r25, 0x04	; 4
    2816:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <u8g2_NextPage>
    281a:	81 11       	cpse	r24, r1
    281c:	f8 cf       	rjmp	.-16     	; 0x280e <screenRoutine+0x26>
		
		
		reDrawRequiredTime = 0;
    281e:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <reDrawRequiredTime>
    2822:	08 95       	ret

00002824 <i2c_init>:
    2824:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    2828:	88 e4       	ldi	r24, 0x48	; 72
    282a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
    282e:	08 95       	ret

00002830 <i2c_start_wait>:
    2830:	cf 93       	push	r28
    2832:	df 93       	push	r29
    2834:	ec eb       	ldi	r30, 0xBC	; 188
    2836:	f0 e0       	ldi	r31, 0x00	; 0
    2838:	44 ea       	ldi	r20, 0xA4	; 164
    283a:	a9 eb       	ldi	r26, 0xB9	; 185
    283c:	b0 e0       	ldi	r27, 0x00	; 0
    283e:	cb eb       	ldi	r28, 0xBB	; 187
    2840:	d0 e0       	ldi	r29, 0x00	; 0
    2842:	54 e8       	ldi	r21, 0x84	; 132
    2844:	64 e9       	ldi	r22, 0x94	; 148
    2846:	40 83       	st	Z, r20
    2848:	20 e0       	ldi	r18, 0x00	; 0
    284a:	30 e0       	ldi	r19, 0x00	; 0
    284c:	90 81       	ld	r25, Z
    284e:	99 23       	and	r25, r25
    2850:	34 f0       	brlt	.+12     	; 0x285e <i2c_start_wait+0x2e>
    2852:	2f 5f       	subi	r18, 0xFF	; 255
    2854:	3f 4f       	sbci	r19, 0xFF	; 255
    2856:	21 15       	cp	r18, r1
    2858:	91 e0       	ldi	r25, 0x01	; 1
    285a:	39 07       	cpc	r19, r25
    285c:	b9 f7       	brne	.-18     	; 0x284c <i2c_start_wait+0x1c>
    285e:	9c 91       	ld	r25, X
    2860:	98 7f       	andi	r25, 0xF8	; 248
    2862:	98 30       	cpi	r25, 0x08	; 8
    2864:	11 f0       	breq	.+4      	; 0x286a <i2c_start_wait+0x3a>
    2866:	90 31       	cpi	r25, 0x10	; 16
    2868:	71 f7       	brne	.-36     	; 0x2846 <i2c_start_wait+0x16>
    286a:	88 83       	st	Y, r24
    286c:	50 83       	st	Z, r21
    286e:	20 e0       	ldi	r18, 0x00	; 0
    2870:	30 e0       	ldi	r19, 0x00	; 0
    2872:	90 81       	ld	r25, Z
    2874:	99 23       	and	r25, r25
    2876:	34 f0       	brlt	.+12     	; 0x2884 <i2c_start_wait+0x54>
    2878:	2f 5f       	subi	r18, 0xFF	; 255
    287a:	3f 4f       	sbci	r19, 0xFF	; 255
    287c:	21 15       	cp	r18, r1
    287e:	91 e0       	ldi	r25, 0x01	; 1
    2880:	39 07       	cpc	r19, r25
    2882:	b9 f7       	brne	.-18     	; 0x2872 <i2c_start_wait+0x42>
    2884:	9c 91       	ld	r25, X
    2886:	98 7f       	andi	r25, 0xF8	; 248
    2888:	90 32       	cpi	r25, 0x20	; 32
    288a:	11 f0       	breq	.+4      	; 0x2890 <i2c_start_wait+0x60>
    288c:	98 35       	cpi	r25, 0x58	; 88
    288e:	69 f4       	brne	.+26     	; 0x28aa <i2c_start_wait+0x7a>
    2890:	60 83       	st	Z, r22
    2892:	20 e0       	ldi	r18, 0x00	; 0
    2894:	30 e0       	ldi	r19, 0x00	; 0
    2896:	90 81       	ld	r25, Z
    2898:	94 ff       	sbrs	r25, 4
    289a:	d5 cf       	rjmp	.-86     	; 0x2846 <i2c_start_wait+0x16>
    289c:	2f 5f       	subi	r18, 0xFF	; 255
    289e:	3f 4f       	sbci	r19, 0xFF	; 255
    28a0:	21 15       	cp	r18, r1
    28a2:	91 e0       	ldi	r25, 0x01	; 1
    28a4:	39 07       	cpc	r19, r25
    28a6:	b9 f7       	brne	.-18     	; 0x2896 <i2c_start_wait+0x66>
    28a8:	ce cf       	rjmp	.-100    	; 0x2846 <i2c_start_wait+0x16>
    28aa:	df 91       	pop	r29
    28ac:	cf 91       	pop	r28
    28ae:	08 95       	ret

000028b0 <i2c_stop>:
    28b0:	84 e9       	ldi	r24, 0x94	; 148
    28b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    28b6:	80 e0       	ldi	r24, 0x00	; 0
    28b8:	90 e0       	ldi	r25, 0x00	; 0
    28ba:	ec eb       	ldi	r30, 0xBC	; 188
    28bc:	f0 e0       	ldi	r31, 0x00	; 0
    28be:	20 81       	ld	r18, Z
    28c0:	24 ff       	sbrs	r18, 4
    28c2:	05 c0       	rjmp	.+10     	; 0x28ce <i2c_stop+0x1e>
    28c4:	01 96       	adiw	r24, 0x01	; 1
    28c6:	81 15       	cp	r24, r1
    28c8:	21 e0       	ldi	r18, 0x01	; 1
    28ca:	92 07       	cpc	r25, r18
    28cc:	c1 f7       	brne	.-16     	; 0x28be <i2c_stop+0xe>
    28ce:	08 95       	ret

000028d0 <i2c_write>:
    28d0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    28d4:	84 e8       	ldi	r24, 0x84	; 132
    28d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    28da:	8f ef       	ldi	r24, 0xFF	; 255
    28dc:	90 e0       	ldi	r25, 0x00	; 0
    28de:	a0 e0       	ldi	r26, 0x00	; 0
    28e0:	b0 e0       	ldi	r27, 0x00	; 0
    28e2:	ec eb       	ldi	r30, 0xBC	; 188
    28e4:	f0 e0       	ldi	r31, 0x00	; 0
    28e6:	20 81       	ld	r18, Z
    28e8:	22 23       	and	r18, r18
    28ea:	2c f0       	brlt	.+10     	; 0x28f6 <i2c_write+0x26>
    28ec:	01 97       	sbiw	r24, 0x01	; 1
    28ee:	a1 09       	sbc	r26, r1
    28f0:	b1 09       	sbc	r27, r1
    28f2:	c8 f7       	brcc	.-14     	; 0x28e6 <i2c_write+0x16>
    28f4:	04 c0       	rjmp	.+8      	; 0x28fe <i2c_write+0x2e>
    28f6:	89 2b       	or	r24, r25
    28f8:	8a 2b       	or	r24, r26
    28fa:	8b 2b       	or	r24, r27
    28fc:	41 f0       	breq	.+16     	; 0x290e <i2c_write+0x3e>
    28fe:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    2902:	98 7f       	andi	r25, 0xF8	; 248
    2904:	81 e0       	ldi	r24, 0x01	; 1
    2906:	98 32       	cpi	r25, 0x28	; 40
    2908:	19 f4       	brne	.+6      	; 0x2910 <i2c_write+0x40>
    290a:	80 e0       	ldi	r24, 0x00	; 0
    290c:	08 95       	ret
    290e:	81 e0       	ldi	r24, 0x01	; 1
    2910:	08 95       	ret

00002912 <u8g2_DrawBox>:
    2912:	df 92       	push	r13
    2914:	ef 92       	push	r14
    2916:	ff 92       	push	r15
    2918:	0f 93       	push	r16
    291a:	1f 93       	push	r17
    291c:	cf 93       	push	r28
    291e:	df 93       	push	r29
    2920:	7c 01       	movw	r14, r24
    2922:	16 2f       	mov	r17, r22
    2924:	c4 2f       	mov	r28, r20
    2926:	d2 2e       	mov	r13, r18
    2928:	d0 2f       	mov	r29, r16
    292a:	04 2f       	mov	r16, r20
    292c:	0d 0f       	add	r16, r29
    292e:	26 2f       	mov	r18, r22
    2930:	2d 0d       	add	r18, r13
    2932:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    2936:	88 23       	and	r24, r24
    2938:	61 f0       	breq	.+24     	; 0x2952 <u8g2_DrawBox+0x40>
    293a:	dd 23       	and	r29, r29
    293c:	51 f0       	breq	.+20     	; 0x2952 <u8g2_DrawBox+0x40>
    293e:	00 e0       	ldi	r16, 0x00	; 0
    2940:	2d 2d       	mov	r18, r13
    2942:	4c 2f       	mov	r20, r28
    2944:	61 2f       	mov	r22, r17
    2946:	c7 01       	movw	r24, r14
    2948:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    294c:	cf 5f       	subi	r28, 0xFF	; 255
    294e:	d1 50       	subi	r29, 0x01	; 1
    2950:	b1 f7       	brne	.-20     	; 0x293e <u8g2_DrawBox+0x2c>
    2952:	df 91       	pop	r29
    2954:	cf 91       	pop	r28
    2956:	1f 91       	pop	r17
    2958:	0f 91       	pop	r16
    295a:	ff 90       	pop	r15
    295c:	ef 90       	pop	r14
    295e:	df 90       	pop	r13
    2960:	08 95       	ret

00002962 <u8g2_DrawFrame>:
    2962:	cf 92       	push	r12
    2964:	df 92       	push	r13
    2966:	ef 92       	push	r14
    2968:	ff 92       	push	r15
    296a:	0f 93       	push	r16
    296c:	1f 93       	push	r17
    296e:	cf 93       	push	r28
    2970:	df 93       	push	r29
    2972:	7c 01       	movw	r14, r24
    2974:	d6 2f       	mov	r29, r22
    2976:	c4 2f       	mov	r28, r20
    2978:	d2 2e       	mov	r13, r18
    297a:	10 2f       	mov	r17, r16
    297c:	c6 2e       	mov	r12, r22
    297e:	c2 0e       	add	r12, r18
    2980:	04 2f       	mov	r16, r20
    2982:	01 0f       	add	r16, r17
    2984:	2c 2d       	mov	r18, r12
    2986:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    298a:	88 23       	and	r24, r24
    298c:	19 f1       	breq	.+70     	; 0x29d4 <u8g2_DrawFrame+0x72>
    298e:	00 e0       	ldi	r16, 0x00	; 0
    2990:	2d 2d       	mov	r18, r13
    2992:	4c 2f       	mov	r20, r28
    2994:	6d 2f       	mov	r22, r29
    2996:	c7 01       	movw	r24, r14
    2998:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    299c:	12 30       	cpi	r17, 0x02	; 2
    299e:	d0 f0       	brcs	.+52     	; 0x29d4 <u8g2_DrawFrame+0x72>
    29a0:	12 50       	subi	r17, 0x02	; 2
    29a2:	cf 5f       	subi	r28, 0xFF	; 255
    29a4:	11 23       	and	r17, r17
    29a6:	79 f0       	breq	.+30     	; 0x29c6 <u8g2_DrawFrame+0x64>
    29a8:	01 e0       	ldi	r16, 0x01	; 1
    29aa:	21 2f       	mov	r18, r17
    29ac:	4c 2f       	mov	r20, r28
    29ae:	6d 2f       	mov	r22, r29
    29b0:	c7 01       	movw	r24, r14
    29b2:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    29b6:	6f ef       	ldi	r22, 0xFF	; 255
    29b8:	6c 0d       	add	r22, r12
    29ba:	21 2f       	mov	r18, r17
    29bc:	4c 2f       	mov	r20, r28
    29be:	c7 01       	movw	r24, r14
    29c0:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    29c4:	c1 0f       	add	r28, r17
    29c6:	00 e0       	ldi	r16, 0x00	; 0
    29c8:	2d 2d       	mov	r18, r13
    29ca:	4c 2f       	mov	r20, r28
    29cc:	6d 2f       	mov	r22, r29
    29ce:	c7 01       	movw	r24, r14
    29d0:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    29d4:	df 91       	pop	r29
    29d6:	cf 91       	pop	r28
    29d8:	1f 91       	pop	r17
    29da:	0f 91       	pop	r16
    29dc:	ff 90       	pop	r15
    29de:	ef 90       	pop	r14
    29e0:	df 90       	pop	r13
    29e2:	cf 90       	pop	r12
    29e4:	08 95       	ret

000029e6 <u8g2_DrawRBox>:
    29e6:	7f 92       	push	r7
    29e8:	8f 92       	push	r8
    29ea:	9f 92       	push	r9
    29ec:	af 92       	push	r10
    29ee:	bf 92       	push	r11
    29f0:	cf 92       	push	r12
    29f2:	df 92       	push	r13
    29f4:	ef 92       	push	r14
    29f6:	ff 92       	push	r15
    29f8:	0f 93       	push	r16
    29fa:	1f 93       	push	r17
    29fc:	cf 93       	push	r28
    29fe:	df 93       	push	r29
    2a00:	6c 01       	movw	r12, r24
    2a02:	16 2f       	mov	r17, r22
    2a04:	f4 2e       	mov	r15, r20
    2a06:	b2 2e       	mov	r11, r18
    2a08:	c0 2f       	mov	r28, r16
    2a0a:	a4 2e       	mov	r10, r20
    2a0c:	a0 0e       	add	r10, r16
    2a0e:	d6 2f       	mov	r29, r22
    2a10:	d2 0f       	add	r29, r18
    2a12:	0a 2d       	mov	r16, r10
    2a14:	2d 2f       	mov	r18, r29
    2a16:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    2a1a:	88 23       	and	r24, r24
    2a1c:	09 f4       	brne	.+2      	; 0x2a20 <u8g2_DrawRBox+0x3a>
    2a1e:	49 c0       	rjmp	.+146    	; 0x2ab2 <u8g2_DrawRBox+0xcc>
    2a20:	81 2e       	mov	r8, r17
    2a22:	8e 0c       	add	r8, r14
    2a24:	9f 2c       	mov	r9, r15
    2a26:	9e 0c       	add	r9, r14
    2a28:	8e 2d       	mov	r24, r14
    2a2a:	80 95       	com	r24
    2a2c:	d8 0f       	add	r29, r24
    2a2e:	a8 0e       	add	r10, r24
    2a30:	02 e0       	ldi	r16, 0x02	; 2
    2a32:	2e 2d       	mov	r18, r14
    2a34:	49 2d       	mov	r20, r9
    2a36:	68 2d       	mov	r22, r8
    2a38:	c6 01       	movw	r24, r12
    2a3a:	0e 94 92 17 	call	0x2f24	; 0x2f24 <u8g2_DrawDisc>
    2a3e:	01 e0       	ldi	r16, 0x01	; 1
    2a40:	2e 2d       	mov	r18, r14
    2a42:	49 2d       	mov	r20, r9
    2a44:	6d 2f       	mov	r22, r29
    2a46:	c6 01       	movw	r24, r12
    2a48:	0e 94 92 17 	call	0x2f24	; 0x2f24 <u8g2_DrawDisc>
    2a4c:	04 e0       	ldi	r16, 0x04	; 4
    2a4e:	2e 2d       	mov	r18, r14
    2a50:	4a 2d       	mov	r20, r10
    2a52:	68 2d       	mov	r22, r8
    2a54:	c6 01       	movw	r24, r12
    2a56:	0e 94 92 17 	call	0x2f24	; 0x2f24 <u8g2_DrawDisc>
    2a5a:	08 e0       	ldi	r16, 0x08	; 8
    2a5c:	2e 2d       	mov	r18, r14
    2a5e:	4a 2d       	mov	r20, r10
    2a60:	6d 2f       	mov	r22, r29
    2a62:	c6 01       	movw	r24, r12
    2a64:	0e 94 92 17 	call	0x2f24	; 0x2f24 <u8g2_DrawDisc>
    2a68:	2b 2d       	mov	r18, r11
    2a6a:	2e 19       	sub	r18, r14
    2a6c:	2e 19       	sub	r18, r14
    2a6e:	23 30       	cpi	r18, 0x03	; 3
    2a70:	98 f0       	brcs	.+38     	; 0x2a98 <u8g2_DrawRBox+0xb2>
    2a72:	83 94       	inc	r8
    2a74:	de ef       	ldi	r29, 0xFE	; 254
    2a76:	d2 0f       	add	r29, r18
    2a78:	77 24       	eor	r7, r7
    2a7a:	73 94       	inc	r7
    2a7c:	7e 0c       	add	r7, r14
    2a7e:	07 2d       	mov	r16, r7
    2a80:	2d 2f       	mov	r18, r29
    2a82:	4f 2d       	mov	r20, r15
    2a84:	68 2d       	mov	r22, r8
    2a86:	c6 01       	movw	r24, r12
    2a88:	0e 94 89 14 	call	0x2912	; 0x2912 <u8g2_DrawBox>
    2a8c:	2d 2f       	mov	r18, r29
    2a8e:	4a 2d       	mov	r20, r10
    2a90:	68 2d       	mov	r22, r8
    2a92:	c6 01       	movw	r24, r12
    2a94:	0e 94 89 14 	call	0x2912	; 0x2912 <u8g2_DrawBox>
    2a98:	ce 19       	sub	r28, r14
    2a9a:	ce 19       	sub	r28, r14
    2a9c:	c3 30       	cpi	r28, 0x03	; 3
    2a9e:	48 f0       	brcs	.+18     	; 0x2ab2 <u8g2_DrawRBox+0xcc>
    2aa0:	0e ef       	ldi	r16, 0xFE	; 254
    2aa2:	0c 0f       	add	r16, r28
    2aa4:	41 e0       	ldi	r20, 0x01	; 1
    2aa6:	49 0d       	add	r20, r9
    2aa8:	2b 2d       	mov	r18, r11
    2aaa:	61 2f       	mov	r22, r17
    2aac:	c6 01       	movw	r24, r12
    2aae:	0e 94 89 14 	call	0x2912	; 0x2912 <u8g2_DrawBox>
    2ab2:	df 91       	pop	r29
    2ab4:	cf 91       	pop	r28
    2ab6:	1f 91       	pop	r17
    2ab8:	0f 91       	pop	r16
    2aba:	ff 90       	pop	r15
    2abc:	ef 90       	pop	r14
    2abe:	df 90       	pop	r13
    2ac0:	cf 90       	pop	r12
    2ac2:	bf 90       	pop	r11
    2ac4:	af 90       	pop	r10
    2ac6:	9f 90       	pop	r9
    2ac8:	8f 90       	pop	r8
    2aca:	7f 90       	pop	r7
    2acc:	08 95       	ret

00002ace <u8g2_DrawRFrame>:
    2ace:	8f 92       	push	r8
    2ad0:	9f 92       	push	r9
    2ad2:	af 92       	push	r10
    2ad4:	bf 92       	push	r11
    2ad6:	cf 92       	push	r12
    2ad8:	df 92       	push	r13
    2ada:	ef 92       	push	r14
    2adc:	ff 92       	push	r15
    2ade:	0f 93       	push	r16
    2ae0:	1f 93       	push	r17
    2ae2:	cf 93       	push	r28
    2ae4:	df 93       	push	r29
    2ae6:	ec 01       	movw	r28, r24
    2ae8:	16 2f       	mov	r17, r22
    2aea:	f4 2e       	mov	r15, r20
    2aec:	c2 2e       	mov	r12, r18
    2aee:	b0 2e       	mov	r11, r16
    2af0:	a4 2e       	mov	r10, r20
    2af2:	a0 0e       	add	r10, r16
    2af4:	d6 2e       	mov	r13, r22
    2af6:	d2 0e       	add	r13, r18
    2af8:	0a 2d       	mov	r16, r10
    2afa:	2d 2d       	mov	r18, r13
    2afc:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    2b00:	88 23       	and	r24, r24
    2b02:	09 f4       	brne	.+2      	; 0x2b06 <u8g2_DrawRFrame+0x38>
    2b04:	52 c0       	rjmp	.+164    	; 0x2baa <u8g2_DrawRFrame+0xdc>
    2b06:	81 2e       	mov	r8, r17
    2b08:	8e 0c       	add	r8, r14
    2b0a:	9f 2c       	mov	r9, r15
    2b0c:	9e 0c       	add	r9, r14
    2b0e:	8e 2d       	mov	r24, r14
    2b10:	80 95       	com	r24
    2b12:	d8 0e       	add	r13, r24
    2b14:	a8 0e       	add	r10, r24
    2b16:	02 e0       	ldi	r16, 0x02	; 2
    2b18:	2e 2d       	mov	r18, r14
    2b1a:	49 2d       	mov	r20, r9
    2b1c:	68 2d       	mov	r22, r8
    2b1e:	ce 01       	movw	r24, r28
    2b20:	0e 94 40 17 	call	0x2e80	; 0x2e80 <u8g2_DrawCircle>
    2b24:	01 e0       	ldi	r16, 0x01	; 1
    2b26:	2e 2d       	mov	r18, r14
    2b28:	49 2d       	mov	r20, r9
    2b2a:	6d 2d       	mov	r22, r13
    2b2c:	ce 01       	movw	r24, r28
    2b2e:	0e 94 40 17 	call	0x2e80	; 0x2e80 <u8g2_DrawCircle>
    2b32:	04 e0       	ldi	r16, 0x04	; 4
    2b34:	2e 2d       	mov	r18, r14
    2b36:	4a 2d       	mov	r20, r10
    2b38:	68 2d       	mov	r22, r8
    2b3a:	ce 01       	movw	r24, r28
    2b3c:	0e 94 40 17 	call	0x2e80	; 0x2e80 <u8g2_DrawCircle>
    2b40:	08 e0       	ldi	r16, 0x08	; 8
    2b42:	2e 2d       	mov	r18, r14
    2b44:	4a 2d       	mov	r20, r10
    2b46:	6d 2d       	mov	r22, r13
    2b48:	ce 01       	movw	r24, r28
    2b4a:	0e 94 40 17 	call	0x2e80	; 0x2e80 <u8g2_DrawCircle>
    2b4e:	2c 2d       	mov	r18, r12
    2b50:	2e 19       	sub	r18, r14
    2b52:	2e 19       	sub	r18, r14
    2b54:	0b 2d       	mov	r16, r11
    2b56:	0e 19       	sub	r16, r14
    2b58:	0e 19       	sub	r16, r14
    2b5a:	23 30       	cpi	r18, 0x03	; 3
    2b5c:	a0 f0       	brcs	.+40     	; 0x2b86 <u8g2_DrawRFrame+0xb8>
    2b5e:	83 94       	inc	r8
    2b60:	0f 2e       	mov	r0, r31
    2b62:	fe ef       	ldi	r31, 0xFE	; 254
    2b64:	ef 2e       	mov	r14, r31
    2b66:	f0 2d       	mov	r31, r0
    2b68:	e2 0e       	add	r14, r18
    2b6a:	2e 2d       	mov	r18, r14
    2b6c:	4f 2d       	mov	r20, r15
    2b6e:	68 2d       	mov	r22, r8
    2b70:	ce 01       	movw	r24, r28
    2b72:	0e 94 ca 1c 	call	0x3994	; 0x3994 <u8g2_DrawHLine>
    2b76:	4f ef       	ldi	r20, 0xFF	; 255
    2b78:	4b 0d       	add	r20, r11
    2b7a:	4f 0d       	add	r20, r15
    2b7c:	2e 2d       	mov	r18, r14
    2b7e:	68 2d       	mov	r22, r8
    2b80:	ce 01       	movw	r24, r28
    2b82:	0e 94 ca 1c 	call	0x3994	; 0x3994 <u8g2_DrawHLine>
    2b86:	03 30       	cpi	r16, 0x03	; 3
    2b88:	80 f0       	brcs	.+32     	; 0x2baa <u8g2_DrawRFrame+0xdc>
    2b8a:	93 94       	inc	r9
    2b8c:	02 50       	subi	r16, 0x02	; 2
    2b8e:	20 2f       	mov	r18, r16
    2b90:	49 2d       	mov	r20, r9
    2b92:	61 2f       	mov	r22, r17
    2b94:	ce 01       	movw	r24, r28
    2b96:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2b9a:	6f ef       	ldi	r22, 0xFF	; 255
    2b9c:	6c 0d       	add	r22, r12
    2b9e:	61 0f       	add	r22, r17
    2ba0:	20 2f       	mov	r18, r16
    2ba2:	49 2d       	mov	r20, r9
    2ba4:	ce 01       	movw	r24, r28
    2ba6:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2baa:	df 91       	pop	r29
    2bac:	cf 91       	pop	r28
    2bae:	1f 91       	pop	r17
    2bb0:	0f 91       	pop	r16
    2bb2:	ff 90       	pop	r15
    2bb4:	ef 90       	pop	r14
    2bb6:	df 90       	pop	r13
    2bb8:	cf 90       	pop	r12
    2bba:	bf 90       	pop	r11
    2bbc:	af 90       	pop	r10
    2bbe:	9f 90       	pop	r9
    2bc0:	8f 90       	pop	r8
    2bc2:	08 95       	ret

00002bc4 <u8g2_send_buffer>:
    2bc4:	af 92       	push	r10
    2bc6:	bf 92       	push	r11
    2bc8:	cf 92       	push	r12
    2bca:	df 92       	push	r13
    2bcc:	ef 92       	push	r14
    2bce:	ff 92       	push	r15
    2bd0:	0f 93       	push	r16
    2bd2:	1f 93       	push	r17
    2bd4:	cf 93       	push	r28
    2bd6:	df 93       	push	r29
    2bd8:	7c 01       	movw	r14, r24
    2bda:	dc 01       	movw	r26, r24
    2bdc:	94 96       	adiw	r26, 0x24	; 36
    2bde:	bc 90       	ld	r11, X
    2be0:	94 97       	sbiw	r26, 0x24	; 36
    2be2:	95 96       	adiw	r26, 0x25	; 37
    2be4:	dc 91       	ld	r29, X
    2be6:	95 97       	sbiw	r26, 0x25	; 37
    2be8:	ed 91       	ld	r30, X+
    2bea:	fc 91       	ld	r31, X
    2bec:	a1 88       	ldd	r10, Z+17	; 0x11
    2bee:	cd 2f       	mov	r28, r29
    2bf0:	c1 2c       	mov	r12, r1
    2bf2:	d1 2c       	mov	r13, r1
    2bf4:	d7 01       	movw	r26, r14
    2bf6:	ed 91       	ld	r30, X+
    2bf8:	fc 91       	ld	r31, X
    2bfa:	11 97       	sbiw	r26, 0x01	; 1
    2bfc:	20 89       	ldd	r18, Z+16	; 0x10
    2bfe:	92 96       	adiw	r26, 0x22	; 34
    2c00:	0d 91       	ld	r16, X+
    2c02:	1c 91       	ld	r17, X
    2c04:	93 97       	sbiw	r26, 0x23	; 35
    2c06:	42 2f       	mov	r20, r18
    2c08:	50 e0       	ldi	r21, 0x00	; 0
    2c0a:	44 0f       	add	r20, r20
    2c0c:	55 1f       	adc	r21, r21
    2c0e:	44 0f       	add	r20, r20
    2c10:	55 1f       	adc	r21, r21
    2c12:	44 0f       	add	r20, r20
    2c14:	55 1f       	adc	r21, r21
    2c16:	4c 9d       	mul	r20, r12
    2c18:	c0 01       	movw	r24, r0
    2c1a:	4d 9d       	mul	r20, r13
    2c1c:	90 0d       	add	r25, r0
    2c1e:	5c 9d       	mul	r21, r12
    2c20:	90 0d       	add	r25, r0
    2c22:	11 24       	eor	r1, r1
    2c24:	08 0f       	add	r16, r24
    2c26:	19 1f       	adc	r17, r25
    2c28:	4c 2f       	mov	r20, r28
    2c2a:	60 e0       	ldi	r22, 0x00	; 0
    2c2c:	c7 01       	movw	r24, r14
    2c2e:	0e 94 65 20 	call	0x40ca	; 0x40ca <u8x8_DrawTile>
    2c32:	cf 5f       	subi	r28, 0xFF	; 255
    2c34:	8c 2f       	mov	r24, r28
    2c36:	8d 1b       	sub	r24, r29
    2c38:	8b 15       	cp	r24, r11
    2c3a:	28 f4       	brcc	.+10     	; 0x2c46 <u8g2_send_buffer+0x82>
    2c3c:	bf ef       	ldi	r27, 0xFF	; 255
    2c3e:	cb 1a       	sub	r12, r27
    2c40:	db 0a       	sbc	r13, r27
    2c42:	ca 15       	cp	r28, r10
    2c44:	b8 f2       	brcs	.-82     	; 0x2bf4 <u8g2_send_buffer+0x30>
    2c46:	df 91       	pop	r29
    2c48:	cf 91       	pop	r28
    2c4a:	1f 91       	pop	r17
    2c4c:	0f 91       	pop	r16
    2c4e:	ff 90       	pop	r15
    2c50:	ef 90       	pop	r14
    2c52:	df 90       	pop	r13
    2c54:	cf 90       	pop	r12
    2c56:	bf 90       	pop	r11
    2c58:	af 90       	pop	r10
    2c5a:	08 95       	ret

00002c5c <u8g2_ClearBuffer>:
    2c5c:	fc 01       	movw	r30, r24
    2c5e:	a0 81       	ld	r26, Z
    2c60:	b1 81       	ldd	r27, Z+1	; 0x01
    2c62:	50 96       	adiw	r26, 0x10	; 16
    2c64:	9c 91       	ld	r25, X
    2c66:	44 a1       	ldd	r20, Z+36	; 0x24
    2c68:	94 9f       	mul	r25, r20
    2c6a:	a0 01       	movw	r20, r0
    2c6c:	11 24       	eor	r1, r1
    2c6e:	44 0f       	add	r20, r20
    2c70:	55 1f       	adc	r21, r21
    2c72:	44 0f       	add	r20, r20
    2c74:	55 1f       	adc	r21, r21
    2c76:	44 0f       	add	r20, r20
    2c78:	55 1f       	adc	r21, r21
    2c7a:	60 e0       	ldi	r22, 0x00	; 0
    2c7c:	70 e0       	ldi	r23, 0x00	; 0
    2c7e:	82 a1       	ldd	r24, Z+34	; 0x22
    2c80:	93 a1       	ldd	r25, Z+35	; 0x23
    2c82:	0e 94 f2 25 	call	0x4be4	; 0x4be4 <memset>
    2c86:	08 95       	ret

00002c88 <u8g2_SetBufferCurrTileRow>:
    2c88:	cf 93       	push	r28
    2c8a:	df 93       	push	r29
    2c8c:	ec 01       	movw	r28, r24
    2c8e:	6d a3       	std	Y+37, r22	; 0x25
    2c90:	e8 a1       	ldd	r30, Y+32	; 0x20
    2c92:	f9 a1       	ldd	r31, Y+33	; 0x21
    2c94:	01 90       	ld	r0, Z+
    2c96:	f0 81       	ld	r31, Z
    2c98:	e0 2d       	mov	r30, r0
    2c9a:	09 95       	icall
    2c9c:	e8 a1       	ldd	r30, Y+32	; 0x20
    2c9e:	f9 a1       	ldd	r31, Y+33	; 0x21
    2ca0:	02 80       	ldd	r0, Z+2	; 0x02
    2ca2:	f3 81       	ldd	r31, Z+3	; 0x03
    2ca4:	e0 2d       	mov	r30, r0
    2ca6:	ce 01       	movw	r24, r28
    2ca8:	09 95       	icall
    2caa:	df 91       	pop	r29
    2cac:	cf 91       	pop	r28
    2cae:	08 95       	ret

00002cb0 <u8g2_FirstPage>:
    2cb0:	cf 93       	push	r28
    2cb2:	df 93       	push	r29
    2cb4:	ec 01       	movw	r28, r24
    2cb6:	fc 01       	movw	r30, r24
    2cb8:	ec 59       	subi	r30, 0x9C	; 156
    2cba:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbc:	80 81       	ld	r24, Z
    2cbe:	88 23       	and	r24, r24
    2cc0:	19 f0       	breq	.+6      	; 0x2cc8 <u8g2_FirstPage+0x18>
    2cc2:	ce 01       	movw	r24, r28
    2cc4:	0e 94 2e 16 	call	0x2c5c	; 0x2c5c <u8g2_ClearBuffer>
    2cc8:	60 e0       	ldi	r22, 0x00	; 0
    2cca:	ce 01       	movw	r24, r28
    2ccc:	0e 94 44 16 	call	0x2c88	; 0x2c88 <u8g2_SetBufferCurrTileRow>
    2cd0:	df 91       	pop	r29
    2cd2:	cf 91       	pop	r28
    2cd4:	08 95       	ret

00002cd6 <u8g2_NextPage>:
    2cd6:	1f 93       	push	r17
    2cd8:	cf 93       	push	r28
    2cda:	df 93       	push	r29
    2cdc:	ec 01       	movw	r28, r24
    2cde:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <u8g2_send_buffer>
    2ce2:	1d a1       	ldd	r17, Y+37	; 0x25
    2ce4:	8c a1       	ldd	r24, Y+36	; 0x24
    2ce6:	18 0f       	add	r17, r24
    2ce8:	e8 81       	ld	r30, Y
    2cea:	f9 81       	ldd	r31, Y+1	; 0x01
    2cec:	81 89       	ldd	r24, Z+17	; 0x11
    2cee:	18 17       	cp	r17, r24
    2cf0:	28 f0       	brcs	.+10     	; 0x2cfc <u8g2_NextPage+0x26>
    2cf2:	ce 01       	movw	r24, r28
    2cf4:	0e 94 a9 20 	call	0x4152	; 0x4152 <u8x8_RefreshDisplay>
    2cf8:	80 e0       	ldi	r24, 0x00	; 0
    2cfa:	0e c0       	rjmp	.+28     	; 0x2d18 <u8g2_NextPage+0x42>
    2cfc:	fe 01       	movw	r30, r28
    2cfe:	ec 59       	subi	r30, 0x9C	; 156
    2d00:	ff 4f       	sbci	r31, 0xFF	; 255
    2d02:	80 81       	ld	r24, Z
    2d04:	88 23       	and	r24, r24
    2d06:	19 f0       	breq	.+6      	; 0x2d0e <u8g2_NextPage+0x38>
    2d08:	ce 01       	movw	r24, r28
    2d0a:	0e 94 2e 16 	call	0x2c5c	; 0x2c5c <u8g2_ClearBuffer>
    2d0e:	61 2f       	mov	r22, r17
    2d10:	ce 01       	movw	r24, r28
    2d12:	0e 94 44 16 	call	0x2c88	; 0x2c88 <u8g2_SetBufferCurrTileRow>
    2d16:	81 e0       	ldi	r24, 0x01	; 1
    2d18:	df 91       	pop	r29
    2d1a:	cf 91       	pop	r28
    2d1c:	1f 91       	pop	r17
    2d1e:	08 95       	ret

00002d20 <u8g2_draw_circle_section>:
    2d20:	cf 92       	push	r12
    2d22:	df 92       	push	r13
    2d24:	ef 92       	push	r14
    2d26:	0f 93       	push	r16
    2d28:	1f 93       	push	r17
    2d2a:	cf 93       	push	r28
    2d2c:	df 93       	push	r29
    2d2e:	6c 01       	movw	r12, r24
    2d30:	d6 2f       	mov	r29, r22
    2d32:	14 2f       	mov	r17, r20
    2d34:	c2 2f       	mov	r28, r18
    2d36:	e0 fe       	sbrs	r14, 0
    2d38:	0d c0       	rjmp	.+26     	; 0x2d54 <u8g2_draw_circle_section+0x34>
    2d3a:	40 2f       	mov	r20, r16
    2d3c:	41 1b       	sub	r20, r17
    2d3e:	62 2f       	mov	r22, r18
    2d40:	6d 0f       	add	r22, r29
    2d42:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2d46:	40 2f       	mov	r20, r16
    2d48:	4d 1b       	sub	r20, r29
    2d4a:	61 2f       	mov	r22, r17
    2d4c:	6c 0f       	add	r22, r28
    2d4e:	c6 01       	movw	r24, r12
    2d50:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2d54:	e1 fe       	sbrs	r14, 1
    2d56:	0e c0       	rjmp	.+28     	; 0x2d74 <u8g2_draw_circle_section+0x54>
    2d58:	40 2f       	mov	r20, r16
    2d5a:	41 1b       	sub	r20, r17
    2d5c:	6c 2f       	mov	r22, r28
    2d5e:	6d 1b       	sub	r22, r29
    2d60:	c6 01       	movw	r24, r12
    2d62:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2d66:	40 2f       	mov	r20, r16
    2d68:	4d 1b       	sub	r20, r29
    2d6a:	6c 2f       	mov	r22, r28
    2d6c:	61 1b       	sub	r22, r17
    2d6e:	c6 01       	movw	r24, r12
    2d70:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2d74:	e3 fe       	sbrs	r14, 3
    2d76:	0e c0       	rjmp	.+28     	; 0x2d94 <u8g2_draw_circle_section+0x74>
    2d78:	40 2f       	mov	r20, r16
    2d7a:	41 0f       	add	r20, r17
    2d7c:	6c 2f       	mov	r22, r28
    2d7e:	6d 0f       	add	r22, r29
    2d80:	c6 01       	movw	r24, r12
    2d82:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2d86:	40 2f       	mov	r20, r16
    2d88:	4d 0f       	add	r20, r29
    2d8a:	61 2f       	mov	r22, r17
    2d8c:	6c 0f       	add	r22, r28
    2d8e:	c6 01       	movw	r24, r12
    2d90:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2d94:	e2 fe       	sbrs	r14, 2
    2d96:	0e c0       	rjmp	.+28     	; 0x2db4 <u8g2_draw_circle_section+0x94>
    2d98:	40 2f       	mov	r20, r16
    2d9a:	41 0f       	add	r20, r17
    2d9c:	6c 2f       	mov	r22, r28
    2d9e:	6d 1b       	sub	r22, r29
    2da0:	c6 01       	movw	r24, r12
    2da2:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2da6:	40 2f       	mov	r20, r16
    2da8:	4d 0f       	add	r20, r29
    2daa:	6c 2f       	mov	r22, r28
    2dac:	61 1b       	sub	r22, r17
    2dae:	c6 01       	movw	r24, r12
    2db0:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <u8g2_DrawPixel>
    2db4:	df 91       	pop	r29
    2db6:	cf 91       	pop	r28
    2db8:	1f 91       	pop	r17
    2dba:	0f 91       	pop	r16
    2dbc:	ef 90       	pop	r14
    2dbe:	df 90       	pop	r13
    2dc0:	cf 90       	pop	r12
    2dc2:	08 95       	ret

00002dc4 <u8g2_draw_disc_section>:
    2dc4:	cf 92       	push	r12
    2dc6:	df 92       	push	r13
    2dc8:	ef 92       	push	r14
    2dca:	0f 93       	push	r16
    2dcc:	1f 93       	push	r17
    2dce:	cf 93       	push	r28
    2dd0:	df 93       	push	r29
    2dd2:	6c 01       	movw	r12, r24
    2dd4:	c6 2f       	mov	r28, r22
    2dd6:	14 2f       	mov	r17, r20
    2dd8:	d2 2f       	mov	r29, r18
    2dda:	e0 fe       	sbrs	r14, 0
    2ddc:	11 c0       	rjmp	.+34     	; 0x2e00 <u8g2_draw_disc_section+0x3c>
    2dde:	21 e0       	ldi	r18, 0x01	; 1
    2de0:	24 0f       	add	r18, r20
    2de2:	40 2f       	mov	r20, r16
    2de4:	41 1b       	sub	r20, r17
    2de6:	6d 2f       	mov	r22, r29
    2de8:	6c 0f       	add	r22, r28
    2dea:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2dee:	21 e0       	ldi	r18, 0x01	; 1
    2df0:	2c 0f       	add	r18, r28
    2df2:	40 2f       	mov	r20, r16
    2df4:	4c 1b       	sub	r20, r28
    2df6:	61 2f       	mov	r22, r17
    2df8:	6d 0f       	add	r22, r29
    2dfa:	c6 01       	movw	r24, r12
    2dfc:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2e00:	e1 fe       	sbrs	r14, 1
    2e02:	12 c0       	rjmp	.+36     	; 0x2e28 <u8g2_draw_disc_section+0x64>
    2e04:	21 e0       	ldi	r18, 0x01	; 1
    2e06:	21 0f       	add	r18, r17
    2e08:	40 2f       	mov	r20, r16
    2e0a:	41 1b       	sub	r20, r17
    2e0c:	6d 2f       	mov	r22, r29
    2e0e:	6c 1b       	sub	r22, r28
    2e10:	c6 01       	movw	r24, r12
    2e12:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2e16:	21 e0       	ldi	r18, 0x01	; 1
    2e18:	2c 0f       	add	r18, r28
    2e1a:	40 2f       	mov	r20, r16
    2e1c:	4c 1b       	sub	r20, r28
    2e1e:	6d 2f       	mov	r22, r29
    2e20:	61 1b       	sub	r22, r17
    2e22:	c6 01       	movw	r24, r12
    2e24:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2e28:	e3 fe       	sbrs	r14, 3
    2e2a:	10 c0       	rjmp	.+32     	; 0x2e4c <u8g2_draw_disc_section+0x88>
    2e2c:	21 e0       	ldi	r18, 0x01	; 1
    2e2e:	21 0f       	add	r18, r17
    2e30:	40 2f       	mov	r20, r16
    2e32:	6d 2f       	mov	r22, r29
    2e34:	6c 0f       	add	r22, r28
    2e36:	c6 01       	movw	r24, r12
    2e38:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2e3c:	21 e0       	ldi	r18, 0x01	; 1
    2e3e:	2c 0f       	add	r18, r28
    2e40:	40 2f       	mov	r20, r16
    2e42:	61 2f       	mov	r22, r17
    2e44:	6d 0f       	add	r22, r29
    2e46:	c6 01       	movw	r24, r12
    2e48:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2e4c:	e2 fe       	sbrs	r14, 2
    2e4e:	10 c0       	rjmp	.+32     	; 0x2e70 <u8g2_draw_disc_section+0xac>
    2e50:	21 e0       	ldi	r18, 0x01	; 1
    2e52:	21 0f       	add	r18, r17
    2e54:	6d 2f       	mov	r22, r29
    2e56:	6c 1b       	sub	r22, r28
    2e58:	40 2f       	mov	r20, r16
    2e5a:	c6 01       	movw	r24, r12
    2e5c:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2e60:	21 e0       	ldi	r18, 0x01	; 1
    2e62:	2c 0f       	add	r18, r28
    2e64:	6d 2f       	mov	r22, r29
    2e66:	61 1b       	sub	r22, r17
    2e68:	40 2f       	mov	r20, r16
    2e6a:	c6 01       	movw	r24, r12
    2e6c:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <u8g2_DrawVLine>
    2e70:	df 91       	pop	r29
    2e72:	cf 91       	pop	r28
    2e74:	1f 91       	pop	r17
    2e76:	0f 91       	pop	r16
    2e78:	ef 90       	pop	r14
    2e7a:	df 90       	pop	r13
    2e7c:	cf 90       	pop	r12
    2e7e:	08 95       	ret

00002e80 <u8g2_DrawCircle>:
    2e80:	8f 92       	push	r8
    2e82:	9f 92       	push	r9
    2e84:	af 92       	push	r10
    2e86:	bf 92       	push	r11
    2e88:	cf 92       	push	r12
    2e8a:	df 92       	push	r13
    2e8c:	ef 92       	push	r14
    2e8e:	ff 92       	push	r15
    2e90:	0f 93       	push	r16
    2e92:	1f 93       	push	r17
    2e94:	cf 93       	push	r28
    2e96:	df 93       	push	r29
    2e98:	5c 01       	movw	r10, r24
    2e9a:	c6 2e       	mov	r12, r22
    2e9c:	94 2e       	mov	r9, r20
    2e9e:	c2 2f       	mov	r28, r18
    2ea0:	80 2e       	mov	r8, r16
    2ea2:	01 e0       	ldi	r16, 0x01	; 1
    2ea4:	02 0f       	add	r16, r18
    2ea6:	04 0f       	add	r16, r20
    2ea8:	21 e0       	ldi	r18, 0x01	; 1
    2eaa:	26 0f       	add	r18, r22
    2eac:	2c 0f       	add	r18, r28
    2eae:	4c 1b       	sub	r20, r28
    2eb0:	6c 1b       	sub	r22, r28
    2eb2:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    2eb6:	88 23       	and	r24, r24
    2eb8:	41 f1       	breq	.+80     	; 0x2f0a <u8g2_DrawCircle+0x8a>
    2eba:	d1 e0       	ldi	r29, 0x01	; 1
    2ebc:	dc 1b       	sub	r29, r28
    2ebe:	dc 2e       	mov	r13, r28
    2ec0:	d1 94       	neg	r13
    2ec2:	dd 0c       	add	r13, r13
    2ec4:	e8 2c       	mov	r14, r8
    2ec6:	09 2d       	mov	r16, r9
    2ec8:	2c 2d       	mov	r18, r12
    2eca:	4c 2f       	mov	r20, r28
    2ecc:	60 e0       	ldi	r22, 0x00	; 0
    2ece:	c5 01       	movw	r24, r10
    2ed0:	0e 94 90 16 	call	0x2d20	; 0x2d20 <u8g2_draw_circle_section>
    2ed4:	cc 23       	and	r28, r28
    2ed6:	c9 f0       	breq	.+50     	; 0x2f0a <u8g2_DrawCircle+0x8a>
    2ed8:	0f 2e       	mov	r0, r31
    2eda:	f3 e0       	ldi	r31, 0x03	; 3
    2edc:	ff 2e       	mov	r15, r31
    2ede:	f0 2d       	mov	r31, r0
    2ee0:	10 e0       	ldi	r17, 0x00	; 0
    2ee2:	dd 23       	and	r29, r29
    2ee4:	24 f0       	brlt	.+8      	; 0x2eee <u8g2_DrawCircle+0x6e>
    2ee6:	c1 50       	subi	r28, 0x01	; 1
    2ee8:	d3 94       	inc	r13
    2eea:	d3 94       	inc	r13
    2eec:	dd 0d       	add	r29, r13
    2eee:	1f 5f       	subi	r17, 0xFF	; 255
    2ef0:	df 0d       	add	r29, r15
    2ef2:	e8 2c       	mov	r14, r8
    2ef4:	09 2d       	mov	r16, r9
    2ef6:	2c 2d       	mov	r18, r12
    2ef8:	4c 2f       	mov	r20, r28
    2efa:	61 2f       	mov	r22, r17
    2efc:	c5 01       	movw	r24, r10
    2efe:	0e 94 90 16 	call	0x2d20	; 0x2d20 <u8g2_draw_circle_section>
    2f02:	f3 94       	inc	r15
    2f04:	f3 94       	inc	r15
    2f06:	1c 17       	cp	r17, r28
    2f08:	60 f3       	brcs	.-40     	; 0x2ee2 <u8g2_DrawCircle+0x62>
    2f0a:	df 91       	pop	r29
    2f0c:	cf 91       	pop	r28
    2f0e:	1f 91       	pop	r17
    2f10:	0f 91       	pop	r16
    2f12:	ff 90       	pop	r15
    2f14:	ef 90       	pop	r14
    2f16:	df 90       	pop	r13
    2f18:	cf 90       	pop	r12
    2f1a:	bf 90       	pop	r11
    2f1c:	af 90       	pop	r10
    2f1e:	9f 90       	pop	r9
    2f20:	8f 90       	pop	r8
    2f22:	08 95       	ret

00002f24 <u8g2_DrawDisc>:
    2f24:	8f 92       	push	r8
    2f26:	9f 92       	push	r9
    2f28:	af 92       	push	r10
    2f2a:	bf 92       	push	r11
    2f2c:	cf 92       	push	r12
    2f2e:	df 92       	push	r13
    2f30:	ef 92       	push	r14
    2f32:	ff 92       	push	r15
    2f34:	0f 93       	push	r16
    2f36:	1f 93       	push	r17
    2f38:	cf 93       	push	r28
    2f3a:	df 93       	push	r29
    2f3c:	5c 01       	movw	r10, r24
    2f3e:	c6 2e       	mov	r12, r22
    2f40:	94 2e       	mov	r9, r20
    2f42:	c2 2f       	mov	r28, r18
    2f44:	80 2e       	mov	r8, r16
    2f46:	01 e0       	ldi	r16, 0x01	; 1
    2f48:	02 0f       	add	r16, r18
    2f4a:	04 0f       	add	r16, r20
    2f4c:	21 e0       	ldi	r18, 0x01	; 1
    2f4e:	26 0f       	add	r18, r22
    2f50:	2c 0f       	add	r18, r28
    2f52:	4c 1b       	sub	r20, r28
    2f54:	6c 1b       	sub	r22, r28
    2f56:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    2f5a:	88 23       	and	r24, r24
    2f5c:	41 f1       	breq	.+80     	; 0x2fae <u8g2_DrawDisc+0x8a>
    2f5e:	d1 e0       	ldi	r29, 0x01	; 1
    2f60:	dc 1b       	sub	r29, r28
    2f62:	dc 2e       	mov	r13, r28
    2f64:	d1 94       	neg	r13
    2f66:	dd 0c       	add	r13, r13
    2f68:	e8 2c       	mov	r14, r8
    2f6a:	09 2d       	mov	r16, r9
    2f6c:	2c 2d       	mov	r18, r12
    2f6e:	4c 2f       	mov	r20, r28
    2f70:	60 e0       	ldi	r22, 0x00	; 0
    2f72:	c5 01       	movw	r24, r10
    2f74:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <u8g2_draw_disc_section>
    2f78:	cc 23       	and	r28, r28
    2f7a:	c9 f0       	breq	.+50     	; 0x2fae <u8g2_DrawDisc+0x8a>
    2f7c:	0f 2e       	mov	r0, r31
    2f7e:	f3 e0       	ldi	r31, 0x03	; 3
    2f80:	ff 2e       	mov	r15, r31
    2f82:	f0 2d       	mov	r31, r0
    2f84:	10 e0       	ldi	r17, 0x00	; 0
    2f86:	dd 23       	and	r29, r29
    2f88:	24 f0       	brlt	.+8      	; 0x2f92 <u8g2_DrawDisc+0x6e>
    2f8a:	c1 50       	subi	r28, 0x01	; 1
    2f8c:	d3 94       	inc	r13
    2f8e:	d3 94       	inc	r13
    2f90:	dd 0d       	add	r29, r13
    2f92:	1f 5f       	subi	r17, 0xFF	; 255
    2f94:	df 0d       	add	r29, r15
    2f96:	e8 2c       	mov	r14, r8
    2f98:	09 2d       	mov	r16, r9
    2f9a:	2c 2d       	mov	r18, r12
    2f9c:	4c 2f       	mov	r20, r28
    2f9e:	61 2f       	mov	r22, r17
    2fa0:	c5 01       	movw	r24, r10
    2fa2:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <u8g2_draw_disc_section>
    2fa6:	f3 94       	inc	r15
    2fa8:	f3 94       	inc	r15
    2faa:	1c 17       	cp	r17, r28
    2fac:	60 f3       	brcs	.-40     	; 0x2f86 <u8g2_DrawDisc+0x62>
    2fae:	df 91       	pop	r29
    2fb0:	cf 91       	pop	r28
    2fb2:	1f 91       	pop	r17
    2fb4:	0f 91       	pop	r16
    2fb6:	ff 90       	pop	r15
    2fb8:	ef 90       	pop	r14
    2fba:	df 90       	pop	r13
    2fbc:	cf 90       	pop	r12
    2fbe:	bf 90       	pop	r11
    2fc0:	af 90       	pop	r10
    2fc2:	9f 90       	pop	r9
    2fc4:	8f 90       	pop	r8
    2fc6:	08 95       	ret

00002fc8 <u8g2_m_16_8_2>:
    2fc8:	22 e0       	ldi	r18, 0x02	; 2
    2fca:	fc 01       	movw	r30, r24
    2fcc:	20 83       	st	Z, r18
    2fce:	81 eb       	ldi	r24, 0xB1	; 177
    2fd0:	93 e0       	ldi	r25, 0x03	; 3
    2fd2:	08 95       	ret

00002fd4 <u8g2_Setup_ssd1306_i2c_128x64_noname_2>:
    2fd4:	cf 92       	push	r12
    2fd6:	df 92       	push	r13
    2fd8:	ef 92       	push	r14
    2fda:	ff 92       	push	r15
    2fdc:	0f 93       	push	r16
    2fde:	1f 93       	push	r17
    2fe0:	cf 93       	push	r28
    2fe2:	df 93       	push	r29
    2fe4:	1f 92       	push	r1
    2fe6:	cd b7       	in	r28, 0x3d	; 61
    2fe8:	de b7       	in	r29, 0x3e	; 62
    2fea:	7c 01       	movw	r14, r24
    2fec:	6b 01       	movw	r12, r22
    2fee:	89 01       	movw	r16, r18
    2ff0:	9a 01       	movw	r18, r20
    2ff2:	4a ea       	ldi	r20, 0xAA	; 170
    2ff4:	5f e1       	ldi	r21, 0x1F	; 31
    2ff6:	6d e3       	ldi	r22, 0x3D	; 61
    2ff8:	71 e2       	ldi	r23, 0x21	; 33
    2ffa:	0e 94 82 21 	call	0x4304	; 0x4304 <u8x8_Setup>
    2ffe:	ce 01       	movw	r24, r28
    3000:	01 96       	adiw	r24, 0x01	; 1
    3002:	0e 94 e4 17 	call	0x2fc8	; 0x2fc8 <u8g2_m_16_8_2>
    3006:	86 01       	movw	r16, r12
    3008:	27 e2       	ldi	r18, 0x27	; 39
    300a:	3d e1       	ldi	r19, 0x1D	; 29
    300c:	49 81       	ldd	r20, Y+1	; 0x01
    300e:	bc 01       	movw	r22, r24
    3010:	c7 01       	movw	r24, r14
    3012:	0e 94 1e 1e 	call	0x3c3c	; 0x3c3c <u8g2_SetupBuffer>
    3016:	0f 90       	pop	r0
    3018:	df 91       	pop	r29
    301a:	cf 91       	pop	r28
    301c:	1f 91       	pop	r17
    301e:	0f 91       	pop	r16
    3020:	ff 90       	pop	r15
    3022:	ef 90       	pop	r14
    3024:	df 90       	pop	r13
    3026:	cf 90       	pop	r12
    3028:	08 95       	ret

0000302a <u8g2_font_get_word>:
    302a:	fc 01       	movw	r30, r24
    302c:	e6 0f       	add	r30, r22
    302e:	f1 1d       	adc	r31, r1
    3030:	84 91       	lpm	r24, Z
    3032:	90 e0       	ldi	r25, 0x00	; 0
    3034:	98 2f       	mov	r25, r24
    3036:	88 27       	eor	r24, r24
    3038:	31 96       	adiw	r30, 0x01	; 1
    303a:	e4 91       	lpm	r30, Z
    303c:	8e 0f       	add	r24, r30
    303e:	91 1d       	adc	r25, r1
    3040:	08 95       	ret

00003042 <u8g2_font_calc_vref_font>:
    3042:	80 e0       	ldi	r24, 0x00	; 0
    3044:	08 95       	ret

00003046 <u8g2_read_font_info>:
    3046:	0f 93       	push	r16
    3048:	1f 93       	push	r17
    304a:	cf 93       	push	r28
    304c:	df 93       	push	r29
    304e:	ec 01       	movw	r28, r24
    3050:	8b 01       	movw	r16, r22
    3052:	fb 01       	movw	r30, r22
    3054:	84 91       	lpm	r24, Z
    3056:	88 83       	st	Y, r24
    3058:	31 96       	adiw	r30, 0x01	; 1
    305a:	e4 91       	lpm	r30, Z
    305c:	e9 83       	std	Y+1, r30	; 0x01
    305e:	fb 01       	movw	r30, r22
    3060:	32 96       	adiw	r30, 0x02	; 2
    3062:	e4 91       	lpm	r30, Z
    3064:	ea 83       	std	Y+2, r30	; 0x02
    3066:	fb 01       	movw	r30, r22
    3068:	33 96       	adiw	r30, 0x03	; 3
    306a:	e4 91       	lpm	r30, Z
    306c:	eb 83       	std	Y+3, r30	; 0x03
    306e:	fb 01       	movw	r30, r22
    3070:	34 96       	adiw	r30, 0x04	; 4
    3072:	e4 91       	lpm	r30, Z
    3074:	ec 83       	std	Y+4, r30	; 0x04
    3076:	fb 01       	movw	r30, r22
    3078:	35 96       	adiw	r30, 0x05	; 5
    307a:	e4 91       	lpm	r30, Z
    307c:	ed 83       	std	Y+5, r30	; 0x05
    307e:	fb 01       	movw	r30, r22
    3080:	36 96       	adiw	r30, 0x06	; 6
    3082:	e4 91       	lpm	r30, Z
    3084:	ee 83       	std	Y+6, r30	; 0x06
    3086:	fb 01       	movw	r30, r22
    3088:	37 96       	adiw	r30, 0x07	; 7
    308a:	e4 91       	lpm	r30, Z
    308c:	ef 83       	std	Y+7, r30	; 0x07
    308e:	fb 01       	movw	r30, r22
    3090:	38 96       	adiw	r30, 0x08	; 8
    3092:	e4 91       	lpm	r30, Z
    3094:	e8 87       	std	Y+8, r30	; 0x08
    3096:	fb 01       	movw	r30, r22
    3098:	39 96       	adiw	r30, 0x09	; 9
    309a:	e4 91       	lpm	r30, Z
    309c:	e9 87       	std	Y+9, r30	; 0x09
    309e:	fb 01       	movw	r30, r22
    30a0:	3a 96       	adiw	r30, 0x0a	; 10
    30a2:	e4 91       	lpm	r30, Z
    30a4:	ea 87       	std	Y+10, r30	; 0x0a
    30a6:	fb 01       	movw	r30, r22
    30a8:	3b 96       	adiw	r30, 0x0b	; 11
    30aa:	e4 91       	lpm	r30, Z
    30ac:	eb 87       	std	Y+11, r30	; 0x0b
    30ae:	fb 01       	movw	r30, r22
    30b0:	3c 96       	adiw	r30, 0x0c	; 12
    30b2:	e4 91       	lpm	r30, Z
    30b4:	ec 87       	std	Y+12, r30	; 0x0c
    30b6:	fb 01       	movw	r30, r22
    30b8:	3d 96       	adiw	r30, 0x0d	; 13
    30ba:	e4 91       	lpm	r30, Z
    30bc:	ed 87       	std	Y+13, r30	; 0x0d
    30be:	fb 01       	movw	r30, r22
    30c0:	3e 96       	adiw	r30, 0x0e	; 14
    30c2:	e4 91       	lpm	r30, Z
    30c4:	ee 87       	std	Y+14, r30	; 0x0e
    30c6:	fb 01       	movw	r30, r22
    30c8:	3f 96       	adiw	r30, 0x0f	; 15
    30ca:	e4 91       	lpm	r30, Z
    30cc:	ef 87       	std	Y+15, r30	; 0x0f
    30ce:	fb 01       	movw	r30, r22
    30d0:	70 96       	adiw	r30, 0x10	; 16
    30d2:	e4 91       	lpm	r30, Z
    30d4:	e8 8b       	std	Y+16, r30	; 0x10
    30d6:	61 e1       	ldi	r22, 0x11	; 17
    30d8:	c8 01       	movw	r24, r16
    30da:	0e 94 15 18 	call	0x302a	; 0x302a <u8g2_font_get_word>
    30de:	9a 8b       	std	Y+18, r25	; 0x12
    30e0:	89 8b       	std	Y+17, r24	; 0x11
    30e2:	63 e1       	ldi	r22, 0x13	; 19
    30e4:	c8 01       	movw	r24, r16
    30e6:	0e 94 15 18 	call	0x302a	; 0x302a <u8g2_font_get_word>
    30ea:	9c 8b       	std	Y+20, r25	; 0x14
    30ec:	8b 8b       	std	Y+19, r24	; 0x13
    30ee:	65 e1       	ldi	r22, 0x15	; 21
    30f0:	c8 01       	movw	r24, r16
    30f2:	0e 94 15 18 	call	0x302a	; 0x302a <u8g2_font_get_word>
    30f6:	9e 8b       	std	Y+22, r25	; 0x16
    30f8:	8d 8b       	std	Y+21, r24	; 0x15
    30fa:	df 91       	pop	r29
    30fc:	cf 91       	pop	r28
    30fe:	1f 91       	pop	r17
    3100:	0f 91       	pop	r16
    3102:	08 95       	ret

00003104 <u8g2_font_decode_get_unsigned_bits>:
    3104:	dc 01       	movw	r26, r24
    3106:	18 96       	adiw	r26, 0x08	; 8
    3108:	9c 91       	ld	r25, X
    310a:	18 97       	sbiw	r26, 0x08	; 8
    310c:	ed 91       	ld	r30, X+
    310e:	fc 91       	ld	r31, X
    3110:	11 97       	sbiw	r26, 0x01	; 1
    3112:	24 91       	lpm	r18, Z
    3114:	30 e0       	ldi	r19, 0x00	; 0
    3116:	09 2e       	mov	r0, r25
    3118:	02 c0       	rjmp	.+4      	; 0x311e <u8g2_font_decode_get_unsigned_bits+0x1a>
    311a:	35 95       	asr	r19
    311c:	27 95       	ror	r18
    311e:	0a 94       	dec	r0
    3120:	e2 f7       	brpl	.-8      	; 0x311a <u8g2_font_decode_get_unsigned_bits+0x16>
    3122:	89 2f       	mov	r24, r25
    3124:	86 0f       	add	r24, r22
    3126:	88 30       	cpi	r24, 0x08	; 8
    3128:	10 f4       	brcc	.+4      	; 0x312e <u8g2_font_decode_get_unsigned_bits+0x2a>
    312a:	e2 2f       	mov	r30, r18
    312c:	0f c0       	rjmp	.+30     	; 0x314c <u8g2_font_decode_get_unsigned_bits+0x48>
    312e:	31 96       	adiw	r30, 0x01	; 1
    3130:	11 96       	adiw	r26, 0x01	; 1
    3132:	fc 93       	st	X, r31
    3134:	ee 93       	st	-X, r30
    3136:	e4 91       	lpm	r30, Z
    3138:	f0 e0       	ldi	r31, 0x00	; 0
    313a:	38 e0       	ldi	r19, 0x08	; 8
    313c:	39 1b       	sub	r19, r25
    313e:	02 c0       	rjmp	.+4      	; 0x3144 <u8g2_font_decode_get_unsigned_bits+0x40>
    3140:	ee 0f       	add	r30, r30
    3142:	ff 1f       	adc	r31, r31
    3144:	3a 95       	dec	r19
    3146:	e2 f7       	brpl	.-8      	; 0x3140 <u8g2_font_decode_get_unsigned_bits+0x3c>
    3148:	e2 2b       	or	r30, r18
    314a:	88 50       	subi	r24, 0x08	; 8
    314c:	18 96       	adiw	r26, 0x08	; 8
    314e:	8c 93       	st	X, r24
    3150:	81 e0       	ldi	r24, 0x01	; 1
    3152:	90 e0       	ldi	r25, 0x00	; 0
    3154:	02 c0       	rjmp	.+4      	; 0x315a <u8g2_font_decode_get_unsigned_bits+0x56>
    3156:	88 0f       	add	r24, r24
    3158:	99 1f       	adc	r25, r25
    315a:	6a 95       	dec	r22
    315c:	e2 f7       	brpl	.-8      	; 0x3156 <u8g2_font_decode_get_unsigned_bits+0x52>
    315e:	81 50       	subi	r24, 0x01	; 1
    3160:	8e 23       	and	r24, r30
    3162:	08 95       	ret

00003164 <u8g2_font_setup_decode>:
    3164:	0f 93       	push	r16
    3166:	1f 93       	push	r17
    3168:	cf 93       	push	r28
    316a:	df 93       	push	r29
    316c:	ec 01       	movw	r28, r24
    316e:	8c 01       	movw	r16, r24
    3170:	07 5c       	subi	r16, 0xC7	; 199
    3172:	1f 4f       	sbci	r17, 0xFF	; 255
    3174:	7a af       	std	Y+58, r23	; 0x3a
    3176:	69 af       	std	Y+57, r22	; 0x39
    3178:	fc 01       	movw	r30, r24
    317a:	ef 5b       	subi	r30, 0xBF	; 191
    317c:	ff 4f       	sbci	r31, 0xFF	; 255
    317e:	10 82       	st	Z, r1
    3180:	39 96       	adiw	r30, 0x09	; 9
    3182:	60 81       	ld	r22, Z
    3184:	c8 01       	movw	r24, r16
    3186:	0e 94 82 18 	call	0x3104	; 0x3104 <u8g2_font_decode_get_unsigned_bits>
    318a:	8f af       	std	Y+63, r24	; 0x3f
    318c:	fe 01       	movw	r30, r28
    318e:	e5 5b       	subi	r30, 0xB5	; 181
    3190:	ff 4f       	sbci	r31, 0xFF	; 255
    3192:	60 81       	ld	r22, Z
    3194:	c8 01       	movw	r24, r16
    3196:	0e 94 82 18 	call	0x3104	; 0x3104 <u8g2_font_decode_get_unsigned_bits>
    319a:	fe 01       	movw	r30, r28
    319c:	e0 5c       	subi	r30, 0xC0	; 192
    319e:	ff 4f       	sbci	r31, 0xFF	; 255
    31a0:	80 83       	st	Z, r24
    31a2:	b3 96       	adiw	r30, 0x23	; 35
    31a4:	80 81       	ld	r24, Z
    31a6:	b0 97       	sbiw	r30, 0x20	; 32
    31a8:	80 83       	st	Z, r24
    31aa:	cc 5b       	subi	r28, 0xBC	; 188
    31ac:	df 4f       	sbci	r29, 0xFF	; 255
    31ae:	91 e0       	ldi	r25, 0x01	; 1
    31b0:	81 11       	cpse	r24, r1
    31b2:	90 e0       	ldi	r25, 0x00	; 0
    31b4:	98 83       	st	Y, r25
    31b6:	df 91       	pop	r29
    31b8:	cf 91       	pop	r28
    31ba:	1f 91       	pop	r17
    31bc:	0f 91       	pop	r16
    31be:	08 95       	ret

000031c0 <u8g2_font_decode_get_signed_bits>:
    31c0:	cf 93       	push	r28
    31c2:	c6 2f       	mov	r28, r22
    31c4:	0e 94 82 18 	call	0x3104	; 0x3104 <u8g2_font_decode_get_unsigned_bits>
    31c8:	c1 50       	subi	r28, 0x01	; 1
    31ca:	21 e0       	ldi	r18, 0x01	; 1
    31cc:	30 e0       	ldi	r19, 0x00	; 0
    31ce:	02 c0       	rjmp	.+4      	; 0x31d4 <u8g2_font_decode_get_signed_bits+0x14>
    31d0:	22 0f       	add	r18, r18
    31d2:	33 1f       	adc	r19, r19
    31d4:	ca 95       	dec	r28
    31d6:	e2 f7       	brpl	.-8      	; 0x31d0 <u8g2_font_decode_get_signed_bits+0x10>
    31d8:	82 1b       	sub	r24, r18
    31da:	cf 91       	pop	r28
    31dc:	08 95       	ret

000031de <u8g2_add_vector_y>:
    31de:	21 30       	cpi	r18, 0x01	; 1
    31e0:	31 f0       	breq	.+12     	; 0x31ee <u8g2_add_vector_y+0x10>
    31e2:	18 f0       	brcs	.+6      	; 0x31ea <u8g2_add_vector_y+0xc>
    31e4:	22 30       	cpi	r18, 0x02	; 2
    31e6:	29 f0       	breq	.+10     	; 0x31f2 <u8g2_add_vector_y+0x14>
    31e8:	06 c0       	rjmp	.+12     	; 0x31f6 <u8g2_add_vector_y+0x18>
    31ea:	84 0f       	add	r24, r20
    31ec:	08 95       	ret
    31ee:	86 0f       	add	r24, r22
    31f0:	08 95       	ret
    31f2:	84 1b       	sub	r24, r20
    31f4:	08 95       	ret
    31f6:	86 1b       	sub	r24, r22
    31f8:	08 95       	ret

000031fa <u8g2_add_vector_x>:
    31fa:	21 30       	cpi	r18, 0x01	; 1
    31fc:	31 f0       	breq	.+12     	; 0x320a <u8g2_add_vector_x+0x10>
    31fe:	18 f0       	brcs	.+6      	; 0x3206 <u8g2_add_vector_x+0xc>
    3200:	22 30       	cpi	r18, 0x02	; 2
    3202:	29 f0       	breq	.+10     	; 0x320e <u8g2_add_vector_x+0x14>
    3204:	06 c0       	rjmp	.+12     	; 0x3212 <u8g2_add_vector_x+0x18>
    3206:	86 0f       	add	r24, r22
    3208:	08 95       	ret
    320a:	84 1b       	sub	r24, r20
    320c:	08 95       	ret
    320e:	86 1b       	sub	r24, r22
    3210:	08 95       	ret
    3212:	84 0f       	add	r24, r20
    3214:	08 95       	ret

00003216 <u8g2_font_decode_len>:
    3216:	2f 92       	push	r2
    3218:	3f 92       	push	r3
    321a:	4f 92       	push	r4
    321c:	5f 92       	push	r5
    321e:	6f 92       	push	r6
    3220:	7f 92       	push	r7
    3222:	8f 92       	push	r8
    3224:	9f 92       	push	r9
    3226:	af 92       	push	r10
    3228:	bf 92       	push	r11
    322a:	cf 92       	push	r12
    322c:	df 92       	push	r13
    322e:	ef 92       	push	r14
    3230:	ff 92       	push	r15
    3232:	0f 93       	push	r16
    3234:	1f 93       	push	r17
    3236:	cf 93       	push	r28
    3238:	df 93       	push	r29
    323a:	00 d0       	rcall	.+0      	; 0x323c <u8g2_font_decode_len+0x26>
    323c:	00 d0       	rcall	.+0      	; 0x323e <u8g2_font_decode_len+0x28>
    323e:	00 d0       	rcall	.+0      	; 0x3240 <u8g2_font_decode_len+0x2a>
    3240:	cd b7       	in	r28, 0x3d	; 61
    3242:	de b7       	in	r29, 0x3e	; 62
    3244:	7c 01       	movw	r14, r24
    3246:	6e 83       	std	Y+6, r22	; 0x06
    3248:	34 2e       	mov	r3, r20
    324a:	fc 01       	movw	r30, r24
    324c:	75 ac       	ldd	r7, Z+61	; 0x3d
    324e:	16 ad       	ldd	r17, Z+62	; 0x3e
    3250:	6c 01       	movw	r12, r24
    3252:	f5 e4       	ldi	r31, 0x45	; 69
    3254:	cf 0e       	add	r12, r31
    3256:	d1 1c       	adc	r13, r1
    3258:	5c 01       	movw	r10, r24
    325a:	82 e4       	ldi	r24, 0x42	; 66
    325c:	a8 0e       	add	r10, r24
    325e:	b1 1c       	adc	r11, r1
    3260:	47 01       	movw	r8, r14
    3262:	93 e6       	ldi	r25, 0x63	; 99
    3264:	89 0e       	add	r8, r25
    3266:	91 1c       	adc	r9, r1
    3268:	f7 01       	movw	r30, r14
    326a:	ec 5b       	subi	r30, 0xBC	; 188
    326c:	ff 4f       	sbci	r31, 0xFF	; 255
    326e:	fc 83       	std	Y+4, r31	; 0x04
    3270:	eb 83       	std	Y+3, r30	; 0x03
    3272:	c7 01       	movw	r24, r14
    3274:	8d 5b       	subi	r24, 0xBD	; 189
    3276:	9f 4f       	sbci	r25, 0xFF	; 255
    3278:	9a 83       	std	Y+2, r25	; 0x02
    327a:	89 83       	std	Y+1, r24	; 0x01
    327c:	f7 01       	movw	r30, r14
    327e:	f7 ad       	ldd	r31, Z+63	; 0x3f
    3280:	f7 19       	sub	r31, r7
    3282:	fd 83       	std	Y+5, r31	; 0x05
    3284:	5e 80       	ldd	r5, Y+6	; 0x06
    3286:	f5 15       	cp	r31, r5
    3288:	08 f4       	brcc	.+2      	; 0x328c <u8g2_font_decode_len+0x76>
    328a:	5f 2e       	mov	r5, r31
    328c:	f7 01       	movw	r30, r14
    328e:	64 ac       	ldd	r6, Z+60	; 0x3c
    3290:	f6 01       	movw	r30, r12
    3292:	00 81       	ld	r16, Z
    3294:	21 2e       	mov	r2, r17
    3296:	20 2f       	mov	r18, r16
    3298:	41 2f       	mov	r20, r17
    329a:	67 2d       	mov	r22, r7
    329c:	f7 01       	movw	r30, r14
    329e:	83 ad       	ldd	r24, Z+59	; 0x3b
    32a0:	0e 94 fd 18 	call	0x31fa	; 0x31fa <u8g2_add_vector_x>
    32a4:	48 2e       	mov	r4, r24
    32a6:	20 2f       	mov	r18, r16
    32a8:	41 2f       	mov	r20, r17
    32aa:	67 2d       	mov	r22, r7
    32ac:	86 2d       	mov	r24, r6
    32ae:	0e 94 ef 18 	call	0x31de	; 0x31de <u8g2_add_vector_y>
    32b2:	33 20       	and	r3, r3
    32b4:	61 f0       	breq	.+24     	; 0x32ce <u8g2_font_decode_len+0xb8>
    32b6:	e9 81       	ldd	r30, Y+1	; 0x01
    32b8:	fa 81       	ldd	r31, Y+2	; 0x02
    32ba:	90 81       	ld	r25, Z
    32bc:	f4 01       	movw	r30, r8
    32be:	90 83       	st	Z, r25
    32c0:	25 2d       	mov	r18, r5
    32c2:	48 2f       	mov	r20, r24
    32c4:	64 2d       	mov	r22, r4
    32c6:	c7 01       	movw	r24, r14
    32c8:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    32cc:	0f c0       	rjmp	.+30     	; 0x32ec <u8g2_font_decode_len+0xd6>
    32ce:	f5 01       	movw	r30, r10
    32d0:	90 81       	ld	r25, Z
    32d2:	91 11       	cpse	r25, r1
    32d4:	0b c0       	rjmp	.+22     	; 0x32ec <u8g2_font_decode_len+0xd6>
    32d6:	eb 81       	ldd	r30, Y+3	; 0x03
    32d8:	fc 81       	ldd	r31, Y+4	; 0x04
    32da:	90 81       	ld	r25, Z
    32dc:	f4 01       	movw	r30, r8
    32de:	90 83       	st	Z, r25
    32e0:	25 2d       	mov	r18, r5
    32e2:	48 2f       	mov	r20, r24
    32e4:	64 2d       	mov	r22, r4
    32e6:	c7 01       	movw	r24, r14
    32e8:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    32ec:	fe 81       	ldd	r31, Y+6	; 0x06
    32ee:	8d 81       	ldd	r24, Y+5	; 0x05
    32f0:	f8 17       	cp	r31, r24
    32f2:	28 f0       	brcs	.+10     	; 0x32fe <u8g2_font_decode_len+0xe8>
    32f4:	f8 1b       	sub	r31, r24
    32f6:	fe 83       	std	Y+6, r31	; 0x06
    32f8:	1f 5f       	subi	r17, 0xFF	; 255
    32fa:	71 2c       	mov	r7, r1
    32fc:	bf cf       	rjmp	.-130    	; 0x327c <u8g2_font_decode_len+0x66>
    32fe:	8e 81       	ldd	r24, Y+6	; 0x06
    3300:	87 0d       	add	r24, r7
    3302:	f7 01       	movw	r30, r14
    3304:	85 af       	std	Z+61, r24	; 0x3d
    3306:	26 ae       	std	Z+62, r2	; 0x3e
    3308:	26 96       	adiw	r28, 0x06	; 6
    330a:	0f b6       	in	r0, 0x3f	; 63
    330c:	f8 94       	cli
    330e:	de bf       	out	0x3e, r29	; 62
    3310:	0f be       	out	0x3f, r0	; 63
    3312:	cd bf       	out	0x3d, r28	; 61
    3314:	df 91       	pop	r29
    3316:	cf 91       	pop	r28
    3318:	1f 91       	pop	r17
    331a:	0f 91       	pop	r16
    331c:	ff 90       	pop	r15
    331e:	ef 90       	pop	r14
    3320:	df 90       	pop	r13
    3322:	cf 90       	pop	r12
    3324:	bf 90       	pop	r11
    3326:	af 90       	pop	r10
    3328:	9f 90       	pop	r9
    332a:	8f 90       	pop	r8
    332c:	7f 90       	pop	r7
    332e:	6f 90       	pop	r6
    3330:	5f 90       	pop	r5
    3332:	4f 90       	pop	r4
    3334:	3f 90       	pop	r3
    3336:	2f 90       	pop	r2
    3338:	08 95       	ret

0000333a <u8g2_font_decode_glyph>:
    333a:	8f 92       	push	r8
    333c:	9f 92       	push	r9
    333e:	af 92       	push	r10
    3340:	bf 92       	push	r11
    3342:	cf 92       	push	r12
    3344:	df 92       	push	r13
    3346:	ef 92       	push	r14
    3348:	ff 92       	push	r15
    334a:	0f 93       	push	r16
    334c:	1f 93       	push	r17
    334e:	cf 93       	push	r28
    3350:	df 93       	push	r29
    3352:	ec 01       	movw	r28, r24
    3354:	7c 01       	movw	r14, r24
    3356:	89 e3       	ldi	r24, 0x39	; 57
    3358:	e8 0e       	add	r14, r24
    335a:	f1 1c       	adc	r15, r1
    335c:	ce 01       	movw	r24, r28
    335e:	0e 94 b2 18 	call	0x3164	; 0x3164 <u8g2_font_setup_decode>
    3362:	fe 01       	movw	r30, r28
    3364:	e0 5c       	subi	r30, 0xC0	; 192
    3366:	ff 4f       	sbci	r31, 0xFF	; 255
    3368:	90 80       	ld	r9, Z
    336a:	3c 96       	adiw	r30, 0x0c	; 12
    336c:	60 81       	ld	r22, Z
    336e:	c7 01       	movw	r24, r14
    3370:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <u8g2_font_decode_get_signed_bits>
    3374:	b8 2e       	mov	r11, r24
    3376:	fe 01       	movw	r30, r28
    3378:	e3 5b       	subi	r30, 0xB3	; 179
    337a:	ff 4f       	sbci	r31, 0xFF	; 255
    337c:	60 81       	ld	r22, Z
    337e:	c7 01       	movw	r24, r14
    3380:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <u8g2_font_decode_get_signed_bits>
    3384:	18 2f       	mov	r17, r24
    3386:	fe 01       	movw	r30, r28
    3388:	e2 5b       	subi	r30, 0xB2	; 178
    338a:	ff 4f       	sbci	r31, 0xFF	; 255
    338c:	60 81       	ld	r22, Z
    338e:	c7 01       	movw	r24, r14
    3390:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <u8g2_font_decode_get_signed_bits>
    3394:	88 2e       	mov	r8, r24
    3396:	df ac       	ldd	r13, Y+63	; 0x3f
    3398:	1d 14       	cp	r1, r13
    339a:	0c f0       	brlt	.+2      	; 0x339e <u8g2_font_decode_glyph+0x64>
    339c:	79 c0       	rjmp	.+242    	; 0x3490 <u8g2_font_decode_glyph+0x156>
    339e:	fe 01       	movw	r30, r28
    33a0:	eb 5b       	subi	r30, 0xBB	; 187
    33a2:	ff 4f       	sbci	r31, 0xFF	; 255
    33a4:	00 81       	ld	r16, Z
    33a6:	19 0d       	add	r17, r9
    33a8:	11 95       	neg	r17
    33aa:	20 2f       	mov	r18, r16
    33ac:	41 2f       	mov	r20, r17
    33ae:	6b 2d       	mov	r22, r11
    33b0:	8b ad       	ldd	r24, Y+59	; 0x3b
    33b2:	0e 94 fd 18 	call	0x31fa	; 0x31fa <u8g2_add_vector_x>
    33b6:	c8 2e       	mov	r12, r24
    33b8:	8b af       	std	Y+59, r24	; 0x3b
    33ba:	20 2f       	mov	r18, r16
    33bc:	41 2f       	mov	r20, r17
    33be:	6b 2d       	mov	r22, r11
    33c0:	8c ad       	ldd	r24, Y+60	; 0x3c
    33c2:	0e 94 ef 18 	call	0x31de	; 0x31de <u8g2_add_vector_y>
    33c6:	8c af       	std	Y+60, r24	; 0x3c
    33c8:	01 30       	cpi	r16, 0x01	; 1
    33ca:	59 f0       	breq	.+22     	; 0x33e2 <u8g2_font_decode_glyph+0xa8>
    33cc:	28 f0       	brcs	.+10     	; 0x33d8 <u8g2_font_decode_glyph+0x9e>
    33ce:	02 30       	cpi	r16, 0x02	; 2
    33d0:	91 f0       	breq	.+36     	; 0x33f6 <u8g2_font_decode_glyph+0xbc>
    33d2:	03 30       	cpi	r16, 0x03	; 3
    33d4:	d9 f0       	breq	.+54     	; 0x340c <u8g2_font_decode_glyph+0xd2>
    33d6:	23 c0       	rjmp	.+70     	; 0x341e <u8g2_font_decode_glyph+0xe4>
    33d8:	2d 2d       	mov	r18, r13
    33da:	2c 0d       	add	r18, r12
    33dc:	09 2d       	mov	r16, r9
    33de:	08 0f       	add	r16, r24
    33e0:	20 c0       	rjmp	.+64     	; 0x3422 <u8g2_font_decode_glyph+0xe8>
    33e2:	9c 2d       	mov	r25, r12
    33e4:	99 19       	sub	r25, r9
    33e6:	21 e0       	ldi	r18, 0x01	; 1
    33e8:	2c 0d       	add	r18, r12
    33ea:	0d 2d       	mov	r16, r13
    33ec:	08 0f       	add	r16, r24
    33ee:	cc 24       	eor	r12, r12
    33f0:	c3 94       	inc	r12
    33f2:	c9 0e       	add	r12, r25
    33f4:	16 c0       	rjmp	.+44     	; 0x3422 <u8g2_font_decode_glyph+0xe8>
    33f6:	91 e0       	ldi	r25, 0x01	; 1
    33f8:	39 2f       	mov	r19, r25
    33fa:	3d 19       	sub	r19, r13
    33fc:	21 e0       	ldi	r18, 0x01	; 1
    33fe:	2c 0d       	add	r18, r12
    3400:	99 19       	sub	r25, r9
    3402:	01 e0       	ldi	r16, 0x01	; 1
    3404:	08 0f       	add	r16, r24
    3406:	89 0f       	add	r24, r25
    3408:	c3 0e       	add	r12, r19
    340a:	0b c0       	rjmp	.+22     	; 0x3422 <u8g2_font_decode_glyph+0xe8>
    340c:	29 2d       	mov	r18, r9
    340e:	2c 0d       	add	r18, r12
    3410:	98 2f       	mov	r25, r24
    3412:	9d 19       	sub	r25, r13
    3414:	01 e0       	ldi	r16, 0x01	; 1
    3416:	08 0f       	add	r16, r24
    3418:	81 e0       	ldi	r24, 0x01	; 1
    341a:	89 0f       	add	r24, r25
    341c:	02 c0       	rjmp	.+4      	; 0x3422 <u8g2_font_decode_glyph+0xe8>
    341e:	08 2f       	mov	r16, r24
    3420:	2c 2d       	mov	r18, r12
    3422:	48 2f       	mov	r20, r24
    3424:	6c 2d       	mov	r22, r12
    3426:	ce 01       	movw	r24, r28
    3428:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    342c:	88 23       	and	r24, r24
    342e:	81 f1       	breq	.+96     	; 0x3490 <u8g2_font_decode_glyph+0x156>
    3430:	1d ae       	std	Y+61, r1	; 0x3d
    3432:	1e ae       	std	Y+62, r1	; 0x3e
    3434:	5e 01       	movw	r10, r28
    3436:	e8 e4       	ldi	r30, 0x48	; 72
    3438:	ae 0e       	add	r10, r30
    343a:	b1 1c       	adc	r11, r1
    343c:	6e 01       	movw	r12, r28
    343e:	f9 e4       	ldi	r31, 0x49	; 73
    3440:	cf 0e       	add	r12, r31
    3442:	d1 1c       	adc	r13, r1
    3444:	f5 01       	movw	r30, r10
    3446:	60 81       	ld	r22, Z
    3448:	c7 01       	movw	r24, r14
    344a:	0e 94 82 18 	call	0x3104	; 0x3104 <u8g2_font_decode_get_unsigned_bits>
    344e:	08 2f       	mov	r16, r24
    3450:	f6 01       	movw	r30, r12
    3452:	60 81       	ld	r22, Z
    3454:	c7 01       	movw	r24, r14
    3456:	0e 94 82 18 	call	0x3104	; 0x3104 <u8g2_font_decode_get_unsigned_bits>
    345a:	18 2f       	mov	r17, r24
    345c:	40 e0       	ldi	r20, 0x00	; 0
    345e:	60 2f       	mov	r22, r16
    3460:	ce 01       	movw	r24, r28
    3462:	0e 94 0b 19 	call	0x3216	; 0x3216 <u8g2_font_decode_len>
    3466:	41 e0       	ldi	r20, 0x01	; 1
    3468:	61 2f       	mov	r22, r17
    346a:	ce 01       	movw	r24, r28
    346c:	0e 94 0b 19 	call	0x3216	; 0x3216 <u8g2_font_decode_len>
    3470:	61 e0       	ldi	r22, 0x01	; 1
    3472:	c7 01       	movw	r24, r14
    3474:	0e 94 82 18 	call	0x3104	; 0x3104 <u8g2_font_decode_get_unsigned_bits>
    3478:	81 11       	cpse	r24, r1
    347a:	f0 cf       	rjmp	.-32     	; 0x345c <u8g2_font_decode_glyph+0x122>
    347c:	8e ad       	ldd	r24, Y+62	; 0x3e
    347e:	89 15       	cp	r24, r9
    3480:	0c f3       	brlt	.-62     	; 0x3444 <u8g2_font_decode_glyph+0x10a>
    3482:	fe 01       	movw	r30, r28
    3484:	ed 59       	subi	r30, 0x9D	; 157
    3486:	ff 4f       	sbci	r31, 0xFF	; 255
    3488:	cd 5b       	subi	r28, 0xBD	; 189
    348a:	df 4f       	sbci	r29, 0xFF	; 255
    348c:	88 81       	ld	r24, Y
    348e:	80 83       	st	Z, r24
    3490:	88 2d       	mov	r24, r8
    3492:	df 91       	pop	r29
    3494:	cf 91       	pop	r28
    3496:	1f 91       	pop	r17
    3498:	0f 91       	pop	r16
    349a:	ff 90       	pop	r15
    349c:	ef 90       	pop	r14
    349e:	df 90       	pop	r13
    34a0:	cf 90       	pop	r12
    34a2:	bf 90       	pop	r11
    34a4:	af 90       	pop	r10
    34a6:	9f 90       	pop	r9
    34a8:	8f 90       	pop	r8
    34aa:	08 95       	ret

000034ac <u8g2_font_get_glyph_data>:
    34ac:	ef 92       	push	r14
    34ae:	ff 92       	push	r15
    34b0:	0f 93       	push	r16
    34b2:	1f 93       	push	r17
    34b4:	cf 93       	push	r28
    34b6:	df 93       	push	r29
    34b8:	fc 01       	movw	r30, r24
    34ba:	c5 a9       	ldd	r28, Z+53	; 0x35
    34bc:	d6 a9       	ldd	r29, Z+54	; 0x36
    34be:	67 96       	adiw	r28, 0x17	; 23
    34c0:	6f 3f       	cpi	r22, 0xFF	; 255
    34c2:	71 05       	cpc	r23, r1
    34c4:	11 f0       	breq	.+4      	; 0x34ca <u8g2_font_get_glyph_data+0x1e>
    34c6:	08 f0       	brcs	.+2      	; 0x34ca <u8g2_font_get_glyph_data+0x1e>
    34c8:	36 c0       	rjmp	.+108    	; 0x3536 <u8g2_font_get_glyph_data+0x8a>
    34ca:	61 36       	cpi	r22, 0x61	; 97
    34cc:	71 05       	cpc	r23, r1
    34ce:	38 f0       	brcs	.+14     	; 0x34de <u8g2_font_get_glyph_data+0x32>
    34d0:	e7 5a       	subi	r30, 0xA7	; 167
    34d2:	ff 4f       	sbci	r31, 0xFF	; 255
    34d4:	80 81       	ld	r24, Z
    34d6:	91 81       	ldd	r25, Z+1	; 0x01
    34d8:	c8 0f       	add	r28, r24
    34da:	d9 1f       	adc	r29, r25
    34dc:	0a c0       	rjmp	.+20     	; 0x34f2 <u8g2_font_get_glyph_data+0x46>
    34de:	61 34       	cpi	r22, 0x41	; 65
    34e0:	71 05       	cpc	r23, r1
    34e2:	38 f0       	brcs	.+14     	; 0x34f2 <u8g2_font_get_glyph_data+0x46>
    34e4:	fc 01       	movw	r30, r24
    34e6:	e9 5a       	subi	r30, 0xA9	; 169
    34e8:	ff 4f       	sbci	r31, 0xFF	; 255
    34ea:	80 81       	ld	r24, Z
    34ec:	91 81       	ldd	r25, Z+1	; 0x01
    34ee:	c8 0f       	add	r28, r24
    34f0:	d9 1f       	adc	r29, r25
    34f2:	ce 01       	movw	r24, r28
    34f4:	01 96       	adiw	r24, 0x01	; 1
    34f6:	fc 01       	movw	r30, r24
    34f8:	24 91       	lpm	r18, Z
    34fa:	22 23       	and	r18, r18
    34fc:	09 f4       	brne	.+2      	; 0x3500 <u8g2_font_get_glyph_data+0x54>
    34fe:	5a c0       	rjmp	.+180    	; 0x35b4 <u8g2_font_get_glyph_data+0x108>
    3500:	fe 01       	movw	r30, r28
    3502:	24 91       	lpm	r18, Z
    3504:	30 e0       	ldi	r19, 0x00	; 0
    3506:	62 17       	cp	r22, r18
    3508:	73 07       	cpc	r23, r19
    350a:	51 f4       	brne	.+20     	; 0x3520 <u8g2_font_get_glyph_data+0x74>
    350c:	06 c0       	rjmp	.+12     	; 0x351a <u8g2_font_get_glyph_data+0x6e>
    350e:	fe 01       	movw	r30, r28
    3510:	24 91       	lpm	r18, Z
    3512:	30 e0       	ldi	r19, 0x00	; 0
    3514:	62 17       	cp	r22, r18
    3516:	73 07       	cpc	r23, r19
    3518:	19 f4       	brne	.+6      	; 0x3520 <u8g2_font_get_glyph_data+0x74>
    351a:	ce 01       	movw	r24, r28
    351c:	02 96       	adiw	r24, 0x02	; 2
    351e:	52 c0       	rjmp	.+164    	; 0x35c4 <u8g2_font_get_glyph_data+0x118>
    3520:	fc 01       	movw	r30, r24
    3522:	84 91       	lpm	r24, Z
    3524:	c8 0f       	add	r28, r24
    3526:	d1 1d       	adc	r29, r1
    3528:	ce 01       	movw	r24, r28
    352a:	01 96       	adiw	r24, 0x01	; 1
    352c:	fc 01       	movw	r30, r24
    352e:	24 91       	lpm	r18, Z
    3530:	21 11       	cpse	r18, r1
    3532:	ed cf       	rjmp	.-38     	; 0x350e <u8g2_font_get_glyph_data+0x62>
    3534:	42 c0       	rjmp	.+132    	; 0x35ba <u8g2_font_get_glyph_data+0x10e>
    3536:	8b 01       	movw	r16, r22
    3538:	fc 01       	movw	r30, r24
    353a:	e5 5a       	subi	r30, 0xA5	; 165
    353c:	ff 4f       	sbci	r31, 0xFF	; 255
    353e:	80 81       	ld	r24, Z
    3540:	91 81       	ldd	r25, Z+1	; 0x01
    3542:	c8 0f       	add	r28, r24
    3544:	d9 1f       	adc	r29, r25
    3546:	7e 01       	movw	r14, r28
    3548:	60 e0       	ldi	r22, 0x00	; 0
    354a:	c7 01       	movw	r24, r14
    354c:	0e 94 15 18 	call	0x302a	; 0x302a <u8g2_font_get_word>
    3550:	c8 0f       	add	r28, r24
    3552:	d9 1f       	adc	r29, r25
    3554:	62 e0       	ldi	r22, 0x02	; 2
    3556:	c7 01       	movw	r24, r14
    3558:	0e 94 15 18 	call	0x302a	; 0x302a <u8g2_font_get_word>
    355c:	f4 e0       	ldi	r31, 0x04	; 4
    355e:	ef 0e       	add	r14, r31
    3560:	f1 1c       	adc	r15, r1
    3562:	80 17       	cp	r24, r16
    3564:	91 07       	cpc	r25, r17
    3566:	80 f3       	brcs	.-32     	; 0x3548 <u8g2_font_get_glyph_data+0x9c>
    3568:	fe 01       	movw	r30, r28
    356a:	84 91       	lpm	r24, Z
    356c:	90 e0       	ldi	r25, 0x00	; 0
    356e:	98 2f       	mov	r25, r24
    3570:	88 27       	eor	r24, r24
    3572:	31 96       	adiw	r30, 0x01	; 1
    3574:	e4 91       	lpm	r30, Z
    3576:	8e 2b       	or	r24, r30
    3578:	00 97       	sbiw	r24, 0x00	; 0
    357a:	11 f1       	breq	.+68     	; 0x35c0 <u8g2_font_get_glyph_data+0x114>
    357c:	08 17       	cp	r16, r24
    357e:	19 07       	cpc	r17, r25
    3580:	39 f4       	brne	.+14     	; 0x3590 <u8g2_font_get_glyph_data+0xe4>
    3582:	03 c0       	rjmp	.+6      	; 0x358a <u8g2_font_get_glyph_data+0xde>
    3584:	08 17       	cp	r16, r24
    3586:	19 07       	cpc	r17, r25
    3588:	19 f4       	brne	.+6      	; 0x3590 <u8g2_font_get_glyph_data+0xe4>
    358a:	ce 01       	movw	r24, r28
    358c:	03 96       	adiw	r24, 0x03	; 3
    358e:	1a c0       	rjmp	.+52     	; 0x35c4 <u8g2_font_get_glyph_data+0x118>
    3590:	fe 01       	movw	r30, r28
    3592:	32 96       	adiw	r30, 0x02	; 2
    3594:	e4 91       	lpm	r30, Z
    3596:	ce 0f       	add	r28, r30
    3598:	d1 1d       	adc	r29, r1
    359a:	fe 01       	movw	r30, r28
    359c:	84 91       	lpm	r24, Z
    359e:	90 e0       	ldi	r25, 0x00	; 0
    35a0:	98 2f       	mov	r25, r24
    35a2:	88 27       	eor	r24, r24
    35a4:	31 96       	adiw	r30, 0x01	; 1
    35a6:	e4 91       	lpm	r30, Z
    35a8:	8e 2b       	or	r24, r30
    35aa:	00 97       	sbiw	r24, 0x00	; 0
    35ac:	59 f7       	brne	.-42     	; 0x3584 <u8g2_font_get_glyph_data+0xd8>
    35ae:	80 e0       	ldi	r24, 0x00	; 0
    35b0:	90 e0       	ldi	r25, 0x00	; 0
    35b2:	08 c0       	rjmp	.+16     	; 0x35c4 <u8g2_font_get_glyph_data+0x118>
    35b4:	80 e0       	ldi	r24, 0x00	; 0
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	05 c0       	rjmp	.+10     	; 0x35c4 <u8g2_font_get_glyph_data+0x118>
    35ba:	80 e0       	ldi	r24, 0x00	; 0
    35bc:	90 e0       	ldi	r25, 0x00	; 0
    35be:	02 c0       	rjmp	.+4      	; 0x35c4 <u8g2_font_get_glyph_data+0x118>
    35c0:	80 e0       	ldi	r24, 0x00	; 0
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	df 91       	pop	r29
    35c6:	cf 91       	pop	r28
    35c8:	1f 91       	pop	r17
    35ca:	0f 91       	pop	r16
    35cc:	ff 90       	pop	r15
    35ce:	ef 90       	pop	r14
    35d0:	08 95       	ret

000035d2 <u8g2_GetGlyphWidth>:
    35d2:	0f 93       	push	r16
    35d4:	1f 93       	push	r17
    35d6:	cf 93       	push	r28
    35d8:	df 93       	push	r29
    35da:	ec 01       	movw	r28, r24
    35dc:	0e 94 56 1a 	call	0x34ac	; 0x34ac <u8g2_font_get_glyph_data>
    35e0:	00 97       	sbiw	r24, 0x00	; 0
    35e2:	f1 f0       	breq	.+60     	; 0x3620 <u8g2_GetGlyphWidth+0x4e>
    35e4:	bc 01       	movw	r22, r24
    35e6:	ce 01       	movw	r24, r28
    35e8:	0e 94 b2 18 	call	0x3164	; 0x3164 <u8g2_font_setup_decode>
    35ec:	8e 01       	movw	r16, r28
    35ee:	07 5c       	subi	r16, 0xC7	; 199
    35f0:	1f 4f       	sbci	r17, 0xFF	; 255
    35f2:	fe 01       	movw	r30, r28
    35f4:	e4 5b       	subi	r30, 0xB4	; 180
    35f6:	ff 4f       	sbci	r31, 0xFF	; 255
    35f8:	60 81       	ld	r22, Z
    35fa:	c8 01       	movw	r24, r16
    35fc:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <u8g2_font_decode_get_signed_bits>
    3600:	fe 01       	movw	r30, r28
    3602:	ef 59       	subi	r30, 0x9F	; 159
    3604:	ff 4f       	sbci	r31, 0xFF	; 255
    3606:	80 83       	st	Z, r24
    3608:	74 97       	sbiw	r30, 0x14	; 20
    360a:	60 81       	ld	r22, Z
    360c:	c8 01       	movw	r24, r16
    360e:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <u8g2_font_decode_get_signed_bits>
    3612:	c2 5b       	subi	r28, 0xB2	; 178
    3614:	df 4f       	sbci	r29, 0xFF	; 255
    3616:	68 81       	ld	r22, Y
    3618:	c8 01       	movw	r24, r16
    361a:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <u8g2_font_decode_get_signed_bits>
    361e:	01 c0       	rjmp	.+2      	; 0x3622 <u8g2_GetGlyphWidth+0x50>
    3620:	80 e0       	ldi	r24, 0x00	; 0
    3622:	df 91       	pop	r29
    3624:	cf 91       	pop	r28
    3626:	1f 91       	pop	r17
    3628:	0f 91       	pop	r16
    362a:	08 95       	ret

0000362c <u8g2_string_width>:
    362c:	ef 92       	push	r14
    362e:	ff 92       	push	r15
    3630:	0f 93       	push	r16
    3632:	1f 93       	push	r17
    3634:	cf 93       	push	r28
    3636:	df 93       	push	r29
    3638:	ec 01       	movw	r28, r24
    363a:	e6 2e       	mov	r14, r22
    363c:	f7 2e       	mov	r15, r23
    363e:	1f ae       	std	Y+63, r1	; 0x3f
    3640:	0e 94 58 1e 	call	0x3cb0	; 0x3cb0 <u8x8_utf8_init>
    3644:	0e 2d       	mov	r16, r14
    3646:	1f 2d       	mov	r17, r15
    3648:	e1 2c       	mov	r14, r1
    364a:	f1 2c       	mov	r15, r1
    364c:	f8 01       	movw	r30, r16
    364e:	61 91       	ld	r22, Z+
    3650:	8f 01       	movw	r16, r30
    3652:	ea 81       	ldd	r30, Y+2	; 0x02
    3654:	fb 81       	ldd	r31, Y+3	; 0x03
    3656:	ce 01       	movw	r24, r28
    3658:	09 95       	icall
    365a:	8f 3f       	cpi	r24, 0xFF	; 255
    365c:	ff ef       	ldi	r31, 0xFF	; 255
    365e:	9f 07       	cpc	r25, r31
    3660:	59 f0       	breq	.+22     	; 0x3678 <u8g2_string_width+0x4c>
    3662:	8e 3f       	cpi	r24, 0xFE	; 254
    3664:	2f ef       	ldi	r18, 0xFF	; 255
    3666:	92 07       	cpc	r25, r18
    3668:	89 f3       	breq	.-30     	; 0x364c <u8g2_string_width+0x20>
    366a:	bc 01       	movw	r22, r24
    366c:	ce 01       	movw	r24, r28
    366e:	0e 94 e9 1a 	call	0x35d2	; 0x35d2 <u8g2_GetGlyphWidth>
    3672:	e8 2e       	mov	r14, r24
    3674:	f8 0e       	add	r15, r24
    3676:	ea cf       	rjmp	.-44     	; 0x364c <u8g2_string_width+0x20>
    3678:	8f ad       	ldd	r24, Y+63	; 0x3f
    367a:	88 23       	and	r24, r24
    367c:	31 f0       	breq	.+12     	; 0x368a <u8g2_string_width+0x5e>
    367e:	cf 59       	subi	r28, 0x9F	; 159
    3680:	df 4f       	sbci	r29, 0xFF	; 255
    3682:	98 81       	ld	r25, Y
    3684:	89 0f       	add	r24, r25
    3686:	f8 0e       	add	r15, r24
    3688:	fe 18       	sub	r15, r14
    368a:	8f 2d       	mov	r24, r15
    368c:	df 91       	pop	r29
    368e:	cf 91       	pop	r28
    3690:	1f 91       	pop	r17
    3692:	0f 91       	pop	r16
    3694:	ff 90       	pop	r15
    3696:	ef 90       	pop	r14
    3698:	08 95       	ret

0000369a <u8g2_DrawGlyph>:
    369a:	ef 92       	push	r14
    369c:	ff 92       	push	r15
    369e:	0f 93       	push	r16
    36a0:	1f 93       	push	r17
    36a2:	cf 93       	push	r28
    36a4:	df 93       	push	r29
    36a6:	ec 01       	movw	r28, r24
    36a8:	06 2f       	mov	r16, r22
    36aa:	14 2f       	mov	r17, r20
    36ac:	79 01       	movw	r14, r18
    36ae:	fc 01       	movw	r30, r24
    36b0:	eb 5b       	subi	r30, 0xBB	; 187
    36b2:	ff 4f       	sbci	r31, 0xFF	; 255
    36b4:	80 81       	ld	r24, Z
    36b6:	81 30       	cpi	r24, 0x01	; 1
    36b8:	61 f0       	breq	.+24     	; 0x36d2 <u8g2_DrawGlyph+0x38>
    36ba:	28 f0       	brcs	.+10     	; 0x36c6 <u8g2_DrawGlyph+0x2c>
    36bc:	82 30       	cpi	r24, 0x02	; 2
    36be:	79 f0       	breq	.+30     	; 0x36de <u8g2_DrawGlyph+0x44>
    36c0:	83 30       	cpi	r24, 0x03	; 3
    36c2:	99 f0       	breq	.+38     	; 0x36ea <u8g2_DrawGlyph+0x50>
    36c4:	17 c0       	rjmp	.+46     	; 0x36f4 <u8g2_DrawGlyph+0x5a>
    36c6:	ef a9       	ldd	r30, Y+55	; 0x37
    36c8:	f8 ad       	ldd	r31, Y+56	; 0x38
    36ca:	ce 01       	movw	r24, r28
    36cc:	09 95       	icall
    36ce:	18 0f       	add	r17, r24
    36d0:	11 c0       	rjmp	.+34     	; 0x36f4 <u8g2_DrawGlyph+0x5a>
    36d2:	ef a9       	ldd	r30, Y+55	; 0x37
    36d4:	f8 ad       	ldd	r31, Y+56	; 0x38
    36d6:	ce 01       	movw	r24, r28
    36d8:	09 95       	icall
    36da:	08 1b       	sub	r16, r24
    36dc:	0b c0       	rjmp	.+22     	; 0x36f4 <u8g2_DrawGlyph+0x5a>
    36de:	ef a9       	ldd	r30, Y+55	; 0x37
    36e0:	f8 ad       	ldd	r31, Y+56	; 0x38
    36e2:	ce 01       	movw	r24, r28
    36e4:	09 95       	icall
    36e6:	18 1b       	sub	r17, r24
    36e8:	05 c0       	rjmp	.+10     	; 0x36f4 <u8g2_DrawGlyph+0x5a>
    36ea:	ef a9       	ldd	r30, Y+55	; 0x37
    36ec:	f8 ad       	ldd	r31, Y+56	; 0x38
    36ee:	ce 01       	movw	r24, r28
    36f0:	09 95       	icall
    36f2:	08 0f       	add	r16, r24
    36f4:	0b af       	std	Y+59, r16	; 0x3b
    36f6:	1c af       	std	Y+60, r17	; 0x3c
    36f8:	b7 01       	movw	r22, r14
    36fa:	ce 01       	movw	r24, r28
    36fc:	0e 94 56 1a 	call	0x34ac	; 0x34ac <u8g2_font_get_glyph_data>
    3700:	00 97       	sbiw	r24, 0x00	; 0
    3702:	29 f0       	breq	.+10     	; 0x370e <u8g2_DrawGlyph+0x74>
    3704:	bc 01       	movw	r22, r24
    3706:	ce 01       	movw	r24, r28
    3708:	0e 94 9d 19 	call	0x333a	; 0x333a <u8g2_font_decode_glyph>
    370c:	01 c0       	rjmp	.+2      	; 0x3710 <u8g2_DrawGlyph+0x76>
    370e:	80 e0       	ldi	r24, 0x00	; 0
    3710:	df 91       	pop	r29
    3712:	cf 91       	pop	r28
    3714:	1f 91       	pop	r17
    3716:	0f 91       	pop	r16
    3718:	ff 90       	pop	r15
    371a:	ef 90       	pop	r14
    371c:	08 95       	ret

0000371e <u8g2_draw_string>:
    371e:	bf 92       	push	r11
    3720:	cf 92       	push	r12
    3722:	df 92       	push	r13
    3724:	ef 92       	push	r14
    3726:	ff 92       	push	r15
    3728:	0f 93       	push	r16
    372a:	1f 93       	push	r17
    372c:	cf 93       	push	r28
    372e:	df 93       	push	r29
    3730:	ec 01       	movw	r28, r24
    3732:	b6 2e       	mov	r11, r22
    3734:	c4 2e       	mov	r12, r20
    3736:	e2 2e       	mov	r14, r18
    3738:	f3 2e       	mov	r15, r19
    373a:	0e 94 58 1e 	call	0x3cb0	; 0x3cb0 <u8x8_utf8_init>
    373e:	0e 2d       	mov	r16, r14
    3740:	1f 2d       	mov	r17, r15
    3742:	d1 2c       	mov	r13, r1
    3744:	7e 01       	movw	r14, r28
    3746:	25 e4       	ldi	r18, 0x45	; 69
    3748:	e2 0e       	add	r14, r18
    374a:	f1 1c       	adc	r15, r1
    374c:	f8 01       	movw	r30, r16
    374e:	61 91       	ld	r22, Z+
    3750:	8f 01       	movw	r16, r30
    3752:	ea 81       	ldd	r30, Y+2	; 0x02
    3754:	fb 81       	ldd	r31, Y+3	; 0x03
    3756:	ce 01       	movw	r24, r28
    3758:	09 95       	icall
    375a:	8f 3f       	cpi	r24, 0xFF	; 255
    375c:	ff ef       	ldi	r31, 0xFF	; 255
    375e:	9f 07       	cpc	r25, r31
    3760:	e9 f0       	breq	.+58     	; 0x379c <u8g2_draw_string+0x7e>
    3762:	8e 3f       	cpi	r24, 0xFE	; 254
    3764:	2f ef       	ldi	r18, 0xFF	; 255
    3766:	92 07       	cpc	r25, r18
    3768:	89 f3       	breq	.-30     	; 0x374c <u8g2_draw_string+0x2e>
    376a:	9c 01       	movw	r18, r24
    376c:	4c 2d       	mov	r20, r12
    376e:	6b 2d       	mov	r22, r11
    3770:	ce 01       	movw	r24, r28
    3772:	0e 94 4d 1b 	call	0x369a	; 0x369a <u8g2_DrawGlyph>
    3776:	f7 01       	movw	r30, r14
    3778:	90 81       	ld	r25, Z
    377a:	91 30       	cpi	r25, 0x01	; 1
    377c:	41 f0       	breq	.+16     	; 0x378e <u8g2_draw_string+0x70>
    377e:	28 f0       	brcs	.+10     	; 0x378a <u8g2_draw_string+0x6c>
    3780:	92 30       	cpi	r25, 0x02	; 2
    3782:	39 f0       	breq	.+14     	; 0x3792 <u8g2_draw_string+0x74>
    3784:	93 30       	cpi	r25, 0x03	; 3
    3786:	39 f0       	breq	.+14     	; 0x3796 <u8g2_draw_string+0x78>
    3788:	07 c0       	rjmp	.+14     	; 0x3798 <u8g2_draw_string+0x7a>
    378a:	b8 0e       	add	r11, r24
    378c:	05 c0       	rjmp	.+10     	; 0x3798 <u8g2_draw_string+0x7a>
    378e:	c8 0e       	add	r12, r24
    3790:	03 c0       	rjmp	.+6      	; 0x3798 <u8g2_draw_string+0x7a>
    3792:	b8 1a       	sub	r11, r24
    3794:	01 c0       	rjmp	.+2      	; 0x3798 <u8g2_draw_string+0x7a>
    3796:	c8 1a       	sub	r12, r24
    3798:	d8 0e       	add	r13, r24
    379a:	d8 cf       	rjmp	.-80     	; 0x374c <u8g2_draw_string+0x2e>
    379c:	8d 2d       	mov	r24, r13
    379e:	df 91       	pop	r29
    37a0:	cf 91       	pop	r28
    37a2:	1f 91       	pop	r17
    37a4:	0f 91       	pop	r16
    37a6:	ff 90       	pop	r15
    37a8:	ef 90       	pop	r14
    37aa:	df 90       	pop	r13
    37ac:	cf 90       	pop	r12
    37ae:	bf 90       	pop	r11
    37b0:	08 95       	ret

000037b2 <u8g2_DrawStr>:
    37b2:	eb e4       	ldi	r30, 0x4B	; 75
    37b4:	fe e1       	ldi	r31, 0x1E	; 30
    37b6:	dc 01       	movw	r26, r24
    37b8:	13 96       	adiw	r26, 0x03	; 3
    37ba:	fc 93       	st	X, r31
    37bc:	ee 93       	st	-X, r30
    37be:	12 97       	sbiw	r26, 0x02	; 2
    37c0:	0e 94 8f 1b 	call	0x371e	; 0x371e <u8g2_draw_string>
    37c4:	08 95       	ret

000037c6 <u8g2_UpdateRefHeight>:
    37c6:	fc 01       	movw	r30, r24
    37c8:	25 a9       	ldd	r18, Z+53	; 0x35
    37ca:	36 a9       	ldd	r19, Z+54	; 0x36
    37cc:	23 2b       	or	r18, r19
    37ce:	e9 f1       	breq	.+122    	; 0x384a <u8g2_UpdateRefHeight+0x84>
    37d0:	ed 5a       	subi	r30, 0xAD	; 173
    37d2:	ff 4f       	sbci	r31, 0xFF	; 255
    37d4:	20 81       	ld	r18, Z
    37d6:	3c 96       	adiw	r30, 0x0c	; 12
    37d8:	20 83       	st	Z, r18
    37da:	3b 97       	sbiw	r30, 0x0b	; 11
    37dc:	40 81       	ld	r20, Z
    37de:	3c 96       	adiw	r30, 0x0c	; 12
    37e0:	40 83       	st	Z, r20
    37e2:	32 97       	sbiw	r30, 0x02	; 2
    37e4:	30 81       	ld	r19, Z
    37e6:	33 23       	and	r19, r19
    37e8:	81 f1       	breq	.+96     	; 0x384a <u8g2_UpdateRefHeight+0x84>
    37ea:	31 30       	cpi	r19, 0x01	; 1
    37ec:	79 f4       	brne	.+30     	; 0x380c <u8g2_UpdateRefHeight+0x46>
    37ee:	39 97       	sbiw	r30, 0x09	; 9
    37f0:	30 81       	ld	r19, Z
    37f2:	23 17       	cp	r18, r19
    37f4:	14 f4       	brge	.+4      	; 0x37fa <u8g2_UpdateRefHeight+0x34>
    37f6:	3a 96       	adiw	r30, 0x0a	; 10
    37f8:	30 83       	st	Z, r19
    37fa:	fc 01       	movw	r30, r24
    37fc:	ea 5a       	subi	r30, 0xAA	; 170
    37fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3800:	20 81       	ld	r18, Z
    3802:	24 17       	cp	r18, r20
    3804:	14 f5       	brge	.+68     	; 0x384a <u8g2_UpdateRefHeight+0x84>
    3806:	3a 96       	adiw	r30, 0x0a	; 10
    3808:	20 83       	st	Z, r18
    380a:	08 95       	ret
    380c:	fc 01       	movw	r30, r24
    380e:	e0 5b       	subi	r30, 0xB0	; 176
    3810:	ff 4f       	sbci	r31, 0xFF	; 255
    3812:	e0 81       	ld	r30, Z
    3814:	dc 01       	movw	r26, r24
    3816:	ae 5a       	subi	r26, 0xAE	; 174
    3818:	bf 4f       	sbci	r27, 0xFF	; 255
    381a:	5c 91       	ld	r21, X
    381c:	02 2e       	mov	r0, r18
    381e:	00 0c       	add	r0, r0
    3820:	33 0b       	sbc	r19, r19
    3822:	65 2f       	mov	r22, r21
    3824:	05 2e       	mov	r0, r21
    3826:	00 0c       	add	r0, r0
    3828:	77 0b       	sbc	r23, r23
    382a:	6e 0f       	add	r22, r30
    382c:	71 1d       	adc	r23, r1
    382e:	e7 fd       	sbrc	r30, 7
    3830:	7a 95       	dec	r23
    3832:	26 17       	cp	r18, r22
    3834:	37 07       	cpc	r19, r23
    3836:	1c f4       	brge	.+6      	; 0x383e <u8g2_UpdateRefHeight+0x78>
    3838:	1d 96       	adiw	r26, 0x0d	; 13
    383a:	e5 0f       	add	r30, r21
    383c:	ec 93       	st	X, r30
    383e:	54 17       	cp	r21, r20
    3840:	24 f4       	brge	.+8      	; 0x384a <u8g2_UpdateRefHeight+0x84>
    3842:	fc 01       	movw	r30, r24
    3844:	e0 5a       	subi	r30, 0xA0	; 160
    3846:	ff 4f       	sbci	r31, 0xFF	; 255
    3848:	50 83       	st	Z, r21
    384a:	08 95       	ret

0000384c <u8g2_SetFontPosBaseline>:
    384c:	21 e2       	ldi	r18, 0x21	; 33
    384e:	38 e1       	ldi	r19, 0x18	; 24
    3850:	fc 01       	movw	r30, r24
    3852:	30 af       	std	Z+56, r19	; 0x38
    3854:	27 ab       	std	Z+55, r18	; 0x37
    3856:	08 95       	ret

00003858 <u8g2_SetFont>:
    3858:	cf 93       	push	r28
    385a:	df 93       	push	r29
    385c:	fc 01       	movw	r30, r24
    385e:	25 a9       	ldd	r18, Z+53	; 0x35
    3860:	36 a9       	ldd	r19, Z+54	; 0x36
    3862:	26 17       	cp	r18, r22
    3864:	37 07       	cpc	r19, r23
    3866:	51 f0       	breq	.+20     	; 0x387c <u8g2_SetFont+0x24>
    3868:	ec 01       	movw	r28, r24
    386a:	76 ab       	std	Z+54, r23	; 0x36
    386c:	65 ab       	std	Z+53, r22	; 0x35
    386e:	8a 5b       	subi	r24, 0xBA	; 186
    3870:	9f 4f       	sbci	r25, 0xFF	; 255
    3872:	0e 94 23 18 	call	0x3046	; 0x3046 <u8g2_read_font_info>
    3876:	ce 01       	movw	r24, r28
    3878:	0e 94 e3 1b 	call	0x37c6	; 0x37c6 <u8g2_UpdateRefHeight>
    387c:	df 91       	pop	r29
    387e:	cf 91       	pop	r28
    3880:	08 95       	ret

00003882 <u8g2_GetStrWidth>:
    3882:	2b e4       	ldi	r18, 0x4B	; 75
    3884:	3e e1       	ldi	r19, 0x1E	; 30
    3886:	fc 01       	movw	r30, r24
    3888:	33 83       	std	Z+3, r19	; 0x03
    388a:	22 83       	std	Z+2, r18	; 0x02
    388c:	0e 94 16 1b 	call	0x362c	; 0x362c <u8g2_string_width>
    3890:	08 95       	ret

00003892 <u8g2_SetFontDirection>:
    3892:	8b 5b       	subi	r24, 0xBB	; 187
    3894:	9f 4f       	sbci	r25, 0xFF	; 255
    3896:	fc 01       	movw	r30, r24
    3898:	60 83       	st	Z, r22
    389a:	08 95       	ret

0000389c <u8g2_draw_hv_line_2dir>:
    389c:	0f 93       	push	r16
    389e:	dc 01       	movw	r26, r24
    38a0:	98 96       	adiw	r26, 0x28	; 40
    38a2:	3c 91       	ld	r19, X
    38a4:	98 97       	sbiw	r26, 0x28	; 40
    38a6:	43 1b       	sub	r20, r19
    38a8:	5e 96       	adiw	r26, 0x1e	; 30
    38aa:	ed 91       	ld	r30, X+
    38ac:	fc 91       	ld	r31, X
    38ae:	5f 97       	sbiw	r26, 0x1f	; 31
    38b0:	09 95       	icall
    38b2:	0f 91       	pop	r16
    38b4:	08 95       	ret

000038b6 <u8g2_DrawHVLine>:
    38b6:	0f 93       	push	r16
    38b8:	fc 01       	movw	r30, r24
    38ba:	e3 5a       	subi	r30, 0xA3	; 163
    38bc:	ff 4f       	sbci	r31, 0xFF	; 255
    38be:	30 81       	ld	r19, Z
    38c0:	33 23       	and	r19, r19
    38c2:	09 f4       	brne	.+2      	; 0x38c6 <u8g2_DrawHVLine+0x10>
    38c4:	65 c0       	rjmp	.+202    	; 0x3990 <u8g2_DrawHVLine+0xda>
    38c6:	22 23       	and	r18, r18
    38c8:	09 f4       	brne	.+2      	; 0x38cc <u8g2_DrawHVLine+0x16>
    38ca:	62 c0       	rjmp	.+196    	; 0x3990 <u8g2_DrawHVLine+0xda>
    38cc:	22 30       	cpi	r18, 0x02	; 2
    38ce:	58 f0       	brcs	.+22     	; 0x38e6 <u8g2_DrawHVLine+0x30>
    38d0:	02 30       	cpi	r16, 0x02	; 2
    38d2:	19 f4       	brne	.+6      	; 0x38da <u8g2_DrawHVLine+0x24>
    38d4:	6f 5f       	subi	r22, 0xFF	; 255
    38d6:	62 1b       	sub	r22, r18
    38d8:	0a c0       	rjmp	.+20     	; 0x38ee <u8g2_DrawHVLine+0x38>
    38da:	03 30       	cpi	r16, 0x03	; 3
    38dc:	21 f4       	brne	.+8      	; 0x38e6 <u8g2_DrawHVLine+0x30>
    38de:	4f 5f       	subi	r20, 0xFF	; 255
    38e0:	42 1b       	sub	r20, r18
    38e2:	51 e0       	ldi	r21, 0x01	; 1
    38e4:	2d c0       	rjmp	.+90     	; 0x3940 <u8g2_DrawHVLine+0x8a>
    38e6:	50 2f       	mov	r21, r16
    38e8:	51 70       	andi	r21, 0x01	; 1
    38ea:	00 fd       	sbrc	r16, 0
    38ec:	29 c0       	rjmp	.+82     	; 0x3940 <u8g2_DrawHVLine+0x8a>
    38ee:	dc 01       	movw	r26, r24
    38f0:	9f 96       	adiw	r26, 0x2f	; 47
    38f2:	3c 91       	ld	r19, X
    38f4:	9f 97       	sbiw	r26, 0x2f	; 47
    38f6:	43 17       	cp	r20, r19
    38f8:	08 f4       	brcc	.+2      	; 0x38fc <u8g2_DrawHVLine+0x46>
    38fa:	4a c0       	rjmp	.+148    	; 0x3990 <u8g2_DrawHVLine+0xda>
    38fc:	d0 96       	adiw	r26, 0x30	; 48
    38fe:	3c 91       	ld	r19, X
    3900:	d0 97       	sbiw	r26, 0x30	; 48
    3902:	43 17       	cp	r20, r19
    3904:	08 f0       	brcs	.+2      	; 0x3908 <u8g2_DrawHVLine+0x52>
    3906:	44 c0       	rjmp	.+136    	; 0x3990 <u8g2_DrawHVLine+0xda>
    3908:	9e 96       	adiw	r26, 0x2e	; 46
    390a:	3c 91       	ld	r19, X
    390c:	9e 97       	sbiw	r26, 0x2e	; 46
    390e:	9d 96       	adiw	r26, 0x2d	; 45
    3910:	5c 91       	ld	r21, X
    3912:	26 0f       	add	r18, r22
    3914:	26 17       	cp	r18, r22
    3916:	30 f4       	brcc	.+12     	; 0x3924 <u8g2_DrawHVLine+0x6e>
    3918:	63 17       	cp	r22, r19
    391a:	18 f4       	brcc	.+6      	; 0x3922 <u8g2_DrawHVLine+0x6c>
    391c:	2f ef       	ldi	r18, 0xFF	; 255
    391e:	23 0f       	add	r18, r19
    3920:	03 c0       	rjmp	.+6      	; 0x3928 <u8g2_DrawHVLine+0x72>
    3922:	65 2f       	mov	r22, r21
    3924:	63 17       	cp	r22, r19
    3926:	a0 f5       	brcc	.+104    	; 0x3990 <u8g2_DrawHVLine+0xda>
    3928:	52 17       	cp	r21, r18
    392a:	90 f5       	brcc	.+100    	; 0x3990 <u8g2_DrawHVLine+0xda>
    392c:	65 17       	cp	r22, r21
    392e:	08 f4       	brcc	.+2      	; 0x3932 <u8g2_DrawHVLine+0x7c>
    3930:	65 2f       	mov	r22, r21
    3932:	23 17       	cp	r18, r19
    3934:	08 f4       	brcc	.+2      	; 0x3938 <u8g2_DrawHVLine+0x82>
    3936:	32 2f       	mov	r19, r18
    3938:	23 2f       	mov	r18, r19
    393a:	26 1b       	sub	r18, r22
    393c:	50 e0       	ldi	r21, 0x00	; 0
    393e:	1e c0       	rjmp	.+60     	; 0x397c <u8g2_DrawHVLine+0xc6>
    3940:	fc 01       	movw	r30, r24
    3942:	35 a5       	ldd	r19, Z+45	; 0x2d
    3944:	63 17       	cp	r22, r19
    3946:	20 f1       	brcs	.+72     	; 0x3990 <u8g2_DrawHVLine+0xda>
    3948:	36 a5       	ldd	r19, Z+46	; 0x2e
    394a:	63 17       	cp	r22, r19
    394c:	08 f5       	brcc	.+66     	; 0x3990 <u8g2_DrawHVLine+0xda>
    394e:	30 a9       	ldd	r19, Z+48	; 0x30
    3950:	77 a5       	ldd	r23, Z+47	; 0x2f
    3952:	24 0f       	add	r18, r20
    3954:	24 17       	cp	r18, r20
    3956:	30 f4       	brcc	.+12     	; 0x3964 <u8g2_DrawHVLine+0xae>
    3958:	43 17       	cp	r20, r19
    395a:	18 f4       	brcc	.+6      	; 0x3962 <u8g2_DrawHVLine+0xac>
    395c:	2f ef       	ldi	r18, 0xFF	; 255
    395e:	23 0f       	add	r18, r19
    3960:	03 c0       	rjmp	.+6      	; 0x3968 <u8g2_DrawHVLine+0xb2>
    3962:	47 2f       	mov	r20, r23
    3964:	43 17       	cp	r20, r19
    3966:	a0 f4       	brcc	.+40     	; 0x3990 <u8g2_DrawHVLine+0xda>
    3968:	72 17       	cp	r23, r18
    396a:	90 f4       	brcc	.+36     	; 0x3990 <u8g2_DrawHVLine+0xda>
    396c:	47 17       	cp	r20, r23
    396e:	08 f4       	brcc	.+2      	; 0x3972 <u8g2_DrawHVLine+0xbc>
    3970:	47 2f       	mov	r20, r23
    3972:	23 17       	cp	r18, r19
    3974:	08 f4       	brcc	.+2      	; 0x3978 <u8g2_DrawHVLine+0xc2>
    3976:	32 2f       	mov	r19, r18
    3978:	23 2f       	mov	r18, r19
    397a:	24 1b       	sub	r18, r20
    397c:	dc 01       	movw	r26, r24
    397e:	90 96       	adiw	r26, 0x20	; 32
    3980:	ed 91       	ld	r30, X+
    3982:	fc 91       	ld	r31, X
    3984:	91 97       	sbiw	r26, 0x21	; 33
    3986:	04 80       	ldd	r0, Z+4	; 0x04
    3988:	f5 81       	ldd	r31, Z+5	; 0x05
    398a:	e0 2d       	mov	r30, r0
    398c:	05 2f       	mov	r16, r21
    398e:	09 95       	icall
    3990:	0f 91       	pop	r16
    3992:	08 95       	ret

00003994 <u8g2_DrawHLine>:
    3994:	0f 93       	push	r16
    3996:	00 e0       	ldi	r16, 0x00	; 0
    3998:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    399c:	0f 91       	pop	r16
    399e:	08 95       	ret

000039a0 <u8g2_DrawVLine>:
    39a0:	0f 93       	push	r16
    39a2:	01 e0       	ldi	r16, 0x01	; 1
    39a4:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    39a8:	0f 91       	pop	r16
    39aa:	08 95       	ret

000039ac <u8g2_DrawPixel>:
    39ac:	0f 93       	push	r16
    39ae:	fc 01       	movw	r30, r24
    39b0:	87 a5       	ldd	r24, Z+47	; 0x2f
    39b2:	48 17       	cp	r20, r24
    39b4:	70 f0       	brcs	.+28     	; 0x39d2 <u8g2_DrawPixel+0x26>
    39b6:	80 a9       	ldd	r24, Z+48	; 0x30
    39b8:	48 17       	cp	r20, r24
    39ba:	58 f4       	brcc	.+22     	; 0x39d2 <u8g2_DrawPixel+0x26>
    39bc:	85 a5       	ldd	r24, Z+45	; 0x2d
    39be:	68 17       	cp	r22, r24
    39c0:	40 f0       	brcs	.+16     	; 0x39d2 <u8g2_DrawPixel+0x26>
    39c2:	86 a5       	ldd	r24, Z+46	; 0x2e
    39c4:	68 17       	cp	r22, r24
    39c6:	28 f4       	brcc	.+10     	; 0x39d2 <u8g2_DrawPixel+0x26>
    39c8:	cf 01       	movw	r24, r30
    39ca:	00 e0       	ldi	r16, 0x00	; 0
    39cc:	21 e0       	ldi	r18, 0x01	; 1
    39ce:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <u8g2_DrawHVLine>
    39d2:	0f 91       	pop	r16
    39d4:	08 95       	ret

000039d6 <u8g2_SetDrawColor>:
    39d6:	63 30       	cpi	r22, 0x03	; 3
    39d8:	28 f4       	brcc	.+10     	; 0x39e4 <u8g2_SetDrawColor+0xe>
    39da:	fc 01       	movw	r30, r24
    39dc:	ed 59       	subi	r30, 0x9D	; 157
    39de:	ff 4f       	sbci	r31, 0xFF	; 255
    39e0:	60 83       	st	Z, r22
    39e2:	08 95       	ret
    39e4:	fc 01       	movw	r30, r24
    39e6:	ed 59       	subi	r30, 0x9D	; 157
    39e8:	ff 4f       	sbci	r31, 0xFF	; 255
    39ea:	21 e0       	ldi	r18, 0x01	; 1
    39ec:	20 83       	st	Z, r18
    39ee:	08 95       	ret

000039f0 <u8g2_is_intersection_decision_tree>:
    39f0:	46 17       	cp	r20, r22
    39f2:	38 f4       	brcc	.+14     	; 0x3a02 <u8g2_is_intersection_decision_tree+0x12>
    39f4:	82 17       	cp	r24, r18
    39f6:	60 f0       	brcs	.+24     	; 0x3a10 <u8g2_is_intersection_decision_tree+0x20>
    39f8:	81 e0       	ldi	r24, 0x01	; 1
    39fa:	24 17       	cp	r18, r20
    39fc:	60 f0       	brcs	.+24     	; 0x3a16 <u8g2_is_intersection_decision_tree+0x26>
    39fe:	80 e0       	ldi	r24, 0x00	; 0
    3a00:	08 95       	ret
    3a02:	82 17       	cp	r24, r18
    3a04:	38 f4       	brcc	.+14     	; 0x3a14 <u8g2_is_intersection_decision_tree+0x24>
    3a06:	81 e0       	ldi	r24, 0x01	; 1
    3a08:	24 17       	cp	r18, r20
    3a0a:	28 f0       	brcs	.+10     	; 0x3a16 <u8g2_is_intersection_decision_tree+0x26>
    3a0c:	80 e0       	ldi	r24, 0x00	; 0
    3a0e:	08 95       	ret
    3a10:	81 e0       	ldi	r24, 0x01	; 1
    3a12:	08 95       	ret
    3a14:	80 e0       	ldi	r24, 0x00	; 0
    3a16:	08 95       	ret

00003a18 <u8g2_IsIntersection>:
    3a18:	ff 92       	push	r15
    3a1a:	0f 93       	push	r16
    3a1c:	1f 93       	push	r17
    3a1e:	cf 93       	push	r28
    3a20:	df 93       	push	r29
    3a22:	ec 01       	movw	r28, r24
    3a24:	16 2f       	mov	r17, r22
    3a26:	f2 2e       	mov	r15, r18
    3a28:	20 2f       	mov	r18, r16
    3a2a:	68 a9       	ldd	r22, Y+48	; 0x30
    3a2c:	8f a5       	ldd	r24, Y+47	; 0x2f
    3a2e:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <u8g2_is_intersection_decision_tree>
    3a32:	88 23       	and	r24, r24
    3a34:	31 f0       	breq	.+12     	; 0x3a42 <u8g2_IsIntersection+0x2a>
    3a36:	2f 2d       	mov	r18, r15
    3a38:	41 2f       	mov	r20, r17
    3a3a:	6e a5       	ldd	r22, Y+46	; 0x2e
    3a3c:	8d a5       	ldd	r24, Y+45	; 0x2d
    3a3e:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <u8g2_is_intersection_decision_tree>
    3a42:	df 91       	pop	r29
    3a44:	cf 91       	pop	r28
    3a46:	1f 91       	pop	r17
    3a48:	0f 91       	pop	r16
    3a4a:	ff 90       	pop	r15
    3a4c:	08 95       	ret

00003a4e <u8g2_ll_hvline_vertical_top_lsb>:
    3a4e:	ef 92       	push	r14
    3a50:	ff 92       	push	r15
    3a52:	0f 93       	push	r16
    3a54:	cf 93       	push	r28
    3a56:	df 93       	push	r29
    3a58:	7c 01       	movw	r14, r24
    3a5a:	34 2f       	mov	r19, r20
    3a5c:	37 70       	andi	r19, 0x07	; 7
    3a5e:	81 e0       	ldi	r24, 0x01	; 1
    3a60:	90 e0       	ldi	r25, 0x00	; 0
    3a62:	03 2e       	mov	r0, r19
    3a64:	02 c0       	rjmp	.+4      	; 0x3a6a <u8g2_ll_hvline_vertical_top_lsb+0x1c>
    3a66:	88 0f       	add	r24, r24
    3a68:	99 1f       	adc	r25, r25
    3a6a:	0a 94       	dec	r0
    3a6c:	e2 f7       	brpl	.-8      	; 0x3a66 <u8g2_ll_hvline_vertical_top_lsb+0x18>
    3a6e:	c8 2f       	mov	r28, r24
    3a70:	f7 01       	movw	r30, r14
    3a72:	ed 59       	subi	r30, 0x9D	; 157
    3a74:	ff 4f       	sbci	r31, 0xFF	; 255
    3a76:	50 81       	ld	r21, Z
    3a78:	52 30       	cpi	r21, 0x02	; 2
    3a7a:	20 f4       	brcc	.+8      	; 0x3a84 <u8g2_ll_hvline_vertical_top_lsb+0x36>
    3a7c:	51 30       	cpi	r21, 0x01	; 1
    3a7e:	21 f0       	breq	.+8      	; 0x3a88 <u8g2_ll_hvline_vertical_top_lsb+0x3a>
    3a80:	78 2f       	mov	r23, r24
    3a82:	04 c0       	rjmp	.+8      	; 0x3a8c <u8g2_ll_hvline_vertical_top_lsb+0x3e>
    3a84:	70 e0       	ldi	r23, 0x00	; 0
    3a86:	02 c0       	rjmp	.+4      	; 0x3a8c <u8g2_ll_hvline_vertical_top_lsb+0x3e>
    3a88:	78 2f       	mov	r23, r24
    3a8a:	c0 e0       	ldi	r28, 0x00	; 0
    3a8c:	50 e0       	ldi	r21, 0x00	; 0
    3a8e:	48 7f       	andi	r20, 0xF8	; 248
    3a90:	d7 01       	movw	r26, r14
    3a92:	92 96       	adiw	r26, 0x22	; 34
    3a94:	8d 91       	ld	r24, X+
    3a96:	9c 91       	ld	r25, X
    3a98:	93 97       	sbiw	r26, 0x23	; 35
    3a9a:	ed 91       	ld	r30, X+
    3a9c:	fc 91       	ld	r31, X
    3a9e:	d0 89       	ldd	r29, Z+16	; 0x10
    3aa0:	d4 9f       	mul	r29, r20
    3aa2:	f0 01       	movw	r30, r0
    3aa4:	d5 9f       	mul	r29, r21
    3aa6:	f0 0d       	add	r31, r0
    3aa8:	11 24       	eor	r1, r1
    3aaa:	e6 0f       	add	r30, r22
    3aac:	f1 1d       	adc	r31, r1
    3aae:	e8 0f       	add	r30, r24
    3ab0:	f9 1f       	adc	r31, r25
    3ab2:	01 11       	cpse	r16, r1
    3ab4:	07 c0       	rjmp	.+14     	; 0x3ac4 <u8g2_ll_hvline_vertical_top_lsb+0x76>
    3ab6:	80 81       	ld	r24, Z
    3ab8:	87 2b       	or	r24, r23
    3aba:	8c 27       	eor	r24, r28
    3abc:	81 93       	st	Z+, r24
    3abe:	21 50       	subi	r18, 0x01	; 1
    3ac0:	d1 f7       	brne	.-12     	; 0x3ab6 <u8g2_ll_hvline_vertical_top_lsb+0x68>
    3ac2:	22 c0       	rjmp	.+68     	; 0x3b08 <u8g2_ll_hvline_vertical_top_lsb+0xba>
    3ac4:	a7 01       	movw	r20, r14
    3ac6:	4d 59       	subi	r20, 0x9D	; 157
    3ac8:	5f 4f       	sbci	r21, 0xFF	; 255
    3aca:	90 81       	ld	r25, Z
    3acc:	97 2b       	or	r25, r23
    3ace:	9c 27       	eor	r25, r28
    3ad0:	90 83       	st	Z, r25
    3ad2:	3f 5f       	subi	r19, 0xFF	; 255
    3ad4:	37 70       	andi	r19, 0x07	; 7
    3ad6:	21 50       	subi	r18, 0x01	; 1
    3ad8:	31 11       	cpse	r19, r1
    3ada:	0e c0       	rjmp	.+28     	; 0x3af8 <u8g2_ll_hvline_vertical_top_lsb+0xaa>
    3adc:	d7 01       	movw	r26, r14
    3ade:	96 96       	adiw	r26, 0x26	; 38
    3ae0:	8c 91       	ld	r24, X
    3ae2:	e8 0f       	add	r30, r24
    3ae4:	f1 1d       	adc	r31, r1
    3ae6:	da 01       	movw	r26, r20
    3ae8:	8c 91       	ld	r24, X
    3aea:	82 30       	cpi	r24, 0x02	; 2
    3aec:	40 f4       	brcc	.+16     	; 0x3afe <u8g2_ll_hvline_vertical_top_lsb+0xb0>
    3aee:	81 30       	cpi	r24, 0x01	; 1
    3af0:	41 f0       	breq	.+16     	; 0x3b02 <u8g2_ll_hvline_vertical_top_lsb+0xb4>
    3af2:	c1 e0       	ldi	r28, 0x01	; 1
    3af4:	71 e0       	ldi	r23, 0x01	; 1
    3af6:	06 c0       	rjmp	.+12     	; 0x3b04 <u8g2_ll_hvline_vertical_top_lsb+0xb6>
    3af8:	77 0f       	add	r23, r23
    3afa:	cc 0f       	add	r28, r28
    3afc:	03 c0       	rjmp	.+6      	; 0x3b04 <u8g2_ll_hvline_vertical_top_lsb+0xb6>
    3afe:	c1 e0       	ldi	r28, 0x01	; 1
    3b00:	01 c0       	rjmp	.+2      	; 0x3b04 <u8g2_ll_hvline_vertical_top_lsb+0xb6>
    3b02:	71 e0       	ldi	r23, 0x01	; 1
    3b04:	21 11       	cpse	r18, r1
    3b06:	e1 cf       	rjmp	.-62     	; 0x3aca <u8g2_ll_hvline_vertical_top_lsb+0x7c>
    3b08:	df 91       	pop	r29
    3b0a:	cf 91       	pop	r28
    3b0c:	0f 91       	pop	r16
    3b0e:	ff 90       	pop	r15
    3b10:	ef 90       	pop	r14
    3b12:	08 95       	ret

00003b14 <u8g2_update_dimension_common>:
    3b14:	fc 01       	movw	r30, r24
    3b16:	a0 81       	ld	r26, Z
    3b18:	b1 81       	ldd	r27, Z+1	; 0x01
    3b1a:	84 a1       	ldd	r24, Z+36	; 0x24
    3b1c:	98 2f       	mov	r25, r24
    3b1e:	99 0f       	add	r25, r25
    3b20:	99 0f       	add	r25, r25
    3b22:	99 0f       	add	r25, r25
    3b24:	97 a3       	std	Z+39, r25	; 0x27
    3b26:	50 96       	adiw	r26, 0x10	; 16
    3b28:	9c 91       	ld	r25, X
    3b2a:	50 97       	sbiw	r26, 0x10	; 16
    3b2c:	90 32       	cpi	r25, 0x20	; 32
    3b2e:	08 f0       	brcs	.+2      	; 0x3b32 <u8g2_update_dimension_common+0x1e>
    3b30:	9f e1       	ldi	r25, 0x1F	; 31
    3b32:	99 0f       	add	r25, r25
    3b34:	99 0f       	add	r25, r25
    3b36:	99 0f       	add	r25, r25
    3b38:	96 a3       	std	Z+38, r25	; 0x26
    3b3a:	45 a1       	ldd	r20, Z+37	; 0x25
    3b3c:	94 2f       	mov	r25, r20
    3b3e:	99 0f       	add	r25, r25
    3b40:	99 0f       	add	r25, r25
    3b42:	99 0f       	add	r25, r25
    3b44:	90 a7       	std	Z+40, r25	; 0x28
    3b46:	51 96       	adiw	r26, 0x11	; 17
    3b48:	5c 91       	ld	r21, X
    3b4a:	51 97       	sbiw	r26, 0x11	; 17
    3b4c:	24 2f       	mov	r18, r20
    3b4e:	30 e0       	ldi	r19, 0x00	; 0
    3b50:	28 0f       	add	r18, r24
    3b52:	31 1d       	adc	r19, r1
    3b54:	65 2f       	mov	r22, r21
    3b56:	70 e0       	ldi	r23, 0x00	; 0
    3b58:	62 17       	cp	r22, r18
    3b5a:	73 07       	cpc	r23, r19
    3b5c:	14 f4       	brge	.+4      	; 0x3b62 <u8g2_update_dimension_common+0x4e>
    3b5e:	85 2f       	mov	r24, r21
    3b60:	84 1b       	sub	r24, r20
    3b62:	91 a7       	std	Z+41, r25	; 0x29
    3b64:	88 0f       	add	r24, r24
    3b66:	88 0f       	add	r24, r24
    3b68:	88 0f       	add	r24, r24
    3b6a:	89 0f       	add	r24, r25
    3b6c:	82 a7       	std	Z+42, r24	; 0x2a
    3b6e:	80 ef       	ldi	r24, 0xF0	; 240
    3b70:	83 a7       	std	Z+43, r24	; 0x2b
    3b72:	54 96       	adiw	r26, 0x14	; 20
    3b74:	8d 91       	ld	r24, X+
    3b76:	9c 91       	ld	r25, X
    3b78:	55 97       	sbiw	r26, 0x15	; 21
    3b7a:	81 3f       	cpi	r24, 0xF1	; 241
    3b7c:	91 05       	cpc	r25, r1
    3b7e:	08 f4       	brcc	.+2      	; 0x3b82 <u8g2_update_dimension_common+0x6e>
    3b80:	83 a7       	std	Z+43, r24	; 0x2b
    3b82:	56 96       	adiw	r26, 0x16	; 22
    3b84:	8c 91       	ld	r24, X
    3b86:	84 a7       	std	Z+44, r24	; 0x2c
    3b88:	08 95       	ret

00003b8a <u8g2_update_dimension_r0>:
    3b8a:	0e 94 8a 1d 	call	0x3b14	; 0x3b14 <u8g2_update_dimension_common>
    3b8e:	08 95       	ret

00003b90 <u8g2_apply_clip_window>:
    3b90:	0f 93       	push	r16
    3b92:	cf 93       	push	r28
    3b94:	df 93       	push	r29
    3b96:	ec 01       	movw	r28, r24
    3b98:	0c a9       	ldd	r16, Y+52	; 0x34
    3b9a:	2a a9       	ldd	r18, Y+50	; 0x32
    3b9c:	4b a9       	ldd	r20, Y+51	; 0x33
    3b9e:	69 a9       	ldd	r22, Y+49	; 0x31
    3ba0:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <u8g2_IsIntersection>
    3ba4:	81 11       	cpse	r24, r1
    3ba6:	04 c0       	rjmp	.+8      	; 0x3bb0 <u8g2_apply_clip_window+0x20>
    3ba8:	c3 5a       	subi	r28, 0xA3	; 163
    3baa:	df 4f       	sbci	r29, 0xFF	; 255
    3bac:	18 82       	st	Y, r1
    3bae:	19 c0       	rjmp	.+50     	; 0x3be2 <u8g2_apply_clip_window+0x52>
    3bb0:	81 e0       	ldi	r24, 0x01	; 1
    3bb2:	fe 01       	movw	r30, r28
    3bb4:	e3 5a       	subi	r30, 0xA3	; 163
    3bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb8:	80 83       	st	Z, r24
    3bba:	89 a9       	ldd	r24, Y+49	; 0x31
    3bbc:	9d a5       	ldd	r25, Y+45	; 0x2d
    3bbe:	98 17       	cp	r25, r24
    3bc0:	08 f4       	brcc	.+2      	; 0x3bc4 <u8g2_apply_clip_window+0x34>
    3bc2:	8d a7       	std	Y+45, r24	; 0x2d
    3bc4:	8a a9       	ldd	r24, Y+50	; 0x32
    3bc6:	9e a5       	ldd	r25, Y+46	; 0x2e
    3bc8:	89 17       	cp	r24, r25
    3bca:	08 f4       	brcc	.+2      	; 0x3bce <u8g2_apply_clip_window+0x3e>
    3bcc:	8e a7       	std	Y+46, r24	; 0x2e
    3bce:	8b a9       	ldd	r24, Y+51	; 0x33
    3bd0:	9f a5       	ldd	r25, Y+47	; 0x2f
    3bd2:	98 17       	cp	r25, r24
    3bd4:	08 f4       	brcc	.+2      	; 0x3bd8 <u8g2_apply_clip_window+0x48>
    3bd6:	8f a7       	std	Y+47, r24	; 0x2f
    3bd8:	8c a9       	ldd	r24, Y+52	; 0x34
    3bda:	98 a9       	ldd	r25, Y+48	; 0x30
    3bdc:	89 17       	cp	r24, r25
    3bde:	08 f4       	brcc	.+2      	; 0x3be2 <u8g2_apply_clip_window+0x52>
    3be0:	88 ab       	std	Y+48, r24	; 0x30
    3be2:	df 91       	pop	r29
    3be4:	cf 91       	pop	r28
    3be6:	0f 91       	pop	r16
    3be8:	08 95       	ret

00003bea <u8g2_update_page_win_r0>:
    3bea:	fc 01       	movw	r30, r24
    3bec:	15 a6       	std	Z+45, r1	; 0x2d
    3bee:	83 a5       	ldd	r24, Z+43	; 0x2b
    3bf0:	86 a7       	std	Z+46, r24	; 0x2e
    3bf2:	81 a5       	ldd	r24, Z+41	; 0x29
    3bf4:	87 a7       	std	Z+47, r24	; 0x2f
    3bf6:	82 a5       	ldd	r24, Z+42	; 0x2a
    3bf8:	80 ab       	std	Z+48, r24	; 0x30
    3bfa:	cf 01       	movw	r24, r30
    3bfc:	0e 94 c8 1d 	call	0x3b90	; 0x3b90 <u8g2_apply_clip_window>
    3c00:	08 95       	ret

00003c02 <u8g2_draw_l90_r0>:
    3c02:	0f 93       	push	r16
    3c04:	0e 94 4e 1c 	call	0x389c	; 0x389c <u8g2_draw_hv_line_2dir>
    3c08:	0f 91       	pop	r16
    3c0a:	08 95       	ret

00003c0c <u8g2_SetMaxClipWindow>:
    3c0c:	dc 01       	movw	r26, r24
    3c0e:	d1 96       	adiw	r26, 0x31	; 49
    3c10:	1c 92       	st	X, r1
    3c12:	d1 97       	sbiw	r26, 0x31	; 49
    3c14:	d3 96       	adiw	r26, 0x33	; 51
    3c16:	1c 92       	st	X, r1
    3c18:	d3 97       	sbiw	r26, 0x33	; 51
    3c1a:	8f ef       	ldi	r24, 0xFF	; 255
    3c1c:	d2 96       	adiw	r26, 0x32	; 50
    3c1e:	8c 93       	st	X, r24
    3c20:	d2 97       	sbiw	r26, 0x32	; 50
    3c22:	d4 96       	adiw	r26, 0x34	; 52
    3c24:	8c 93       	st	X, r24
    3c26:	d4 97       	sbiw	r26, 0x34	; 52
    3c28:	90 96       	adiw	r26, 0x20	; 32
    3c2a:	ed 91       	ld	r30, X+
    3c2c:	fc 91       	ld	r31, X
    3c2e:	91 97       	sbiw	r26, 0x21	; 33
    3c30:	02 80       	ldd	r0, Z+2	; 0x02
    3c32:	f3 81       	ldd	r31, Z+3	; 0x03
    3c34:	e0 2d       	mov	r30, r0
    3c36:	cd 01       	movw	r24, r26
    3c38:	09 95       	icall
    3c3a:	08 95       	ret

00003c3c <u8g2_SetupBuffer>:
    3c3c:	0f 93       	push	r16
    3c3e:	1f 93       	push	r17
    3c40:	cf 93       	push	r28
    3c42:	df 93       	push	r29
    3c44:	ec 01       	movw	r28, r24
    3c46:	1e aa       	std	Y+54, r1	; 0x36
    3c48:	1d aa       	std	Y+53, r1	; 0x35
    3c4a:	3f 8f       	std	Y+31, r19	; 0x1f
    3c4c:	2e 8f       	std	Y+30, r18	; 0x1e
    3c4e:	7b a3       	std	Y+35, r23	; 0x23
    3c50:	6a a3       	std	Y+34, r22	; 0x22
    3c52:	4c a3       	std	Y+36, r20	; 0x24
    3c54:	1d a2       	std	Y+37, r1	; 0x25
    3c56:	fc 01       	movw	r30, r24
    3c58:	ee 5b       	subi	r30, 0xBE	; 190
    3c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c5c:	10 82       	st	Z, r1
    3c5e:	b0 96       	adiw	r30, 0x20	; 32
    3c60:	10 82       	st	Z, r1
    3c62:	31 96       	adiw	r30, 0x01	; 1
    3c64:	81 e0       	ldi	r24, 0x01	; 1
    3c66:	80 83       	st	Z, r24
    3c68:	31 96       	adiw	r30, 0x01	; 1
    3c6a:	80 83       	st	Z, r24
    3c6c:	19 a3       	std	Y+33, r17	; 0x21
    3c6e:	08 a3       	std	Y+32, r16	; 0x20
    3c70:	d8 01       	movw	r26, r16
    3c72:	ed 91       	ld	r30, X+
    3c74:	fc 91       	ld	r31, X
    3c76:	ce 01       	movw	r24, r28
    3c78:	09 95       	icall
    3c7a:	ce 01       	movw	r24, r28
    3c7c:	0e 94 06 1e 	call	0x3c0c	; 0x3c0c <u8g2_SetMaxClipWindow>
    3c80:	ce 01       	movw	r24, r28
    3c82:	0e 94 26 1c 	call	0x384c	; 0x384c <u8g2_SetFontPosBaseline>
    3c86:	cb 5b       	subi	r28, 0xBB	; 187
    3c88:	df 4f       	sbci	r29, 0xFF	; 255
    3c8a:	18 82       	st	Y, r1
    3c8c:	df 91       	pop	r29
    3c8e:	cf 91       	pop	r28
    3c90:	1f 91       	pop	r17
    3c92:	0f 91       	pop	r16
    3c94:	08 95       	ret

00003c96 <u8x8_ascii_next>:
    3c96:	66 23       	and	r22, r22
    3c98:	29 f0       	breq	.+10     	; 0x3ca4 <u8x8_ascii_next+0xe>
    3c9a:	6a 30       	cpi	r22, 0x0A	; 10
    3c9c:	31 f0       	breq	.+12     	; 0x3caa <u8x8_ascii_next+0x14>
    3c9e:	86 2f       	mov	r24, r22
    3ca0:	90 e0       	ldi	r25, 0x00	; 0
    3ca2:	08 95       	ret
    3ca4:	8f ef       	ldi	r24, 0xFF	; 255
    3ca6:	9f ef       	ldi	r25, 0xFF	; 255
    3ca8:	08 95       	ret
    3caa:	8f ef       	ldi	r24, 0xFF	; 255
    3cac:	9f ef       	ldi	r25, 0xFF	; 255
    3cae:	08 95       	ret

00003cb0 <u8x8_utf8_init>:
    3cb0:	fc 01       	movw	r30, r24
    3cb2:	10 8e       	std	Z+24, r1	; 0x18
    3cb4:	08 95       	ret

00003cb6 <u8x8_byte_avr_hw_i2c>:
    3cb6:	0f 93       	push	r16
    3cb8:	1f 93       	push	r17
    3cba:	cf 93       	push	r28
    3cbc:	df 93       	push	r29
    3cbe:	68 31       	cpi	r22, 0x18	; 24
    3cc0:	19 f1       	breq	.+70     	; 0x3d08 <u8x8_byte_avr_hw_i2c+0x52>
    3cc2:	28 f4       	brcc	.+10     	; 0x3cce <u8x8_byte_avr_hw_i2c+0x18>
    3cc4:	64 31       	cpi	r22, 0x14	; 20
    3cc6:	e1 f0       	breq	.+56     	; 0x3d00 <u8x8_byte_avr_hw_i2c+0x4a>
    3cc8:	67 31       	cpi	r22, 0x17	; 23
    3cca:	39 f0       	breq	.+14     	; 0x3cda <u8x8_byte_avr_hw_i2c+0x24>
    3ccc:	27 c0       	rjmp	.+78     	; 0x3d1c <u8x8_byte_avr_hw_i2c+0x66>
    3cce:	69 31       	cpi	r22, 0x19	; 25
    3cd0:	09 f1       	breq	.+66     	; 0x3d14 <u8x8_byte_avr_hw_i2c+0x5e>
    3cd2:	60 32       	cpi	r22, 0x20	; 32
    3cd4:	19 f5       	brne	.+70     	; 0x3d1c <u8x8_byte_avr_hw_i2c+0x66>
    3cd6:	81 e0       	ldi	r24, 0x01	; 1
    3cd8:	24 c0       	rjmp	.+72     	; 0x3d22 <u8x8_byte_avr_hw_i2c+0x6c>
    3cda:	8f ef       	ldi	r24, 0xFF	; 255
    3cdc:	84 0f       	add	r24, r20
    3cde:	44 23       	and	r20, r20
    3ce0:	f9 f0       	breq	.+62     	; 0x3d20 <u8x8_byte_avr_hw_i2c+0x6a>
    3ce2:	e9 01       	movw	r28, r18
    3ce4:	08 2f       	mov	r16, r24
    3ce6:	10 e0       	ldi	r17, 0x00	; 0
    3ce8:	0f 5f       	subi	r16, 0xFF	; 255
    3cea:	1f 4f       	sbci	r17, 0xFF	; 255
    3cec:	02 0f       	add	r16, r18
    3cee:	13 1f       	adc	r17, r19
    3cf0:	89 91       	ld	r24, Y+
    3cf2:	0e 94 68 14 	call	0x28d0	; 0x28d0 <i2c_write>
    3cf6:	0c 17       	cp	r16, r28
    3cf8:	1d 07       	cpc	r17, r29
    3cfa:	d1 f7       	brne	.-12     	; 0x3cf0 <u8x8_byte_avr_hw_i2c+0x3a>
    3cfc:	81 e0       	ldi	r24, 0x01	; 1
    3cfe:	11 c0       	rjmp	.+34     	; 0x3d22 <u8x8_byte_avr_hw_i2c+0x6c>
    3d00:	0e 94 12 14 	call	0x2824	; 0x2824 <i2c_init>
    3d04:	81 e0       	ldi	r24, 0x01	; 1
    3d06:	0d c0       	rjmp	.+26     	; 0x3d22 <u8x8_byte_avr_hw_i2c+0x6c>
    3d08:	fc 01       	movw	r30, r24
    3d0a:	86 89       	ldd	r24, Z+22	; 0x16
    3d0c:	0e 94 18 14 	call	0x2830	; 0x2830 <i2c_start_wait>
    3d10:	81 e0       	ldi	r24, 0x01	; 1
    3d12:	07 c0       	rjmp	.+14     	; 0x3d22 <u8x8_byte_avr_hw_i2c+0x6c>
    3d14:	0e 94 58 14 	call	0x28b0	; 0x28b0 <i2c_stop>
    3d18:	81 e0       	ldi	r24, 0x01	; 1
    3d1a:	03 c0       	rjmp	.+6      	; 0x3d22 <u8x8_byte_avr_hw_i2c+0x6c>
    3d1c:	80 e0       	ldi	r24, 0x00	; 0
    3d1e:	01 c0       	rjmp	.+2      	; 0x3d22 <u8x8_byte_avr_hw_i2c+0x6c>
    3d20:	81 e0       	ldi	r24, 0x01	; 1
    3d22:	df 91       	pop	r29
    3d24:	cf 91       	pop	r28
    3d26:	1f 91       	pop	r17
    3d28:	0f 91       	pop	r16
    3d2a:	08 95       	ret

00003d2c <u8x8_avr_delay>:
    3d2c:	6a 32       	cpi	r22, 0x2A	; 42
    3d2e:	51 f0       	breq	.+20     	; 0x3d44 <u8x8_avr_delay+0x18>
    3d30:	18 f4       	brcc	.+6      	; 0x3d38 <u8x8_avr_delay+0xc>
    3d32:	69 32       	cpi	r22, 0x29	; 41
    3d34:	59 f0       	breq	.+22     	; 0x3d4c <u8x8_avr_delay+0x20>
    3d36:	33 c0       	rjmp	.+102    	; 0x3d9e <u8x8_avr_delay+0x72>
    3d38:	6b 32       	cpi	r22, 0x2B	; 43
    3d3a:	61 f0       	breq	.+24     	; 0x3d54 <u8x8_avr_delay+0x28>
    3d3c:	6c 32       	cpi	r22, 0x2C	; 44
    3d3e:	79 f5       	brne	.+94     	; 0x3d9e <u8x8_avr_delay+0x72>
    3d40:	81 e0       	ldi	r24, 0x01	; 1
    3d42:	08 95       	ret
    3d44:	41 11       	cpse	r20, r1
    3d46:	19 c0       	rjmp	.+50     	; 0x3d7a <u8x8_avr_delay+0x4e>
    3d48:	81 e0       	ldi	r24, 0x01	; 1
    3d4a:	08 95       	ret
    3d4c:	41 11       	cpse	r20, r1
    3d4e:	1d c0       	rjmp	.+58     	; 0x3d8a <u8x8_avr_delay+0x5e>
    3d50:	81 e0       	ldi	r24, 0x01	; 1
    3d52:	08 95       	ret
    3d54:	24 2f       	mov	r18, r20
    3d56:	30 e0       	ldi	r19, 0x00	; 0
    3d58:	a4 e6       	ldi	r26, 0x64	; 100
    3d5a:	b0 e0       	ldi	r27, 0x00	; 0
    3d5c:	0e 94 e3 25 	call	0x4bc6	; 0x4bc6 <__umulhisi3>
    3d60:	20 ea       	ldi	r18, 0xA0	; 160
    3d62:	3f e0       	ldi	r19, 0x0F	; 15
    3d64:	40 e0       	ldi	r20, 0x00	; 0
    3d66:	50 e0       	ldi	r21, 0x00	; 0
    3d68:	0e 94 c1 25 	call	0x4b82	; 0x4b82 <__udivmodsi4>
    3d6c:	23 32       	cpi	r18, 0x23	; 35
    3d6e:	c8 f4       	brcc	.+50     	; 0x3da2 <u8x8_avr_delay+0x76>
    3d70:	82 2f       	mov	r24, r18
    3d72:	01 97       	sbiw	r24, 0x01	; 1
    3d74:	f1 f7       	brne	.-4      	; 0x3d72 <u8x8_avr_delay+0x46>
    3d76:	81 e0       	ldi	r24, 0x01	; 1
    3d78:	08 95       	ret
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3d7a:	83 e0       	ldi	r24, 0x03	; 3
    3d7c:	8a 95       	dec	r24
    3d7e:	f1 f7       	brne	.-4      	; 0x3d7c <u8x8_avr_delay+0x50>
    3d80:	00 00       	nop
    3d82:	41 50       	subi	r20, 0x01	; 1
    3d84:	d1 f7       	brne	.-12     	; 0x3d7a <u8x8_avr_delay+0x4e>
    3d86:	81 e0       	ldi	r24, 0x01	; 1
    3d88:	08 95       	ret
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3d8a:	89 ef       	ldi	r24, 0xF9	; 249
    3d8c:	90 e0       	ldi	r25, 0x00	; 0
    3d8e:	01 97       	sbiw	r24, 0x01	; 1
    3d90:	f1 f7       	brne	.-4      	; 0x3d8e <u8x8_avr_delay+0x62>
    3d92:	00 c0       	rjmp	.+0      	; 0x3d94 <u8x8_avr_delay+0x68>
    3d94:	00 00       	nop
    3d96:	41 50       	subi	r20, 0x01	; 1
    3d98:	c1 f7       	brne	.-16     	; 0x3d8a <u8x8_avr_delay+0x5e>
    3d9a:	81 e0       	ldi	r24, 0x01	; 1
    3d9c:	08 95       	ret
    3d9e:	80 e0       	ldi	r24, 0x00	; 0
    3da0:	08 95       	ret
    3da2:	81 e0       	ldi	r24, 0x01	; 1
    3da4:	08 95       	ret

00003da6 <u8x8_byte_SendBytes>:
    3da6:	9a 01       	movw	r18, r20
    3da8:	dc 01       	movw	r26, r24
    3daa:	18 96       	adiw	r26, 0x08	; 8
    3dac:	ed 91       	ld	r30, X+
    3dae:	fc 91       	ld	r31, X
    3db0:	19 97       	sbiw	r26, 0x09	; 9
    3db2:	46 2f       	mov	r20, r22
    3db4:	67 e1       	ldi	r22, 0x17	; 23
    3db6:	09 95       	icall
    3db8:	08 95       	ret

00003dba <u8x8_byte_SendByte>:
    3dba:	cf 93       	push	r28
    3dbc:	df 93       	push	r29
    3dbe:	1f 92       	push	r1
    3dc0:	cd b7       	in	r28, 0x3d	; 61
    3dc2:	de b7       	in	r29, 0x3e	; 62
    3dc4:	69 83       	std	Y+1, r22	; 0x01
    3dc6:	ae 01       	movw	r20, r28
    3dc8:	4f 5f       	subi	r20, 0xFF	; 255
    3dca:	5f 4f       	sbci	r21, 0xFF	; 255
    3dcc:	61 e0       	ldi	r22, 0x01	; 1
    3dce:	0e 94 d3 1e 	call	0x3da6	; 0x3da6 <u8x8_byte_SendBytes>
    3dd2:	0f 90       	pop	r0
    3dd4:	df 91       	pop	r29
    3dd6:	cf 91       	pop	r28
    3dd8:	08 95       	ret

00003dda <u8x8_byte_StartTransfer>:
    3dda:	dc 01       	movw	r26, r24
    3ddc:	18 96       	adiw	r26, 0x08	; 8
    3dde:	ed 91       	ld	r30, X+
    3de0:	fc 91       	ld	r31, X
    3de2:	19 97       	sbiw	r26, 0x09	; 9
    3de4:	20 e0       	ldi	r18, 0x00	; 0
    3de6:	30 e0       	ldi	r19, 0x00	; 0
    3de8:	40 e0       	ldi	r20, 0x00	; 0
    3dea:	68 e1       	ldi	r22, 0x18	; 24
    3dec:	09 95       	icall
    3dee:	08 95       	ret

00003df0 <u8x8_byte_EndTransfer>:
    3df0:	dc 01       	movw	r26, r24
    3df2:	18 96       	adiw	r26, 0x08	; 8
    3df4:	ed 91       	ld	r30, X+
    3df6:	fc 91       	ld	r31, X
    3df8:	19 97       	sbiw	r26, 0x09	; 9
    3dfa:	20 e0       	ldi	r18, 0x00	; 0
    3dfc:	30 e0       	ldi	r19, 0x00	; 0
    3dfe:	40 e0       	ldi	r20, 0x00	; 0
    3e00:	69 e1       	ldi	r22, 0x19	; 25
    3e02:	09 95       	icall
    3e04:	08 95       	ret

00003e06 <u8x8_i2c_data_transfer>:
    3e06:	ef 92       	push	r14
    3e08:	ff 92       	push	r15
    3e0a:	1f 93       	push	r17
    3e0c:	cf 93       	push	r28
    3e0e:	df 93       	push	r29
    3e10:	ec 01       	movw	r28, r24
    3e12:	16 2f       	mov	r17, r22
    3e14:	7a 01       	movw	r14, r20
    3e16:	0e 94 ed 1e 	call	0x3dda	; 0x3dda <u8x8_byte_StartTransfer>
    3e1a:	60 e4       	ldi	r22, 0x40	; 64
    3e1c:	ce 01       	movw	r24, r28
    3e1e:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <u8x8_byte_SendByte>
    3e22:	e8 85       	ldd	r30, Y+8	; 0x08
    3e24:	f9 85       	ldd	r31, Y+9	; 0x09
    3e26:	97 01       	movw	r18, r14
    3e28:	41 2f       	mov	r20, r17
    3e2a:	67 e1       	ldi	r22, 0x17	; 23
    3e2c:	ce 01       	movw	r24, r28
    3e2e:	09 95       	icall
    3e30:	ce 01       	movw	r24, r28
    3e32:	0e 94 f8 1e 	call	0x3df0	; 0x3df0 <u8x8_byte_EndTransfer>
    3e36:	df 91       	pop	r29
    3e38:	cf 91       	pop	r28
    3e3a:	1f 91       	pop	r17
    3e3c:	ff 90       	pop	r15
    3e3e:	ef 90       	pop	r14
    3e40:	08 95       	ret

00003e42 <u8x8_cad_SendCmd>:
    3e42:	46 2f       	mov	r20, r22
    3e44:	dc 01       	movw	r26, r24
    3e46:	16 96       	adiw	r26, 0x06	; 6
    3e48:	ed 91       	ld	r30, X+
    3e4a:	fc 91       	ld	r31, X
    3e4c:	17 97       	sbiw	r26, 0x07	; 7
    3e4e:	20 e0       	ldi	r18, 0x00	; 0
    3e50:	30 e0       	ldi	r19, 0x00	; 0
    3e52:	65 e1       	ldi	r22, 0x15	; 21
    3e54:	09 95       	icall
    3e56:	08 95       	ret

00003e58 <u8x8_cad_SendArg>:
    3e58:	46 2f       	mov	r20, r22
    3e5a:	dc 01       	movw	r26, r24
    3e5c:	16 96       	adiw	r26, 0x06	; 6
    3e5e:	ed 91       	ld	r30, X+
    3e60:	fc 91       	ld	r31, X
    3e62:	17 97       	sbiw	r26, 0x07	; 7
    3e64:	20 e0       	ldi	r18, 0x00	; 0
    3e66:	30 e0       	ldi	r19, 0x00	; 0
    3e68:	66 e1       	ldi	r22, 0x16	; 22
    3e6a:	09 95       	icall
    3e6c:	08 95       	ret

00003e6e <u8x8_cad_SendData>:
    3e6e:	9a 01       	movw	r18, r20
    3e70:	dc 01       	movw	r26, r24
    3e72:	16 96       	adiw	r26, 0x06	; 6
    3e74:	ed 91       	ld	r30, X+
    3e76:	fc 91       	ld	r31, X
    3e78:	17 97       	sbiw	r26, 0x07	; 7
    3e7a:	46 2f       	mov	r20, r22
    3e7c:	67 e1       	ldi	r22, 0x17	; 23
    3e7e:	09 95       	icall
    3e80:	08 95       	ret

00003e82 <u8x8_cad_StartTransfer>:
    3e82:	dc 01       	movw	r26, r24
    3e84:	16 96       	adiw	r26, 0x06	; 6
    3e86:	ed 91       	ld	r30, X+
    3e88:	fc 91       	ld	r31, X
    3e8a:	17 97       	sbiw	r26, 0x07	; 7
    3e8c:	20 e0       	ldi	r18, 0x00	; 0
    3e8e:	30 e0       	ldi	r19, 0x00	; 0
    3e90:	40 e0       	ldi	r20, 0x00	; 0
    3e92:	68 e1       	ldi	r22, 0x18	; 24
    3e94:	09 95       	icall
    3e96:	08 95       	ret

00003e98 <u8x8_cad_EndTransfer>:
    3e98:	dc 01       	movw	r26, r24
    3e9a:	16 96       	adiw	r26, 0x06	; 6
    3e9c:	ed 91       	ld	r30, X+
    3e9e:	fc 91       	ld	r31, X
    3ea0:	17 97       	sbiw	r26, 0x07	; 7
    3ea2:	20 e0       	ldi	r18, 0x00	; 0
    3ea4:	30 e0       	ldi	r19, 0x00	; 0
    3ea6:	40 e0       	ldi	r20, 0x00	; 0
    3ea8:	69 e1       	ldi	r22, 0x19	; 25
    3eaa:	09 95       	icall
    3eac:	08 95       	ret

00003eae <u8x8_cad_SendSequence>:
    3eae:	ef 92       	push	r14
    3eb0:	ff 92       	push	r15
    3eb2:	0f 93       	push	r16
    3eb4:	1f 93       	push	r17
    3eb6:	cf 93       	push	r28
    3eb8:	df 93       	push	r29
    3eba:	1f 92       	push	r1
    3ebc:	cd b7       	in	r28, 0x3d	; 61
    3ebe:	de b7       	in	r29, 0x3e	; 62
    3ec0:	7c 01       	movw	r14, r24
    3ec2:	8b 01       	movw	r16, r22
    3ec4:	d8 01       	movw	r26, r16
    3ec6:	6c 91       	ld	r22, X
    3ec8:	67 31       	cpi	r22, 0x17	; 23
    3eca:	c1 f0       	breq	.+48     	; 0x3efc <u8x8_cad_SendSequence+0x4e>
    3ecc:	18 f4       	brcc	.+6      	; 0x3ed4 <u8x8_cad_SendSequence+0x26>
    3ece:	65 31       	cpi	r22, 0x15	; 21
    3ed0:	30 f4       	brcc	.+12     	; 0x3ede <u8x8_cad_SendSequence+0x30>
    3ed2:	38 c0       	rjmp	.+112    	; 0x3f44 <u8x8_cad_SendSequence+0x96>
    3ed4:	6a 31       	cpi	r22, 0x1A	; 26
    3ed6:	f8 f0       	brcs	.+62     	; 0x3f16 <u8x8_cad_SendSequence+0x68>
    3ed8:	6e 3f       	cpi	r22, 0xFE	; 254
    3eda:	51 f1       	breq	.+84     	; 0x3f30 <u8x8_cad_SendSequence+0x82>
    3edc:	33 c0       	rjmp	.+102    	; 0x3f44 <u8x8_cad_SendSequence+0x96>
    3ede:	f8 01       	movw	r30, r16
    3ee0:	41 81       	ldd	r20, Z+1	; 0x01
    3ee2:	49 83       	std	Y+1, r20	; 0x01
    3ee4:	d7 01       	movw	r26, r14
    3ee6:	16 96       	adiw	r26, 0x06	; 6
    3ee8:	ed 91       	ld	r30, X+
    3eea:	fc 91       	ld	r31, X
    3eec:	17 97       	sbiw	r26, 0x07	; 7
    3eee:	20 e0       	ldi	r18, 0x00	; 0
    3ef0:	30 e0       	ldi	r19, 0x00	; 0
    3ef2:	c7 01       	movw	r24, r14
    3ef4:	09 95       	icall
    3ef6:	0e 5f       	subi	r16, 0xFE	; 254
    3ef8:	1f 4f       	sbci	r17, 0xFF	; 255
    3efa:	e4 cf       	rjmp	.-56     	; 0x3ec4 <u8x8_cad_SendSequence+0x16>
    3efc:	f8 01       	movw	r30, r16
    3efe:	81 81       	ldd	r24, Z+1	; 0x01
    3f00:	89 83       	std	Y+1, r24	; 0x01
    3f02:	ae 01       	movw	r20, r28
    3f04:	4f 5f       	subi	r20, 0xFF	; 255
    3f06:	5f 4f       	sbci	r21, 0xFF	; 255
    3f08:	61 e0       	ldi	r22, 0x01	; 1
    3f0a:	c7 01       	movw	r24, r14
    3f0c:	0e 94 37 1f 	call	0x3e6e	; 0x3e6e <u8x8_cad_SendData>
    3f10:	0e 5f       	subi	r16, 0xFE	; 254
    3f12:	1f 4f       	sbci	r17, 0xFF	; 255
    3f14:	d7 cf       	rjmp	.-82     	; 0x3ec4 <u8x8_cad_SendSequence+0x16>
    3f16:	0f 5f       	subi	r16, 0xFF	; 255
    3f18:	1f 4f       	sbci	r17, 0xFF	; 255
    3f1a:	d7 01       	movw	r26, r14
    3f1c:	16 96       	adiw	r26, 0x06	; 6
    3f1e:	ed 91       	ld	r30, X+
    3f20:	fc 91       	ld	r31, X
    3f22:	17 97       	sbiw	r26, 0x07	; 7
    3f24:	20 e0       	ldi	r18, 0x00	; 0
    3f26:	30 e0       	ldi	r19, 0x00	; 0
    3f28:	40 e0       	ldi	r20, 0x00	; 0
    3f2a:	c7 01       	movw	r24, r14
    3f2c:	09 95       	icall
    3f2e:	ca cf       	rjmp	.-108    	; 0x3ec4 <u8x8_cad_SendSequence+0x16>
    3f30:	f8 01       	movw	r30, r16
    3f32:	41 81       	ldd	r20, Z+1	; 0x01
    3f34:	49 83       	std	Y+1, r20	; 0x01
    3f36:	69 e2       	ldi	r22, 0x29	; 41
    3f38:	c7 01       	movw	r24, r14
    3f3a:	0e 94 60 21 	call	0x42c0	; 0x42c0 <u8x8_gpio_call>
    3f3e:	0e 5f       	subi	r16, 0xFE	; 254
    3f40:	1f 4f       	sbci	r17, 0xFF	; 255
    3f42:	c0 cf       	rjmp	.-128    	; 0x3ec4 <u8x8_cad_SendSequence+0x16>
    3f44:	0f 90       	pop	r0
    3f46:	df 91       	pop	r29
    3f48:	cf 91       	pop	r28
    3f4a:	1f 91       	pop	r17
    3f4c:	0f 91       	pop	r16
    3f4e:	ff 90       	pop	r15
    3f50:	ef 90       	pop	r14
    3f52:	08 95       	ret

00003f54 <u8x8_cad_ssd13xx_fast_i2c>:
    3f54:	ef 92       	push	r14
    3f56:	ff 92       	push	r15
    3f58:	0f 93       	push	r16
    3f5a:	1f 93       	push	r17
    3f5c:	cf 93       	push	r28
    3f5e:	7c 01       	movw	r14, r24
    3f60:	c4 2f       	mov	r28, r20
    3f62:	89 01       	movw	r16, r18
    3f64:	66 31       	cpi	r22, 0x16	; 22
    3f66:	29 f1       	breq	.+74     	; 0x3fb2 <u8x8_cad_ssd13xx_fast_i2c+0x5e>
    3f68:	30 f4       	brcc	.+12     	; 0x3f76 <u8x8_cad_ssd13xx_fast_i2c+0x22>
    3f6a:	64 31       	cpi	r22, 0x14	; 20
    3f6c:	09 f4       	brne	.+2      	; 0x3f70 <u8x8_cad_ssd13xx_fast_i2c+0x1c>
    3f6e:	42 c0       	rjmp	.+132    	; 0x3ff4 <u8x8_cad_ssd13xx_fast_i2c+0xa0>
    3f70:	65 31       	cpi	r22, 0x15	; 21
    3f72:	49 f0       	breq	.+18     	; 0x3f86 <u8x8_cad_ssd13xx_fast_i2c+0x32>
    3f74:	62 c0       	rjmp	.+196    	; 0x403a <u8x8_cad_ssd13xx_fast_i2c+0xe6>
    3f76:	68 31       	cpi	r22, 0x18	; 24
    3f78:	09 f4       	brne	.+2      	; 0x3f7c <u8x8_cad_ssd13xx_fast_i2c+0x28>
    3f7a:	50 c0       	rjmp	.+160    	; 0x401c <u8x8_cad_ssd13xx_fast_i2c+0xc8>
    3f7c:	f8 f0       	brcs	.+62     	; 0x3fbc <u8x8_cad_ssd13xx_fast_i2c+0x68>
    3f7e:	69 31       	cpi	r22, 0x19	; 25
    3f80:	09 f4       	brne	.+2      	; 0x3f84 <u8x8_cad_ssd13xx_fast_i2c+0x30>
    3f82:	50 c0       	rjmp	.+160    	; 0x4024 <u8x8_cad_ssd13xx_fast_i2c+0xd0>
    3f84:	5a c0       	rjmp	.+180    	; 0x403a <u8x8_cad_ssd13xx_fast_i2c+0xe6>
    3f86:	80 91 b1 04 	lds	r24, 0x04B1	; 0x8004b1 <in_transfer.3298>
    3f8a:	88 23       	and	r24, r24
    3f8c:	19 f0       	breq	.+6      	; 0x3f94 <u8x8_cad_ssd13xx_fast_i2c+0x40>
    3f8e:	c7 01       	movw	r24, r14
    3f90:	0e 94 f8 1e 	call	0x3df0	; 0x3df0 <u8x8_byte_EndTransfer>
    3f94:	c7 01       	movw	r24, r14
    3f96:	0e 94 ed 1e 	call	0x3dda	; 0x3dda <u8x8_byte_StartTransfer>
    3f9a:	60 e0       	ldi	r22, 0x00	; 0
    3f9c:	c7 01       	movw	r24, r14
    3f9e:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <u8x8_byte_SendByte>
    3fa2:	6c 2f       	mov	r22, r28
    3fa4:	c7 01       	movw	r24, r14
    3fa6:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <u8x8_byte_SendByte>
    3faa:	81 e0       	ldi	r24, 0x01	; 1
    3fac:	80 93 b1 04 	sts	0x04B1, r24	; 0x8004b1 <in_transfer.3298>
    3fb0:	45 c0       	rjmp	.+138    	; 0x403c <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    3fb2:	64 2f       	mov	r22, r20
    3fb4:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <u8x8_byte_SendByte>
    3fb8:	81 e0       	ldi	r24, 0x01	; 1
    3fba:	40 c0       	rjmp	.+128    	; 0x403c <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    3fbc:	80 91 b1 04 	lds	r24, 0x04B1	; 0x8004b1 <in_transfer.3298>
    3fc0:	88 23       	and	r24, r24
    3fc2:	19 f0       	breq	.+6      	; 0x3fca <u8x8_cad_ssd13xx_fast_i2c+0x76>
    3fc4:	c7 01       	movw	r24, r14
    3fc6:	0e 94 f8 1e 	call	0x3df0	; 0x3df0 <u8x8_byte_EndTransfer>
    3fca:	c9 31       	cpi	r28, 0x19	; 25
    3fcc:	50 f0       	brcs	.+20     	; 0x3fe2 <u8x8_cad_ssd13xx_fast_i2c+0x8e>
    3fce:	a8 01       	movw	r20, r16
    3fd0:	68 e1       	ldi	r22, 0x18	; 24
    3fd2:	c7 01       	movw	r24, r14
    3fd4:	0e 94 03 1f 	call	0x3e06	; 0x3e06 <u8x8_i2c_data_transfer>
    3fd8:	c8 51       	subi	r28, 0x18	; 24
    3fda:	08 5e       	subi	r16, 0xE8	; 232
    3fdc:	1f 4f       	sbci	r17, 0xFF	; 255
    3fde:	c9 31       	cpi	r28, 0x19	; 25
    3fe0:	b0 f7       	brcc	.-20     	; 0x3fce <u8x8_cad_ssd13xx_fast_i2c+0x7a>
    3fe2:	a8 01       	movw	r20, r16
    3fe4:	6c 2f       	mov	r22, r28
    3fe6:	c7 01       	movw	r24, r14
    3fe8:	0e 94 03 1f 	call	0x3e06	; 0x3e06 <u8x8_i2c_data_transfer>
    3fec:	10 92 b1 04 	sts	0x04B1, r1	; 0x8004b1 <in_transfer.3298>
    3ff0:	81 e0       	ldi	r24, 0x01	; 1
    3ff2:	24 c0       	rjmp	.+72     	; 0x403c <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    3ff4:	dc 01       	movw	r26, r24
    3ff6:	56 96       	adiw	r26, 0x16	; 22
    3ff8:	8c 91       	ld	r24, X
    3ffa:	56 97       	sbiw	r26, 0x16	; 22
    3ffc:	8f 3f       	cpi	r24, 0xFF	; 255
    3ffe:	19 f4       	brne	.+6      	; 0x4006 <u8x8_cad_ssd13xx_fast_i2c+0xb2>
    4000:	88 e7       	ldi	r24, 0x78	; 120
    4002:	56 96       	adiw	r26, 0x16	; 22
    4004:	8c 93       	st	X, r24
    4006:	d7 01       	movw	r26, r14
    4008:	18 96       	adiw	r26, 0x08	; 8
    400a:	ed 91       	ld	r30, X+
    400c:	fc 91       	ld	r31, X
    400e:	19 97       	sbiw	r26, 0x09	; 9
    4010:	98 01       	movw	r18, r16
    4012:	4c 2f       	mov	r20, r28
    4014:	64 e1       	ldi	r22, 0x14	; 20
    4016:	c7 01       	movw	r24, r14
    4018:	09 95       	icall
    401a:	10 c0       	rjmp	.+32     	; 0x403c <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    401c:	10 92 b1 04 	sts	0x04B1, r1	; 0x8004b1 <in_transfer.3298>
    4020:	81 e0       	ldi	r24, 0x01	; 1
    4022:	0c c0       	rjmp	.+24     	; 0x403c <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    4024:	80 91 b1 04 	lds	r24, 0x04B1	; 0x8004b1 <in_transfer.3298>
    4028:	88 23       	and	r24, r24
    402a:	19 f0       	breq	.+6      	; 0x4032 <u8x8_cad_ssd13xx_fast_i2c+0xde>
    402c:	c7 01       	movw	r24, r14
    402e:	0e 94 f8 1e 	call	0x3df0	; 0x3df0 <u8x8_byte_EndTransfer>
    4032:	10 92 b1 04 	sts	0x04B1, r1	; 0x8004b1 <in_transfer.3298>
    4036:	81 e0       	ldi	r24, 0x01	; 1
    4038:	01 c0       	rjmp	.+2      	; 0x403c <u8x8_cad_ssd13xx_fast_i2c+0xe8>
    403a:	80 e0       	ldi	r24, 0x00	; 0
    403c:	cf 91       	pop	r28
    403e:	1f 91       	pop	r17
    4040:	0f 91       	pop	r16
    4042:	ff 90       	pop	r15
    4044:	ef 90       	pop	r14
    4046:	08 95       	ret

00004048 <u8x8_d_helper_display_setup_memory>:
    4048:	fc 01       	movw	r30, r24
    404a:	71 83       	std	Z+1, r23	; 0x01
    404c:	60 83       	st	Z, r22
    404e:	fb 01       	movw	r30, r22
    4050:	22 89       	ldd	r18, Z+18	; 0x12
    4052:	fc 01       	movw	r30, r24
    4054:	24 8b       	std	Z+20, r18	; 0x14
    4056:	08 95       	ret

00004058 <u8x8_d_helper_display_init>:
    4058:	cf 93       	push	r28
    405a:	df 93       	push	r29
    405c:	ec 01       	movw	r28, r24
    405e:	ea 85       	ldd	r30, Y+10	; 0x0a
    4060:	fb 85       	ldd	r31, Y+11	; 0x0b
    4062:	20 e0       	ldi	r18, 0x00	; 0
    4064:	30 e0       	ldi	r19, 0x00	; 0
    4066:	40 e0       	ldi	r20, 0x00	; 0
    4068:	68 e2       	ldi	r22, 0x28	; 40
    406a:	09 95       	icall
    406c:	ee 81       	ldd	r30, Y+6	; 0x06
    406e:	ff 81       	ldd	r31, Y+7	; 0x07
    4070:	20 e0       	ldi	r18, 0x00	; 0
    4072:	30 e0       	ldi	r19, 0x00	; 0
    4074:	40 e0       	ldi	r20, 0x00	; 0
    4076:	64 e1       	ldi	r22, 0x14	; 20
    4078:	ce 01       	movw	r24, r28
    407a:	09 95       	icall
    407c:	41 e0       	ldi	r20, 0x01	; 1
    407e:	6b e4       	ldi	r22, 0x4B	; 75
    4080:	ce 01       	movw	r24, r28
    4082:	0e 94 60 21 	call	0x42c0	; 0x42c0 <u8x8_gpio_call>
    4086:	e8 81       	ld	r30, Y
    4088:	f9 81       	ldd	r31, Y+1	; 0x01
    408a:	44 81       	ldd	r20, Z+4	; 0x04
    408c:	69 e2       	ldi	r22, 0x29	; 41
    408e:	ce 01       	movw	r24, r28
    4090:	0e 94 60 21 	call	0x42c0	; 0x42c0 <u8x8_gpio_call>
    4094:	40 e0       	ldi	r20, 0x00	; 0
    4096:	6b e4       	ldi	r22, 0x4B	; 75
    4098:	ce 01       	movw	r24, r28
    409a:	0e 94 60 21 	call	0x42c0	; 0x42c0 <u8x8_gpio_call>
    409e:	e8 81       	ld	r30, Y
    40a0:	f9 81       	ldd	r31, Y+1	; 0x01
    40a2:	44 81       	ldd	r20, Z+4	; 0x04
    40a4:	69 e2       	ldi	r22, 0x29	; 41
    40a6:	ce 01       	movw	r24, r28
    40a8:	0e 94 60 21 	call	0x42c0	; 0x42c0 <u8x8_gpio_call>
    40ac:	41 e0       	ldi	r20, 0x01	; 1
    40ae:	6b e4       	ldi	r22, 0x4B	; 75
    40b0:	ce 01       	movw	r24, r28
    40b2:	0e 94 60 21 	call	0x42c0	; 0x42c0 <u8x8_gpio_call>
    40b6:	e8 81       	ld	r30, Y
    40b8:	f9 81       	ldd	r31, Y+1	; 0x01
    40ba:	45 81       	ldd	r20, Z+5	; 0x05
    40bc:	69 e2       	ldi	r22, 0x29	; 41
    40be:	ce 01       	movw	r24, r28
    40c0:	0e 94 60 21 	call	0x42c0	; 0x42c0 <u8x8_gpio_call>
    40c4:	df 91       	pop	r29
    40c6:	cf 91       	pop	r28
    40c8:	08 95       	ret

000040ca <u8x8_DrawTile>:
    40ca:	0f 93       	push	r16
    40cc:	1f 93       	push	r17
    40ce:	cf 93       	push	r28
    40d0:	df 93       	push	r29
    40d2:	00 d0       	rcall	.+0      	; 0x40d4 <u8x8_DrawTile+0xa>
    40d4:	00 d0       	rcall	.+0      	; 0x40d6 <u8x8_DrawTile+0xc>
    40d6:	1f 92       	push	r1
    40d8:	cd b7       	in	r28, 0x3d	; 61
    40da:	de b7       	in	r29, 0x3e	; 62
    40dc:	6c 83       	std	Y+4, r22	; 0x04
    40de:	4d 83       	std	Y+5, r20	; 0x05
    40e0:	2b 83       	std	Y+3, r18	; 0x03
    40e2:	1a 83       	std	Y+2, r17	; 0x02
    40e4:	09 83       	std	Y+1, r16	; 0x01
    40e6:	dc 01       	movw	r26, r24
    40e8:	14 96       	adiw	r26, 0x04	; 4
    40ea:	ed 91       	ld	r30, X+
    40ec:	fc 91       	ld	r31, X
    40ee:	15 97       	sbiw	r26, 0x05	; 5
    40f0:	9e 01       	movw	r18, r28
    40f2:	2f 5f       	subi	r18, 0xFF	; 255
    40f4:	3f 4f       	sbci	r19, 0xFF	; 255
    40f6:	41 e0       	ldi	r20, 0x01	; 1
    40f8:	6f e0       	ldi	r22, 0x0F	; 15
    40fa:	09 95       	icall
    40fc:	0f 90       	pop	r0
    40fe:	0f 90       	pop	r0
    4100:	0f 90       	pop	r0
    4102:	0f 90       	pop	r0
    4104:	0f 90       	pop	r0
    4106:	df 91       	pop	r29
    4108:	cf 91       	pop	r28
    410a:	1f 91       	pop	r17
    410c:	0f 91       	pop	r16
    410e:	08 95       	ret

00004110 <u8x8_SetupMemory>:
    4110:	dc 01       	movw	r26, r24
    4112:	14 96       	adiw	r26, 0x04	; 4
    4114:	ed 91       	ld	r30, X+
    4116:	fc 91       	ld	r31, X
    4118:	15 97       	sbiw	r26, 0x05	; 5
    411a:	20 e0       	ldi	r18, 0x00	; 0
    411c:	30 e0       	ldi	r19, 0x00	; 0
    411e:	40 e0       	ldi	r20, 0x00	; 0
    4120:	69 e0       	ldi	r22, 0x09	; 9
    4122:	09 95       	icall
    4124:	08 95       	ret

00004126 <u8x8_InitDisplay>:
    4126:	dc 01       	movw	r26, r24
    4128:	14 96       	adiw	r26, 0x04	; 4
    412a:	ed 91       	ld	r30, X+
    412c:	fc 91       	ld	r31, X
    412e:	15 97       	sbiw	r26, 0x05	; 5
    4130:	20 e0       	ldi	r18, 0x00	; 0
    4132:	30 e0       	ldi	r19, 0x00	; 0
    4134:	40 e0       	ldi	r20, 0x00	; 0
    4136:	6a e0       	ldi	r22, 0x0A	; 10
    4138:	09 95       	icall
    413a:	08 95       	ret

0000413c <u8x8_SetPowerSave>:
    413c:	46 2f       	mov	r20, r22
    413e:	dc 01       	movw	r26, r24
    4140:	14 96       	adiw	r26, 0x04	; 4
    4142:	ed 91       	ld	r30, X+
    4144:	fc 91       	ld	r31, X
    4146:	15 97       	sbiw	r26, 0x05	; 5
    4148:	20 e0       	ldi	r18, 0x00	; 0
    414a:	30 e0       	ldi	r19, 0x00	; 0
    414c:	6b e0       	ldi	r22, 0x0B	; 11
    414e:	09 95       	icall
    4150:	08 95       	ret

00004152 <u8x8_RefreshDisplay>:
    4152:	dc 01       	movw	r26, r24
    4154:	14 96       	adiw	r26, 0x04	; 4
    4156:	ed 91       	ld	r30, X+
    4158:	fc 91       	ld	r31, X
    415a:	15 97       	sbiw	r26, 0x05	; 5
    415c:	20 e0       	ldi	r18, 0x00	; 0
    415e:	30 e0       	ldi	r19, 0x00	; 0
    4160:	40 e0       	ldi	r20, 0x00	; 0
    4162:	60 e1       	ldi	r22, 0x10	; 16
    4164:	09 95       	icall
    4166:	08 95       	ret

00004168 <u8x8_d_ssd1306_sh1106_generic>:
    4168:	ef 92       	push	r14
    416a:	ff 92       	push	r15
    416c:	0f 93       	push	r16
    416e:	1f 93       	push	r17
    4170:	cf 93       	push	r28
    4172:	df 93       	push	r29
    4174:	8c 01       	movw	r16, r24
    4176:	c4 2f       	mov	r28, r20
    4178:	79 01       	movw	r14, r18
    417a:	6d 30       	cpi	r22, 0x0D	; 13
    417c:	b9 f0       	breq	.+46     	; 0x41ac <u8x8_d_ssd1306_sh1106_generic+0x44>
    417e:	18 f4       	brcc	.+6      	; 0x4186 <u8x8_d_ssd1306_sh1106_generic+0x1e>
    4180:	6b 30       	cpi	r22, 0x0B	; 11
    4182:	31 f0       	breq	.+12     	; 0x4190 <u8x8_d_ssd1306_sh1106_generic+0x28>
    4184:	72 c0       	rjmp	.+228    	; 0x426a <u8x8_d_ssd1306_sh1106_generic+0x102>
    4186:	6e 30       	cpi	r22, 0x0E	; 14
    4188:	69 f1       	breq	.+90     	; 0x41e4 <u8x8_d_ssd1306_sh1106_generic+0x7c>
    418a:	6f 30       	cpi	r22, 0x0F	; 15
    418c:	d1 f1       	breq	.+116    	; 0x4202 <u8x8_d_ssd1306_sh1106_generic+0x9a>
    418e:	6d c0       	rjmp	.+218    	; 0x426a <u8x8_d_ssd1306_sh1106_generic+0x102>
    4190:	41 11       	cpse	r20, r1
    4192:	06 c0       	rjmp	.+12     	; 0x41a0 <u8x8_d_ssd1306_sh1106_generic+0x38>
    4194:	64 e9       	ldi	r22, 0x94	; 148
    4196:	72 e0       	ldi	r23, 0x02	; 2
    4198:	0e 94 57 1f 	call	0x3eae	; 0x3eae <u8x8_cad_SendSequence>
    419c:	81 e0       	ldi	r24, 0x01	; 1
    419e:	66 c0       	rjmp	.+204    	; 0x426c <u8x8_d_ssd1306_sh1106_generic+0x104>
    41a0:	6f e8       	ldi	r22, 0x8F	; 143
    41a2:	72 e0       	ldi	r23, 0x02	; 2
    41a4:	0e 94 57 1f 	call	0x3eae	; 0x3eae <u8x8_cad_SendSequence>
    41a8:	81 e0       	ldi	r24, 0x01	; 1
    41aa:	60 c0       	rjmp	.+192    	; 0x426c <u8x8_d_ssd1306_sh1106_generic+0x104>
    41ac:	41 11       	cpse	r20, r1
    41ae:	0d c0       	rjmp	.+26     	; 0x41ca <u8x8_d_ssd1306_sh1106_generic+0x62>
    41b0:	68 e8       	ldi	r22, 0x88	; 136
    41b2:	72 e0       	ldi	r23, 0x02	; 2
    41b4:	0e 94 57 1f 	call	0x3eae	; 0x3eae <u8x8_cad_SendSequence>
    41b8:	d8 01       	movw	r26, r16
    41ba:	ed 91       	ld	r30, X+
    41bc:	fc 91       	ld	r31, X
    41be:	11 97       	sbiw	r26, 0x01	; 1
    41c0:	82 89       	ldd	r24, Z+18	; 0x12
    41c2:	54 96       	adiw	r26, 0x14	; 20
    41c4:	8c 93       	st	X, r24
    41c6:	81 e0       	ldi	r24, 0x01	; 1
    41c8:	51 c0       	rjmp	.+162    	; 0x426c <u8x8_d_ssd1306_sh1106_generic+0x104>
    41ca:	61 e8       	ldi	r22, 0x81	; 129
    41cc:	72 e0       	ldi	r23, 0x02	; 2
    41ce:	0e 94 57 1f 	call	0x3eae	; 0x3eae <u8x8_cad_SendSequence>
    41d2:	d8 01       	movw	r26, r16
    41d4:	ed 91       	ld	r30, X+
    41d6:	fc 91       	ld	r31, X
    41d8:	11 97       	sbiw	r26, 0x01	; 1
    41da:	83 89       	ldd	r24, Z+19	; 0x13
    41dc:	54 96       	adiw	r26, 0x14	; 20
    41de:	8c 93       	st	X, r24
    41e0:	81 e0       	ldi	r24, 0x01	; 1
    41e2:	44 c0       	rjmp	.+136    	; 0x426c <u8x8_d_ssd1306_sh1106_generic+0x104>
    41e4:	0e 94 41 1f 	call	0x3e82	; 0x3e82 <u8x8_cad_StartTransfer>
    41e8:	61 e8       	ldi	r22, 0x81	; 129
    41ea:	c8 01       	movw	r24, r16
    41ec:	0e 94 21 1f 	call	0x3e42	; 0x3e42 <u8x8_cad_SendCmd>
    41f0:	6c 2f       	mov	r22, r28
    41f2:	c8 01       	movw	r24, r16
    41f4:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <u8x8_cad_SendArg>
    41f8:	c8 01       	movw	r24, r16
    41fa:	0e 94 4c 1f 	call	0x3e98	; 0x3e98 <u8x8_cad_EndTransfer>
    41fe:	81 e0       	ldi	r24, 0x01	; 1
    4200:	35 c0       	rjmp	.+106    	; 0x426c <u8x8_d_ssd1306_sh1106_generic+0x104>
    4202:	0e 94 41 1f 	call	0x3e82	; 0x3e82 <u8x8_cad_StartTransfer>
    4206:	f7 01       	movw	r30, r14
    4208:	d3 81       	ldd	r29, Z+3	; 0x03
    420a:	dd 0f       	add	r29, r29
    420c:	dd 0f       	add	r29, r29
    420e:	dd 0f       	add	r29, r29
    4210:	d8 01       	movw	r26, r16
    4212:	54 96       	adiw	r26, 0x14	; 20
    4214:	8c 91       	ld	r24, X
    4216:	d8 0f       	add	r29, r24
    4218:	60 e4       	ldi	r22, 0x40	; 64
    421a:	c8 01       	movw	r24, r16
    421c:	0e 94 21 1f 	call	0x3e42	; 0x3e42 <u8x8_cad_SendCmd>
    4220:	6d 2f       	mov	r22, r29
    4222:	62 95       	swap	r22
    4224:	6f 70       	andi	r22, 0x0F	; 15
    4226:	60 61       	ori	r22, 0x10	; 16
    4228:	c8 01       	movw	r24, r16
    422a:	0e 94 21 1f 	call	0x3e42	; 0x3e42 <u8x8_cad_SendCmd>
    422e:	6d 2f       	mov	r22, r29
    4230:	6f 70       	andi	r22, 0x0F	; 15
    4232:	c8 01       	movw	r24, r16
    4234:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <u8x8_cad_SendArg>
    4238:	f7 01       	movw	r30, r14
    423a:	64 81       	ldd	r22, Z+4	; 0x04
    423c:	60 6b       	ori	r22, 0xB0	; 176
    423e:	c8 01       	movw	r24, r16
    4240:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <u8x8_cad_SendArg>
    4244:	d7 01       	movw	r26, r14
    4246:	4d 91       	ld	r20, X+
    4248:	5c 91       	ld	r21, X
    424a:	11 97       	sbiw	r26, 0x01	; 1
    424c:	12 96       	adiw	r26, 0x02	; 2
    424e:	6c 91       	ld	r22, X
    4250:	66 0f       	add	r22, r22
    4252:	66 0f       	add	r22, r22
    4254:	66 0f       	add	r22, r22
    4256:	c8 01       	movw	r24, r16
    4258:	0e 94 37 1f 	call	0x3e6e	; 0x3e6e <u8x8_cad_SendData>
    425c:	c1 50       	subi	r28, 0x01	; 1
    425e:	91 f7       	brne	.-28     	; 0x4244 <u8x8_d_ssd1306_sh1106_generic+0xdc>
    4260:	c8 01       	movw	r24, r16
    4262:	0e 94 4c 1f 	call	0x3e98	; 0x3e98 <u8x8_cad_EndTransfer>
    4266:	81 e0       	ldi	r24, 0x01	; 1
    4268:	01 c0       	rjmp	.+2      	; 0x426c <u8x8_d_ssd1306_sh1106_generic+0x104>
    426a:	80 e0       	ldi	r24, 0x00	; 0
    426c:	df 91       	pop	r29
    426e:	cf 91       	pop	r28
    4270:	1f 91       	pop	r17
    4272:	0f 91       	pop	r16
    4274:	ff 90       	pop	r15
    4276:	ef 90       	pop	r14
    4278:	08 95       	ret

0000427a <u8x8_d_ssd1306_128x64_noname>:
    427a:	0f 93       	push	r16
    427c:	1f 93       	push	r17
    427e:	cf 93       	push	r28
    4280:	8c 01       	movw	r16, r24
    4282:	c6 2f       	mov	r28, r22
    4284:	0e 94 b4 20 	call	0x4168	; 0x4168 <u8x8_d_ssd1306_sh1106_generic>
    4288:	81 11       	cpse	r24, r1
    428a:	15 c0       	rjmp	.+42     	; 0x42b6 <u8x8_d_ssd1306_128x64_noname+0x3c>
    428c:	c9 30       	cpi	r28, 0x09	; 9
    428e:	61 f0       	breq	.+24     	; 0x42a8 <u8x8_d_ssd1306_128x64_noname+0x2e>
    4290:	ca 30       	cpi	r28, 0x0A	; 10
    4292:	91 f4       	brne	.+36     	; 0x42b8 <u8x8_d_ssd1306_128x64_noname+0x3e>
    4294:	c8 01       	movw	r24, r16
    4296:	0e 94 2c 20 	call	0x4058	; 0x4058 <u8x8_d_helper_display_init>
    429a:	69 e9       	ldi	r22, 0x99	; 153
    429c:	72 e0       	ldi	r23, 0x02	; 2
    429e:	c8 01       	movw	r24, r16
    42a0:	0e 94 57 1f 	call	0x3eae	; 0x3eae <u8x8_cad_SendSequence>
    42a4:	81 e0       	ldi	r24, 0x01	; 1
    42a6:	08 c0       	rjmp	.+16     	; 0x42b8 <u8x8_d_ssd1306_128x64_noname+0x3e>
    42a8:	69 e6       	ldi	r22, 0x69	; 105
    42aa:	72 e0       	ldi	r23, 0x02	; 2
    42ac:	c8 01       	movw	r24, r16
    42ae:	0e 94 24 20 	call	0x4048	; 0x4048 <u8x8_d_helper_display_setup_memory>
    42b2:	81 e0       	ldi	r24, 0x01	; 1
    42b4:	01 c0       	rjmp	.+2      	; 0x42b8 <u8x8_d_ssd1306_128x64_noname+0x3e>
    42b6:	81 e0       	ldi	r24, 0x01	; 1
    42b8:	cf 91       	pop	r28
    42ba:	1f 91       	pop	r17
    42bc:	0f 91       	pop	r16
    42be:	08 95       	ret

000042c0 <u8x8_gpio_call>:
    42c0:	dc 01       	movw	r26, r24
    42c2:	1a 96       	adiw	r26, 0x0a	; 10
    42c4:	ed 91       	ld	r30, X+
    42c6:	fc 91       	ld	r31, X
    42c8:	1b 97       	sbiw	r26, 0x0b	; 11
    42ca:	20 e0       	ldi	r18, 0x00	; 0
    42cc:	30 e0       	ldi	r19, 0x00	; 0
    42ce:	09 95       	icall
    42d0:	08 95       	ret

000042d2 <u8x8_dummy_cb>:
    42d2:	80 e0       	ldi	r24, 0x00	; 0
    42d4:	08 95       	ret

000042d6 <u8x8_SetupDefaults>:
    42d6:	fc 01       	movw	r30, r24
    42d8:	11 82       	std	Z+1, r1	; 0x01
    42da:	10 82       	st	Z, r1
    42dc:	89 e6       	ldi	r24, 0x69	; 105
    42de:	91 e2       	ldi	r25, 0x21	; 33
    42e0:	95 83       	std	Z+5, r25	; 0x05
    42e2:	84 83       	std	Z+4, r24	; 0x04
    42e4:	97 83       	std	Z+7, r25	; 0x07
    42e6:	86 83       	std	Z+6, r24	; 0x06
    42e8:	91 87       	std	Z+9, r25	; 0x09
    42ea:	80 87       	std	Z+8, r24	; 0x08
    42ec:	93 87       	std	Z+11, r25	; 0x0b
    42ee:	82 87       	std	Z+10, r24	; 0x0a
    42f0:	15 8a       	std	Z+21, r1	; 0x15
    42f2:	10 8e       	std	Z+24, r1	; 0x18
    42f4:	14 86       	std	Z+12, r1	; 0x0c
    42f6:	15 86       	std	Z+13, r1	; 0x0d
    42f8:	16 86       	std	Z+14, r1	; 0x0e
    42fa:	17 86       	std	Z+15, r1	; 0x0f
    42fc:	8f ef       	ldi	r24, 0xFF	; 255
    42fe:	86 8b       	std	Z+22, r24	; 0x16
    4300:	82 8f       	std	Z+26, r24	; 0x1a
    4302:	08 95       	ret

00004304 <u8x8_Setup>:
    4304:	af 92       	push	r10
    4306:	bf 92       	push	r11
    4308:	cf 92       	push	r12
    430a:	df 92       	push	r13
    430c:	ef 92       	push	r14
    430e:	ff 92       	push	r15
    4310:	0f 93       	push	r16
    4312:	1f 93       	push	r17
    4314:	cf 93       	push	r28
    4316:	df 93       	push	r29
    4318:	ec 01       	movw	r28, r24
    431a:	5b 01       	movw	r10, r22
    431c:	6a 01       	movw	r12, r20
    431e:	79 01       	movw	r14, r18
    4320:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <u8x8_SetupDefaults>
    4324:	bd 82       	std	Y+5, r11	; 0x05
    4326:	ac 82       	std	Y+4, r10	; 0x04
    4328:	df 82       	std	Y+7, r13	; 0x07
    432a:	ce 82       	std	Y+6, r12	; 0x06
    432c:	f9 86       	std	Y+9, r15	; 0x09
    432e:	e8 86       	std	Y+8, r14	; 0x08
    4330:	1b 87       	std	Y+11, r17	; 0x0b
    4332:	0a 87       	std	Y+10, r16	; 0x0a
    4334:	ce 01       	movw	r24, r28
    4336:	0e 94 88 20 	call	0x4110	; 0x4110 <u8x8_SetupMemory>
    433a:	df 91       	pop	r29
    433c:	cf 91       	pop	r28
    433e:	1f 91       	pop	r17
    4340:	0f 91       	pop	r16
    4342:	ff 90       	pop	r15
    4344:	ef 90       	pop	r14
    4346:	df 90       	pop	r13
    4348:	cf 90       	pop	r12
    434a:	bf 90       	pop	r11
    434c:	af 90       	pop	r10
    434e:	08 95       	ret

00004350 <USART_Init>:
	USART_Init(9600);						/* initialize USART with 9600 baud rate */
}

void USART_Init(unsigned long BAUDRATE)				/* USART initialize function */
{
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);				/* Enable USART transmitter and receiver */
    4350:	e1 ec       	ldi	r30, 0xC1	; 193
    4352:	f0 e0       	ldi	r31, 0x00	; 0
    4354:	20 81       	ld	r18, Z
    4356:	28 61       	ori	r18, 0x18	; 24
    4358:	20 83       	st	Z, r18
	UCSR0C |= (1 << UCPOL0)| (1 << UCSZ00) | (1 << UCSZ01);	/* Write USCRC for 8 bit data and 1 stop bit */
    435a:	e2 ec       	ldi	r30, 0xC2	; 194
    435c:	f0 e0       	ldi	r31, 0x00	; 0
    435e:	20 81       	ld	r18, Z
    4360:	27 60       	ori	r18, 0x07	; 7
    4362:	20 83       	st	Z, r18
	UBRR0L = BAUD_PRESCALE;							/* Load UBRRL with lower 8 bit of prescale value */
    4364:	dc 01       	movw	r26, r24
    4366:	cb 01       	movw	r24, r22
    4368:	88 0f       	add	r24, r24
    436a:	99 1f       	adc	r25, r25
    436c:	aa 1f       	adc	r26, r26
    436e:	bb 1f       	adc	r27, r27
    4370:	88 0f       	add	r24, r24
    4372:	99 1f       	adc	r25, r25
    4374:	aa 1f       	adc	r26, r26
    4376:	bb 1f       	adc	r27, r27
    4378:	9c 01       	movw	r18, r24
    437a:	ad 01       	movw	r20, r26
    437c:	22 0f       	add	r18, r18
    437e:	33 1f       	adc	r19, r19
    4380:	44 1f       	adc	r20, r20
    4382:	55 1f       	adc	r21, r21
    4384:	22 0f       	add	r18, r18
    4386:	33 1f       	adc	r19, r19
    4388:	44 1f       	adc	r20, r20
    438a:	55 1f       	adc	r21, r21
    438c:	60 e0       	ldi	r22, 0x00	; 0
    438e:	74 e2       	ldi	r23, 0x24	; 36
    4390:	84 ef       	ldi	r24, 0xF4	; 244
    4392:	90 e0       	ldi	r25, 0x00	; 0
    4394:	0e 94 c1 25 	call	0x4b82	; 0x4b82 <__udivmodsi4>
    4398:	8f ef       	ldi	r24, 0xFF	; 255
    439a:	82 0f       	add	r24, r18
    439c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UBRR0H = (BAUD_PRESCALE >> 8);					/* Load UBRRH with upper 8 bit of prescale value */
    43a0:	da 01       	movw	r26, r20
    43a2:	c9 01       	movw	r24, r18
    43a4:	01 97       	sbiw	r24, 0x01	; 1
    43a6:	a1 09       	sbc	r26, r1
    43a8:	b1 09       	sbc	r27, r1
    43aa:	89 2f       	mov	r24, r25
    43ac:	9a 2f       	mov	r25, r26
    43ae:	ab 2f       	mov	r26, r27
    43b0:	bb 27       	eor	r27, r27
    43b2:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    43b6:	08 95       	ret

000043b8 <initBluetooth>:
int *pSettings_BL;


int result;
void initBluetooth(int *SettingsHold){
	pSettings_BL = SettingsHold;
    43b8:	90 93 7d 05 	sts	0x057D, r25	; 0x80057d <pSettings_BL+0x1>
    43bc:	80 93 7c 05 	sts	0x057C, r24	; 0x80057c <pSettings_BL>
	
	PCICR |= (1<<PCIE2);
    43c0:	e8 e6       	ldi	r30, 0x68	; 104
    43c2:	f0 e0       	ldi	r31, 0x00	; 0
    43c4:	80 81       	ld	r24, Z
    43c6:	84 60       	ori	r24, 0x04	; 4
    43c8:	80 83       	st	Z, r24
	PCMSK2 |= (1<<PCINT16);
    43ca:	ed e6       	ldi	r30, 0x6D	; 109
    43cc:	f0 e0       	ldi	r31, 0x00	; 0
    43ce:	80 81       	ld	r24, Z
    43d0:	81 60       	ori	r24, 0x01	; 1
    43d2:	80 83       	st	Z, r24
	
	USART_Init(9600);						/* initialize USART with 9600 baud rate */
    43d4:	60 e8       	ldi	r22, 0x80	; 128
    43d6:	75 e2       	ldi	r23, 0x25	; 37
    43d8:	80 e0       	ldi	r24, 0x00	; 0
    43da:	90 e0       	ldi	r25, 0x00	; 0
    43dc:	0e 94 a8 21 	call	0x4350	; 0x4350 <USART_Init>
    43e0:	08 95       	ret

000043e2 <USART_RxChar>:
	UBRR0H = (BAUD_PRESCALE >> 8);					/* Load UBRRH with upper 8 bit of prescale value */
}

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSR0A & (1 << RXC0)));					/* Wait until new data receive */
    43e2:	e0 ec       	ldi	r30, 0xC0	; 192
    43e4:	f0 e0       	ldi	r31, 0x00	; 0
    43e6:	80 81       	ld	r24, Z
    43e8:	88 23       	and	r24, r24
    43ea:	ec f7       	brge	.-6      	; 0x43e6 <USART_RxChar+0x4>
	return(UDR0);									/* Get and return received data */
    43ec:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
    43f0:	08 95       	ret

000043f2 <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR0 = data;										/* Write data to be transmitting in UDR */
    43f2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	while (!(UCSR0A & (1<<UDRE0)));					/* Wait until data transmit and buffer get empty */
    43f6:	e0 ec       	ldi	r30, 0xC0	; 192
    43f8:	f0 e0       	ldi	r31, 0x00	; 0
    43fa:	80 81       	ld	r24, Z
    43fc:	85 ff       	sbrs	r24, 5
    43fe:	fd cf       	rjmp	.-6      	; 0x43fa <USART_TxChar+0x8>
}
    4400:	08 95       	ret

00004402 <USART_ReceiveString>:
* the function returns.
* - The array is terminated with ?\0?.
*/

void USART_ReceiveString(char *str)
{
    4402:	ef 92       	push	r14
    4404:	ff 92       	push	r15
    4406:	0f 93       	push	r16
    4408:	1f 93       	push	r17
    440a:	cf 93       	push	r28
    440c:	7c 01       	movw	r14, r24
	uint8_t t = 0;
    440e:	c0 e0       	ldi	r28, 0x00	; 0

	while ((str[t] = USART_RxChar()) != '\n')
    4410:	01 c0       	rjmp	.+2      	; 0x4414 <USART_ReceiveString+0x12>
	{
		t++;
    4412:	cf 5f       	subi	r28, 0xFF	; 255

void USART_ReceiveString(char *str)
{
	uint8_t t = 0;

	while ((str[t] = USART_RxChar()) != '\n')
    4414:	87 01       	movw	r16, r14
    4416:	0c 0f       	add	r16, r28
    4418:	11 1d       	adc	r17, r1
    441a:	0e 94 f1 21 	call	0x43e2	; 0x43e2 <USART_RxChar>
    441e:	f8 01       	movw	r30, r16
    4420:	80 83       	st	Z, r24
    4422:	8a 30       	cpi	r24, 0x0A	; 10
    4424:	b1 f7       	brne	.-20     	; 0x4412 <USART_ReceiveString+0x10>
	{
		t++;
	}
	str[t] = '\0';
    4426:	10 82       	st	Z, r1
}
    4428:	cf 91       	pop	r28
    442a:	1f 91       	pop	r17
    442c:	0f 91       	pop	r16
    442e:	ff 90       	pop	r15
    4430:	ef 90       	pop	r14
    4432:	08 95       	ret

00004434 <USART_SendString>:

void USART_SendString(char *str)									/* Send string of USART data function */
{
    4434:	cf 93       	push	r28
    4436:	df 93       	push	r29
    4438:	ec 01       	movw	r28, r24
	int i=0;
	while (str[i]!=0)
    443a:	88 81       	ld	r24, Y
    443c:	88 23       	and	r24, r24
    443e:	31 f0       	breq	.+12     	; 0x444c <USART_SendString+0x18>
    4440:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_TxChar(str[i]);										/* Send each char of string till the NULL */
    4442:	0e 94 f9 21 	call	0x43f2	; 0x43f2 <USART_TxChar>
}

void USART_SendString(char *str)									/* Send string of USART data function */
{
	int i=0;
	while (str[i]!=0)
    4446:	89 91       	ld	r24, Y+
    4448:	81 11       	cpse	r24, r1
    444a:	fb cf       	rjmp	.-10     	; 0x4442 <USART_SendString+0xe>
	{
		USART_TxChar(str[i]);										/* Send each char of string till the NULL */
		i++;
	}
}
    444c:	df 91       	pop	r29
    444e:	cf 91       	pop	r28
    4450:	08 95       	ret

00004452 <USART_BluetoothChanger>:

void USART_BluetoothChanger(char Data_in[BL_BUFFERSIZE]){			/* When certain values are received the car does something*/
    4452:	ef 92       	push	r14
    4454:	ff 92       	push	r15
    4456:	0f 93       	push	r16
    4458:	1f 93       	push	r17
    445a:	cf 93       	push	r28
    445c:	df 93       	push	r29
    445e:	cd b7       	in	r28, 0x3d	; 61
    4460:	de b7       	in	r29, 0x3e	; 62
    4462:	2a 97       	sbiw	r28, 0x0a	; 10
    4464:	0f b6       	in	r0, 0x3f	; 63
    4466:	f8 94       	cli
    4468:	de bf       	out	0x3e, r29	; 62
    446a:	0f be       	out	0x3f, r0	; 63
    446c:	cd bf       	out	0x3d, r28	; 61
    446e:	8c 01       	movw	r16, r24
	
	if(strcmp(Data_in, BL_LED_ON) == 0)
    4470:	63 ed       	ldi	r22, 0xD3	; 211
    4472:	72 e0       	ldi	r23, 0x02	; 2
    4474:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    4478:	89 2b       	or	r24, r25
    447a:	29 f4       	brne	.+10     	; 0x4486 <USART_BluetoothChanger+0x34>
	{
		/* Turn ON LED */
		USART_SendString("LED4_ON");								/* send status of LED i.e. LED ON */
    447c:	8e ec       	ldi	r24, 0xCE	; 206
    447e:	92 e0       	ldi	r25, 0x02	; 2
    4480:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    4484:	d1 c0       	rjmp	.+418    	; 0x4628 <USART_BluetoothChanger+0x1d6>
		
	}
	else if(strcmp(Data_in, BL_LED_OFF) == 0)
    4486:	6b ed       	ldi	r22, 0xDB	; 219
    4488:	72 e0       	ldi	r23, 0x02	; 2
    448a:	c8 01       	movw	r24, r16
    448c:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    4490:	89 2b       	or	r24, r25
    4492:	29 f4       	brne	.+10     	; 0x449e <USART_BluetoothChanger+0x4c>
	{
		/* Turn OFF LED */
		USART_SendString("LED4_OFF"); 								/* send status of LED i.e. LED OFF */
    4494:	86 ed       	ldi	r24, 0xD6	; 214
    4496:	92 e0       	ldi	r25, 0x02	; 2
    4498:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    449c:	c5 c0       	rjmp	.+394    	; 0x4628 <USART_BluetoothChanger+0x1d6>
	}
	else if(strcmp(Data_in, BL_FORWARD) == 0)
    449e:	6f ed       	ldi	r22, 0xDF	; 223
    44a0:	72 e0       	ldi	r23, 0x02	; 2
    44a2:	c8 01       	movw	r24, r16
    44a4:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    44a8:	89 2b       	or	r24, r25
    44aa:	29 f4       	brne	.+10     	; 0x44b6 <USART_BluetoothChanger+0x64>
	{
		/* Turn OFF LED */
		USART_SendString("Driving forwards"); 						/* send status of LED i.e. LED OFF */
    44ac:	87 ee       	ldi	r24, 0xE7	; 231
    44ae:	92 e0       	ldi	r25, 0x02	; 2
    44b0:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    44b4:	b9 c0       	rjmp	.+370    	; 0x4628 <USART_BluetoothChanger+0x1d6>
	}
	else if(strcmp(Data_in, BL_BACKWARD) == 0)
    44b6:	68 ef       	ldi	r22, 0xF8	; 248
    44b8:	72 e0       	ldi	r23, 0x02	; 2
    44ba:	c8 01       	movw	r24, r16
    44bc:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    44c0:	89 2b       	or	r24, r25
    44c2:	29 f4       	brne	.+10     	; 0x44ce <USART_BluetoothChanger+0x7c>
	{
		USART_SendString("Driving backwards"); 						/* send status of LED i.e. LED OFF */
    44c4:	81 e0       	ldi	r24, 0x01	; 1
    44c6:	93 e0       	ldi	r25, 0x03	; 3
    44c8:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    44cc:	ad c0       	rjmp	.+346    	; 0x4628 <USART_BluetoothChanger+0x1d6>
	}
	else if(strcmp(Data_in, BL_LEFT) == 0)
    44ce:	63 e1       	ldi	r22, 0x13	; 19
    44d0:	73 e0       	ldi	r23, 0x03	; 3
    44d2:	c8 01       	movw	r24, r16
    44d4:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    44d8:	89 2b       	or	r24, r25
    44da:	29 f4       	brne	.+10     	; 0x44e6 <USART_BluetoothChanger+0x94>
	{
		USART_SendString("Steering Left"); 							/* send status of LED i.e. LED OFF */
    44dc:	88 e1       	ldi	r24, 0x18	; 24
    44de:	93 e0       	ldi	r25, 0x03	; 3
    44e0:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    44e4:	a1 c0       	rjmp	.+322    	; 0x4628 <USART_BluetoothChanger+0x1d6>
	}
	else if(strcmp(Data_in, BL_RIGHT) == 0)
    44e6:	66 e2       	ldi	r22, 0x26	; 38
    44e8:	73 e0       	ldi	r23, 0x03	; 3
    44ea:	c8 01       	movw	r24, r16
    44ec:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    44f0:	89 2b       	or	r24, r25
    44f2:	29 f4       	brne	.+10     	; 0x44fe <USART_BluetoothChanger+0xac>
	{
		USART_SendString("Steering Right"); 						/* send status of LED i.e. LED OFF */
    44f4:	8c e2       	ldi	r24, 0x2C	; 44
    44f6:	93 e0       	ldi	r25, 0x03	; 3
    44f8:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    44fc:	95 c0       	rjmp	.+298    	; 0x4628 <USART_BluetoothChanger+0x1d6>
	}
	else if(strcmp(Data_in, BL_ModeUp) == 0)
    44fe:	6b e3       	ldi	r22, 0x3B	; 59
    4500:	73 e0       	ldi	r23, 0x03	; 3
    4502:	c8 01       	movw	r24, r16
    4504:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    4508:	89 2b       	or	r24, r25
    450a:	f9 f4       	brne	.+62     	; 0x454a <USART_BluetoothChanger+0xf8>
	{
		*(pSettings_BL+0) += 1;
    450c:	e0 91 7c 05 	lds	r30, 0x057C	; 0x80057c <pSettings_BL>
    4510:	f0 91 7d 05 	lds	r31, 0x057D	; 0x80057d <pSettings_BL+0x1>
    4514:	80 81       	ld	r24, Z
    4516:	91 81       	ldd	r25, Z+1	; 0x01
    4518:	01 96       	adiw	r24, 0x01	; 1
    451a:	91 83       	std	Z+1, r25	; 0x01
    451c:	80 83       	st	Z, r24
		char text[8];
		USART_SendString("Mode Up:> "); 						/* send status of LED i.e. LED OFF */
    451e:	82 e4       	ldi	r24, 0x42	; 66
    4520:	93 e0       	ldi	r25, 0x03	; 3
    4522:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
		itoa(*(pSettings_BL+0), text, 10);
    4526:	e0 91 7c 05 	lds	r30, 0x057C	; 0x80057c <pSettings_BL>
    452a:	f0 91 7d 05 	lds	r31, 0x057D	; 0x80057d <pSettings_BL+0x1>
    452e:	4a e0       	ldi	r20, 0x0A	; 10
    4530:	50 e0       	ldi	r21, 0x00	; 0
    4532:	be 01       	movw	r22, r28
    4534:	6f 5f       	subi	r22, 0xFF	; 255
    4536:	7f 4f       	sbci	r23, 0xFF	; 255
    4538:	80 81       	ld	r24, Z
    453a:	91 81       	ldd	r25, Z+1	; 0x01
    453c:	0e 94 0d 26 	call	0x4c1a	; 0x4c1a <itoa>
		USART_SendString(text);
    4540:	ce 01       	movw	r24, r28
    4542:	01 96       	adiw	r24, 0x01	; 1
    4544:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    4548:	6f c0       	rjmp	.+222    	; 0x4628 <USART_BluetoothChanger+0x1d6>
		
	}
	else if(strcmp(Data_in, BL_ModeDown) == 0)
    454a:	6d e4       	ldi	r22, 0x4D	; 77
    454c:	73 e0       	ldi	r23, 0x03	; 3
    454e:	c8 01       	movw	r24, r16
    4550:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    4554:	89 2b       	or	r24, r25
    4556:	f9 f4       	brne	.+62     	; 0x4596 <USART_BluetoothChanger+0x144>
	{
		*(pSettings_BL+0) -= 1;
    4558:	e0 91 7c 05 	lds	r30, 0x057C	; 0x80057c <pSettings_BL>
    455c:	f0 91 7d 05 	lds	r31, 0x057D	; 0x80057d <pSettings_BL+0x1>
    4560:	80 81       	ld	r24, Z
    4562:	91 81       	ldd	r25, Z+1	; 0x01
    4564:	01 97       	sbiw	r24, 0x01	; 1
    4566:	91 83       	std	Z+1, r25	; 0x01
    4568:	80 83       	st	Z, r24
		char text[8];
		USART_SendString("Mode down:> "); 						/* send status of LED i.e. LED OFF */
    456a:	86 e5       	ldi	r24, 0x56	; 86
    456c:	93 e0       	ldi	r25, 0x03	; 3
    456e:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
		itoa(*(pSettings_BL+0), text, 10);
    4572:	e0 91 7c 05 	lds	r30, 0x057C	; 0x80057c <pSettings_BL>
    4576:	f0 91 7d 05 	lds	r31, 0x057D	; 0x80057d <pSettings_BL+0x1>
    457a:	4a e0       	ldi	r20, 0x0A	; 10
    457c:	50 e0       	ldi	r21, 0x00	; 0
    457e:	be 01       	movw	r22, r28
    4580:	6f 5f       	subi	r22, 0xFF	; 255
    4582:	7f 4f       	sbci	r23, 0xFF	; 255
    4584:	80 81       	ld	r24, Z
    4586:	91 81       	ldd	r25, Z+1	; 0x01
    4588:	0e 94 0d 26 	call	0x4c1a	; 0x4c1a <itoa>
		USART_SendString(text);
    458c:	ce 01       	movw	r24, r28
    458e:	01 96       	adiw	r24, 0x01	; 1
    4590:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
    4594:	49 c0       	rjmp	.+146    	; 0x4628 <USART_BluetoothChanger+0x1d6>
		
	}
	else if(strcmp(Data_in, BL_Mode0) == 0)
    4596:	63 e6       	ldi	r22, 0x63	; 99
    4598:	73 e0       	ldi	r23, 0x03	; 3
    459a:	c8 01       	movw	r24, r16
    459c:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    45a0:	89 2b       	or	r24, r25
    45a2:	59 f4       	brne	.+22     	; 0x45ba <USART_BluetoothChanger+0x168>
	{
		USART_SendString("Mode 0"); 						/* send status of LED i.e. LED OFF */
    45a4:	89 e6       	ldi	r24, 0x69	; 105
    45a6:	93 e0       	ldi	r25, 0x03	; 3
    45a8:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
		*(pSettings_BL+0) = 0;
    45ac:	e0 91 7c 05 	lds	r30, 0x057C	; 0x80057c <pSettings_BL>
    45b0:	f0 91 7d 05 	lds	r31, 0x057D	; 0x80057d <pSettings_BL+0x1>
    45b4:	11 82       	std	Z+1, r1	; 0x01
    45b6:	10 82       	st	Z, r1
    45b8:	37 c0       	rjmp	.+110    	; 0x4628 <USART_BluetoothChanger+0x1d6>
	}
	else if(strcmp(Data_in, BL_Mode1) == 0)
    45ba:	60 e7       	ldi	r22, 0x70	; 112
    45bc:	73 e0       	ldi	r23, 0x03	; 3
    45be:	c8 01       	movw	r24, r16
    45c0:	0e 94 04 26 	call	0x4c08	; 0x4c08 <strcmp>
    45c4:	89 2b       	or	r24, r25
    45c6:	69 f4       	brne	.+26     	; 0x45e2 <USART_BluetoothChanger+0x190>
	{
		USART_SendString("Mode 1"); 						/* send status of LED i.e. LED OFF */
    45c8:	86 e7       	ldi	r24, 0x76	; 118
    45ca:	93 e0       	ldi	r25, 0x03	; 3
    45cc:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
		*(pSettings_BL+0) = 1;
    45d0:	e0 91 7c 05 	lds	r30, 0x057C	; 0x80057c <pSettings_BL>
    45d4:	f0 91 7d 05 	lds	r31, 0x057D	; 0x80057d <pSettings_BL+0x1>
    45d8:	81 e0       	ldi	r24, 0x01	; 1
    45da:	90 e0       	ldi	r25, 0x00	; 0
    45dc:	91 83       	std	Z+1, r25	; 0x01
    45de:	80 83       	st	Z, r24
    45e0:	23 c0       	rjmp	.+70     	; 0x4628 <USART_BluetoothChanger+0x1d6>
	}
	else{
		char buffer_tmp[BL_BUFFERSIZE] = "RX:> ";
    45e2:	86 e0       	ldi	r24, 0x06	; 6
    45e4:	e6 e3       	ldi	r30, 0x36	; 54
    45e6:	f1 e0       	ldi	r31, 0x01	; 1
    45e8:	9e 01       	movw	r18, r28
    45ea:	2f 5f       	subi	r18, 0xFF	; 255
    45ec:	3f 4f       	sbci	r19, 0xFF	; 255
    45ee:	79 01       	movw	r14, r18
    45f0:	d9 01       	movw	r26, r18
    45f2:	01 90       	ld	r0, Z+
    45f4:	0d 92       	st	X+, r0
    45f6:	8a 95       	dec	r24
    45f8:	e1 f7       	brne	.-8      	; 0x45f2 <USART_BluetoothChanger+0x1a0>
    45fa:	fe 01       	movw	r30, r28
    45fc:	37 96       	adiw	r30, 0x07	; 7
    45fe:	84 e0       	ldi	r24, 0x04	; 4
    4600:	df 01       	movw	r26, r30
    4602:	1d 92       	st	X+, r1
    4604:	8a 95       	dec	r24
    4606:	e9 f7       	brne	.-6      	; 0x4602 <USART_BluetoothChanger+0x1b0>
		strcat(buffer_tmp, Data_in);
    4608:	b8 01       	movw	r22, r16
    460a:	c9 01       	movw	r24, r18
    460c:	0e 94 f9 25 	call	0x4bf2	; 0x4bf2 <strcat>
		strcat(buffer_tmp, "\n");
    4610:	f7 01       	movw	r30, r14
    4612:	01 90       	ld	r0, Z+
    4614:	00 20       	and	r0, r0
    4616:	e9 f7       	brne	.-6      	; 0x4612 <USART_BluetoothChanger+0x1c0>
    4618:	31 97       	sbiw	r30, 0x01	; 1
    461a:	8a e0       	ldi	r24, 0x0A	; 10
    461c:	90 e0       	ldi	r25, 0x00	; 0
    461e:	91 83       	std	Z+1, r25	; 0x01
    4620:	80 83       	st	Z, r24
		USART_SendString(buffer_tmp);
    4622:	c7 01       	movw	r24, r14
    4624:	0e 94 1a 22 	call	0x4434	; 0x4434 <USART_SendString>
		strcpy(buffer_tmp, "");
	}
	
    4628:	2a 96       	adiw	r28, 0x0a	; 10
    462a:	0f b6       	in	r0, 0x3f	; 63
    462c:	f8 94       	cli
    462e:	de bf       	out	0x3e, r29	; 62
    4630:	0f be       	out	0x3f, r0	; 63
    4632:	cd bf       	out	0x3d, r28	; 61
    4634:	df 91       	pop	r29
    4636:	cf 91       	pop	r28
    4638:	1f 91       	pop	r17
    463a:	0f 91       	pop	r16
    463c:	ff 90       	pop	r15
    463e:	ef 90       	pop	r14
    4640:	08 95       	ret

00004642 <__subsf3>:
    4642:	50 58       	subi	r21, 0x80	; 128

00004644 <__addsf3>:
    4644:	bb 27       	eor	r27, r27
    4646:	aa 27       	eor	r26, r26
    4648:	0e 94 39 23 	call	0x4672	; 0x4672 <__addsf3x>
    464c:	0c 94 09 25 	jmp	0x4a12	; 0x4a12 <__fp_round>
    4650:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <__fp_pscA>
    4654:	38 f0       	brcs	.+14     	; 0x4664 <__addsf3+0x20>
    4656:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__fp_pscB>
    465a:	20 f0       	brcs	.+8      	; 0x4664 <__addsf3+0x20>
    465c:	39 f4       	brne	.+14     	; 0x466c <__addsf3+0x28>
    465e:	9f 3f       	cpi	r25, 0xFF	; 255
    4660:	19 f4       	brne	.+6      	; 0x4668 <__addsf3+0x24>
    4662:	26 f4       	brtc	.+8      	; 0x466c <__addsf3+0x28>
    4664:	0c 94 d1 24 	jmp	0x49a2	; 0x49a2 <__fp_nan>
    4668:	0e f4       	brtc	.+2      	; 0x466c <__addsf3+0x28>
    466a:	e0 95       	com	r30
    466c:	e7 fb       	bst	r30, 7
    466e:	0c 94 cb 24 	jmp	0x4996	; 0x4996 <__fp_inf>

00004672 <__addsf3x>:
    4672:	e9 2f       	mov	r30, r25
    4674:	0e 94 1a 25 	call	0x4a34	; 0x4a34 <__fp_split3>
    4678:	58 f3       	brcs	.-42     	; 0x4650 <__addsf3+0xc>
    467a:	ba 17       	cp	r27, r26
    467c:	62 07       	cpc	r22, r18
    467e:	73 07       	cpc	r23, r19
    4680:	84 07       	cpc	r24, r20
    4682:	95 07       	cpc	r25, r21
    4684:	20 f0       	brcs	.+8      	; 0x468e <__addsf3x+0x1c>
    4686:	79 f4       	brne	.+30     	; 0x46a6 <__addsf3x+0x34>
    4688:	a6 f5       	brtc	.+104    	; 0x46f2 <__addsf3x+0x80>
    468a:	0c 94 3c 25 	jmp	0x4a78	; 0x4a78 <__fp_zero>
    468e:	0e f4       	brtc	.+2      	; 0x4692 <__addsf3x+0x20>
    4690:	e0 95       	com	r30
    4692:	0b 2e       	mov	r0, r27
    4694:	ba 2f       	mov	r27, r26
    4696:	a0 2d       	mov	r26, r0
    4698:	0b 01       	movw	r0, r22
    469a:	b9 01       	movw	r22, r18
    469c:	90 01       	movw	r18, r0
    469e:	0c 01       	movw	r0, r24
    46a0:	ca 01       	movw	r24, r20
    46a2:	a0 01       	movw	r20, r0
    46a4:	11 24       	eor	r1, r1
    46a6:	ff 27       	eor	r31, r31
    46a8:	59 1b       	sub	r21, r25
    46aa:	99 f0       	breq	.+38     	; 0x46d2 <__addsf3x+0x60>
    46ac:	59 3f       	cpi	r21, 0xF9	; 249
    46ae:	50 f4       	brcc	.+20     	; 0x46c4 <__addsf3x+0x52>
    46b0:	50 3e       	cpi	r21, 0xE0	; 224
    46b2:	68 f1       	brcs	.+90     	; 0x470e <__addsf3x+0x9c>
    46b4:	1a 16       	cp	r1, r26
    46b6:	f0 40       	sbci	r31, 0x00	; 0
    46b8:	a2 2f       	mov	r26, r18
    46ba:	23 2f       	mov	r18, r19
    46bc:	34 2f       	mov	r19, r20
    46be:	44 27       	eor	r20, r20
    46c0:	58 5f       	subi	r21, 0xF8	; 248
    46c2:	f3 cf       	rjmp	.-26     	; 0x46aa <__addsf3x+0x38>
    46c4:	46 95       	lsr	r20
    46c6:	37 95       	ror	r19
    46c8:	27 95       	ror	r18
    46ca:	a7 95       	ror	r26
    46cc:	f0 40       	sbci	r31, 0x00	; 0
    46ce:	53 95       	inc	r21
    46d0:	c9 f7       	brne	.-14     	; 0x46c4 <__addsf3x+0x52>
    46d2:	7e f4       	brtc	.+30     	; 0x46f2 <__addsf3x+0x80>
    46d4:	1f 16       	cp	r1, r31
    46d6:	ba 0b       	sbc	r27, r26
    46d8:	62 0b       	sbc	r22, r18
    46da:	73 0b       	sbc	r23, r19
    46dc:	84 0b       	sbc	r24, r20
    46de:	ba f0       	brmi	.+46     	; 0x470e <__addsf3x+0x9c>
    46e0:	91 50       	subi	r25, 0x01	; 1
    46e2:	a1 f0       	breq	.+40     	; 0x470c <__addsf3x+0x9a>
    46e4:	ff 0f       	add	r31, r31
    46e6:	bb 1f       	adc	r27, r27
    46e8:	66 1f       	adc	r22, r22
    46ea:	77 1f       	adc	r23, r23
    46ec:	88 1f       	adc	r24, r24
    46ee:	c2 f7       	brpl	.-16     	; 0x46e0 <__addsf3x+0x6e>
    46f0:	0e c0       	rjmp	.+28     	; 0x470e <__addsf3x+0x9c>
    46f2:	ba 0f       	add	r27, r26
    46f4:	62 1f       	adc	r22, r18
    46f6:	73 1f       	adc	r23, r19
    46f8:	84 1f       	adc	r24, r20
    46fa:	48 f4       	brcc	.+18     	; 0x470e <__addsf3x+0x9c>
    46fc:	87 95       	ror	r24
    46fe:	77 95       	ror	r23
    4700:	67 95       	ror	r22
    4702:	b7 95       	ror	r27
    4704:	f7 95       	ror	r31
    4706:	9e 3f       	cpi	r25, 0xFE	; 254
    4708:	08 f0       	brcs	.+2      	; 0x470c <__addsf3x+0x9a>
    470a:	b0 cf       	rjmp	.-160    	; 0x466c <__addsf3+0x28>
    470c:	93 95       	inc	r25
    470e:	88 0f       	add	r24, r24
    4710:	08 f0       	brcs	.+2      	; 0x4714 <__addsf3x+0xa2>
    4712:	99 27       	eor	r25, r25
    4714:	ee 0f       	add	r30, r30
    4716:	97 95       	ror	r25
    4718:	87 95       	ror	r24
    471a:	08 95       	ret

0000471c <atan>:
    471c:	df 93       	push	r29
    471e:	dd 27       	eor	r29, r29
    4720:	b9 2f       	mov	r27, r25
    4722:	bf 77       	andi	r27, 0x7F	; 127
    4724:	40 e8       	ldi	r20, 0x80	; 128
    4726:	5f e3       	ldi	r21, 0x3F	; 63
    4728:	16 16       	cp	r1, r22
    472a:	17 06       	cpc	r1, r23
    472c:	48 07       	cpc	r20, r24
    472e:	5b 07       	cpc	r21, r27
    4730:	18 f4       	brcc	.+6      	; 0x4738 <atan+0x1c>
    4732:	d9 2f       	mov	r29, r25
    4734:	0e 94 48 25 	call	0x4a90	; 0x4a90 <inverse>
    4738:	9f 93       	push	r25
    473a:	8f 93       	push	r24
    473c:	7f 93       	push	r23
    473e:	6f 93       	push	r22
    4740:	0e 94 bd 25 	call	0x4b7a	; 0x4b7a <square>
    4744:	e8 e6       	ldi	r30, 0x68	; 104
    4746:	f0 e0       	ldi	r31, 0x00	; 0
    4748:	0e 94 d4 24 	call	0x49a8	; 0x49a8 <__fp_powser>
    474c:	0e 94 09 25 	call	0x4a12	; 0x4a12 <__fp_round>
    4750:	2f 91       	pop	r18
    4752:	3f 91       	pop	r19
    4754:	4f 91       	pop	r20
    4756:	5f 91       	pop	r21
    4758:	0e 94 63 25 	call	0x4ac6	; 0x4ac6 <__mulsf3x>
    475c:	dd 23       	and	r29, r29
    475e:	51 f0       	breq	.+20     	; 0x4774 <atan+0x58>
    4760:	90 58       	subi	r25, 0x80	; 128
    4762:	a2 ea       	ldi	r26, 0xA2	; 162
    4764:	2a ed       	ldi	r18, 0xDA	; 218
    4766:	3f e0       	ldi	r19, 0x0F	; 15
    4768:	49 ec       	ldi	r20, 0xC9	; 201
    476a:	5f e3       	ldi	r21, 0x3F	; 63
    476c:	d0 78       	andi	r29, 0x80	; 128
    476e:	5d 27       	eor	r21, r29
    4770:	0e 94 39 23 	call	0x4672	; 0x4672 <__addsf3x>
    4774:	df 91       	pop	r29
    4776:	0c 94 09 25 	jmp	0x4a12	; 0x4a12 <__fp_round>

0000477a <__cmpsf2>:
    477a:	0e 94 a7 24 	call	0x494e	; 0x494e <__fp_cmp>
    477e:	08 f4       	brcc	.+2      	; 0x4782 <__cmpsf2+0x8>
    4780:	81 e0       	ldi	r24, 0x01	; 1
    4782:	08 95       	ret

00004784 <__divsf3>:
    4784:	0e 94 d6 23 	call	0x47ac	; 0x47ac <__divsf3x>
    4788:	0c 94 09 25 	jmp	0x4a12	; 0x4a12 <__fp_round>
    478c:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__fp_pscB>
    4790:	58 f0       	brcs	.+22     	; 0x47a8 <__divsf3+0x24>
    4792:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <__fp_pscA>
    4796:	40 f0       	brcs	.+16     	; 0x47a8 <__divsf3+0x24>
    4798:	29 f4       	brne	.+10     	; 0x47a4 <__divsf3+0x20>
    479a:	5f 3f       	cpi	r21, 0xFF	; 255
    479c:	29 f0       	breq	.+10     	; 0x47a8 <__divsf3+0x24>
    479e:	0c 94 cb 24 	jmp	0x4996	; 0x4996 <__fp_inf>
    47a2:	51 11       	cpse	r21, r1
    47a4:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__fp_szero>
    47a8:	0c 94 d1 24 	jmp	0x49a2	; 0x49a2 <__fp_nan>

000047ac <__divsf3x>:
    47ac:	0e 94 1a 25 	call	0x4a34	; 0x4a34 <__fp_split3>
    47b0:	68 f3       	brcs	.-38     	; 0x478c <__divsf3+0x8>

000047b2 <__divsf3_pse>:
    47b2:	99 23       	and	r25, r25
    47b4:	b1 f3       	breq	.-20     	; 0x47a2 <__divsf3+0x1e>
    47b6:	55 23       	and	r21, r21
    47b8:	91 f3       	breq	.-28     	; 0x479e <__divsf3+0x1a>
    47ba:	95 1b       	sub	r25, r21
    47bc:	55 0b       	sbc	r21, r21
    47be:	bb 27       	eor	r27, r27
    47c0:	aa 27       	eor	r26, r26
    47c2:	62 17       	cp	r22, r18
    47c4:	73 07       	cpc	r23, r19
    47c6:	84 07       	cpc	r24, r20
    47c8:	38 f0       	brcs	.+14     	; 0x47d8 <__divsf3_pse+0x26>
    47ca:	9f 5f       	subi	r25, 0xFF	; 255
    47cc:	5f 4f       	sbci	r21, 0xFF	; 255
    47ce:	22 0f       	add	r18, r18
    47d0:	33 1f       	adc	r19, r19
    47d2:	44 1f       	adc	r20, r20
    47d4:	aa 1f       	adc	r26, r26
    47d6:	a9 f3       	breq	.-22     	; 0x47c2 <__divsf3_pse+0x10>
    47d8:	35 d0       	rcall	.+106    	; 0x4844 <__divsf3_pse+0x92>
    47da:	0e 2e       	mov	r0, r30
    47dc:	3a f0       	brmi	.+14     	; 0x47ec <__divsf3_pse+0x3a>
    47de:	e0 e8       	ldi	r30, 0x80	; 128
    47e0:	32 d0       	rcall	.+100    	; 0x4846 <__divsf3_pse+0x94>
    47e2:	91 50       	subi	r25, 0x01	; 1
    47e4:	50 40       	sbci	r21, 0x00	; 0
    47e6:	e6 95       	lsr	r30
    47e8:	00 1c       	adc	r0, r0
    47ea:	ca f7       	brpl	.-14     	; 0x47de <__divsf3_pse+0x2c>
    47ec:	2b d0       	rcall	.+86     	; 0x4844 <__divsf3_pse+0x92>
    47ee:	fe 2f       	mov	r31, r30
    47f0:	29 d0       	rcall	.+82     	; 0x4844 <__divsf3_pse+0x92>
    47f2:	66 0f       	add	r22, r22
    47f4:	77 1f       	adc	r23, r23
    47f6:	88 1f       	adc	r24, r24
    47f8:	bb 1f       	adc	r27, r27
    47fa:	26 17       	cp	r18, r22
    47fc:	37 07       	cpc	r19, r23
    47fe:	48 07       	cpc	r20, r24
    4800:	ab 07       	cpc	r26, r27
    4802:	b0 e8       	ldi	r27, 0x80	; 128
    4804:	09 f0       	breq	.+2      	; 0x4808 <__divsf3_pse+0x56>
    4806:	bb 0b       	sbc	r27, r27
    4808:	80 2d       	mov	r24, r0
    480a:	bf 01       	movw	r22, r30
    480c:	ff 27       	eor	r31, r31
    480e:	93 58       	subi	r25, 0x83	; 131
    4810:	5f 4f       	sbci	r21, 0xFF	; 255
    4812:	3a f0       	brmi	.+14     	; 0x4822 <__divsf3_pse+0x70>
    4814:	9e 3f       	cpi	r25, 0xFE	; 254
    4816:	51 05       	cpc	r21, r1
    4818:	78 f0       	brcs	.+30     	; 0x4838 <__divsf3_pse+0x86>
    481a:	0c 94 cb 24 	jmp	0x4996	; 0x4996 <__fp_inf>
    481e:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__fp_szero>
    4822:	5f 3f       	cpi	r21, 0xFF	; 255
    4824:	e4 f3       	brlt	.-8      	; 0x481e <__divsf3_pse+0x6c>
    4826:	98 3e       	cpi	r25, 0xE8	; 232
    4828:	d4 f3       	brlt	.-12     	; 0x481e <__divsf3_pse+0x6c>
    482a:	86 95       	lsr	r24
    482c:	77 95       	ror	r23
    482e:	67 95       	ror	r22
    4830:	b7 95       	ror	r27
    4832:	f7 95       	ror	r31
    4834:	9f 5f       	subi	r25, 0xFF	; 255
    4836:	c9 f7       	brne	.-14     	; 0x482a <__divsf3_pse+0x78>
    4838:	88 0f       	add	r24, r24
    483a:	91 1d       	adc	r25, r1
    483c:	96 95       	lsr	r25
    483e:	87 95       	ror	r24
    4840:	97 f9       	bld	r25, 7
    4842:	08 95       	ret
    4844:	e1 e0       	ldi	r30, 0x01	; 1
    4846:	66 0f       	add	r22, r22
    4848:	77 1f       	adc	r23, r23
    484a:	88 1f       	adc	r24, r24
    484c:	bb 1f       	adc	r27, r27
    484e:	62 17       	cp	r22, r18
    4850:	73 07       	cpc	r23, r19
    4852:	84 07       	cpc	r24, r20
    4854:	ba 07       	cpc	r27, r26
    4856:	20 f0       	brcs	.+8      	; 0x4860 <__divsf3_pse+0xae>
    4858:	62 1b       	sub	r22, r18
    485a:	73 0b       	sbc	r23, r19
    485c:	84 0b       	sbc	r24, r20
    485e:	ba 0b       	sbc	r27, r26
    4860:	ee 1f       	adc	r30, r30
    4862:	88 f7       	brcc	.-30     	; 0x4846 <__divsf3_pse+0x94>
    4864:	e0 95       	com	r30
    4866:	08 95       	ret

00004868 <__fixsfsi>:
    4868:	0e 94 3b 24 	call	0x4876	; 0x4876 <__fixunssfsi>
    486c:	68 94       	set
    486e:	b1 11       	cpse	r27, r1
    4870:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__fp_szero>
    4874:	08 95       	ret

00004876 <__fixunssfsi>:
    4876:	0e 94 22 25 	call	0x4a44	; 0x4a44 <__fp_splitA>
    487a:	88 f0       	brcs	.+34     	; 0x489e <__fixunssfsi+0x28>
    487c:	9f 57       	subi	r25, 0x7F	; 127
    487e:	98 f0       	brcs	.+38     	; 0x48a6 <__fixunssfsi+0x30>
    4880:	b9 2f       	mov	r27, r25
    4882:	99 27       	eor	r25, r25
    4884:	b7 51       	subi	r27, 0x17	; 23
    4886:	b0 f0       	brcs	.+44     	; 0x48b4 <__fixunssfsi+0x3e>
    4888:	e1 f0       	breq	.+56     	; 0x48c2 <__fixunssfsi+0x4c>
    488a:	66 0f       	add	r22, r22
    488c:	77 1f       	adc	r23, r23
    488e:	88 1f       	adc	r24, r24
    4890:	99 1f       	adc	r25, r25
    4892:	1a f0       	brmi	.+6      	; 0x489a <__fixunssfsi+0x24>
    4894:	ba 95       	dec	r27
    4896:	c9 f7       	brne	.-14     	; 0x488a <__fixunssfsi+0x14>
    4898:	14 c0       	rjmp	.+40     	; 0x48c2 <__fixunssfsi+0x4c>
    489a:	b1 30       	cpi	r27, 0x01	; 1
    489c:	91 f0       	breq	.+36     	; 0x48c2 <__fixunssfsi+0x4c>
    489e:	0e 94 3c 25 	call	0x4a78	; 0x4a78 <__fp_zero>
    48a2:	b1 e0       	ldi	r27, 0x01	; 1
    48a4:	08 95       	ret
    48a6:	0c 94 3c 25 	jmp	0x4a78	; 0x4a78 <__fp_zero>
    48aa:	67 2f       	mov	r22, r23
    48ac:	78 2f       	mov	r23, r24
    48ae:	88 27       	eor	r24, r24
    48b0:	b8 5f       	subi	r27, 0xF8	; 248
    48b2:	39 f0       	breq	.+14     	; 0x48c2 <__fixunssfsi+0x4c>
    48b4:	b9 3f       	cpi	r27, 0xF9	; 249
    48b6:	cc f3       	brlt	.-14     	; 0x48aa <__fixunssfsi+0x34>
    48b8:	86 95       	lsr	r24
    48ba:	77 95       	ror	r23
    48bc:	67 95       	ror	r22
    48be:	b3 95       	inc	r27
    48c0:	d9 f7       	brne	.-10     	; 0x48b8 <__fixunssfsi+0x42>
    48c2:	3e f4       	brtc	.+14     	; 0x48d2 <__fixunssfsi+0x5c>
    48c4:	90 95       	com	r25
    48c6:	80 95       	com	r24
    48c8:	70 95       	com	r23
    48ca:	61 95       	neg	r22
    48cc:	7f 4f       	sbci	r23, 0xFF	; 255
    48ce:	8f 4f       	sbci	r24, 0xFF	; 255
    48d0:	9f 4f       	sbci	r25, 0xFF	; 255
    48d2:	08 95       	ret

000048d4 <__floatunsisf>:
    48d4:	e8 94       	clt
    48d6:	09 c0       	rjmp	.+18     	; 0x48ea <__floatsisf+0x12>

000048d8 <__floatsisf>:
    48d8:	97 fb       	bst	r25, 7
    48da:	3e f4       	brtc	.+14     	; 0x48ea <__floatsisf+0x12>
    48dc:	90 95       	com	r25
    48de:	80 95       	com	r24
    48e0:	70 95       	com	r23
    48e2:	61 95       	neg	r22
    48e4:	7f 4f       	sbci	r23, 0xFF	; 255
    48e6:	8f 4f       	sbci	r24, 0xFF	; 255
    48e8:	9f 4f       	sbci	r25, 0xFF	; 255
    48ea:	99 23       	and	r25, r25
    48ec:	a9 f0       	breq	.+42     	; 0x4918 <__floatsisf+0x40>
    48ee:	f9 2f       	mov	r31, r25
    48f0:	96 e9       	ldi	r25, 0x96	; 150
    48f2:	bb 27       	eor	r27, r27
    48f4:	93 95       	inc	r25
    48f6:	f6 95       	lsr	r31
    48f8:	87 95       	ror	r24
    48fa:	77 95       	ror	r23
    48fc:	67 95       	ror	r22
    48fe:	b7 95       	ror	r27
    4900:	f1 11       	cpse	r31, r1
    4902:	f8 cf       	rjmp	.-16     	; 0x48f4 <__floatsisf+0x1c>
    4904:	fa f4       	brpl	.+62     	; 0x4944 <__floatsisf+0x6c>
    4906:	bb 0f       	add	r27, r27
    4908:	11 f4       	brne	.+4      	; 0x490e <__floatsisf+0x36>
    490a:	60 ff       	sbrs	r22, 0
    490c:	1b c0       	rjmp	.+54     	; 0x4944 <__floatsisf+0x6c>
    490e:	6f 5f       	subi	r22, 0xFF	; 255
    4910:	7f 4f       	sbci	r23, 0xFF	; 255
    4912:	8f 4f       	sbci	r24, 0xFF	; 255
    4914:	9f 4f       	sbci	r25, 0xFF	; 255
    4916:	16 c0       	rjmp	.+44     	; 0x4944 <__floatsisf+0x6c>
    4918:	88 23       	and	r24, r24
    491a:	11 f0       	breq	.+4      	; 0x4920 <__floatsisf+0x48>
    491c:	96 e9       	ldi	r25, 0x96	; 150
    491e:	11 c0       	rjmp	.+34     	; 0x4942 <__floatsisf+0x6a>
    4920:	77 23       	and	r23, r23
    4922:	21 f0       	breq	.+8      	; 0x492c <__floatsisf+0x54>
    4924:	9e e8       	ldi	r25, 0x8E	; 142
    4926:	87 2f       	mov	r24, r23
    4928:	76 2f       	mov	r23, r22
    492a:	05 c0       	rjmp	.+10     	; 0x4936 <__floatsisf+0x5e>
    492c:	66 23       	and	r22, r22
    492e:	71 f0       	breq	.+28     	; 0x494c <__floatsisf+0x74>
    4930:	96 e8       	ldi	r25, 0x86	; 134
    4932:	86 2f       	mov	r24, r22
    4934:	70 e0       	ldi	r23, 0x00	; 0
    4936:	60 e0       	ldi	r22, 0x00	; 0
    4938:	2a f0       	brmi	.+10     	; 0x4944 <__floatsisf+0x6c>
    493a:	9a 95       	dec	r25
    493c:	66 0f       	add	r22, r22
    493e:	77 1f       	adc	r23, r23
    4940:	88 1f       	adc	r24, r24
    4942:	da f7       	brpl	.-10     	; 0x493a <__floatsisf+0x62>
    4944:	88 0f       	add	r24, r24
    4946:	96 95       	lsr	r25
    4948:	87 95       	ror	r24
    494a:	97 f9       	bld	r25, 7
    494c:	08 95       	ret

0000494e <__fp_cmp>:
    494e:	99 0f       	add	r25, r25
    4950:	00 08       	sbc	r0, r0
    4952:	55 0f       	add	r21, r21
    4954:	aa 0b       	sbc	r26, r26
    4956:	e0 e8       	ldi	r30, 0x80	; 128
    4958:	fe ef       	ldi	r31, 0xFE	; 254
    495a:	16 16       	cp	r1, r22
    495c:	17 06       	cpc	r1, r23
    495e:	e8 07       	cpc	r30, r24
    4960:	f9 07       	cpc	r31, r25
    4962:	c0 f0       	brcs	.+48     	; 0x4994 <__fp_cmp+0x46>
    4964:	12 16       	cp	r1, r18
    4966:	13 06       	cpc	r1, r19
    4968:	e4 07       	cpc	r30, r20
    496a:	f5 07       	cpc	r31, r21
    496c:	98 f0       	brcs	.+38     	; 0x4994 <__fp_cmp+0x46>
    496e:	62 1b       	sub	r22, r18
    4970:	73 0b       	sbc	r23, r19
    4972:	84 0b       	sbc	r24, r20
    4974:	95 0b       	sbc	r25, r21
    4976:	39 f4       	brne	.+14     	; 0x4986 <__fp_cmp+0x38>
    4978:	0a 26       	eor	r0, r26
    497a:	61 f0       	breq	.+24     	; 0x4994 <__fp_cmp+0x46>
    497c:	23 2b       	or	r18, r19
    497e:	24 2b       	or	r18, r20
    4980:	25 2b       	or	r18, r21
    4982:	21 f4       	brne	.+8      	; 0x498c <__fp_cmp+0x3e>
    4984:	08 95       	ret
    4986:	0a 26       	eor	r0, r26
    4988:	09 f4       	brne	.+2      	; 0x498c <__fp_cmp+0x3e>
    498a:	a1 40       	sbci	r26, 0x01	; 1
    498c:	a6 95       	lsr	r26
    498e:	8f ef       	ldi	r24, 0xFF	; 255
    4990:	81 1d       	adc	r24, r1
    4992:	81 1d       	adc	r24, r1
    4994:	08 95       	ret

00004996 <__fp_inf>:
    4996:	97 f9       	bld	r25, 7
    4998:	9f 67       	ori	r25, 0x7F	; 127
    499a:	80 e8       	ldi	r24, 0x80	; 128
    499c:	70 e0       	ldi	r23, 0x00	; 0
    499e:	60 e0       	ldi	r22, 0x00	; 0
    49a0:	08 95       	ret

000049a2 <__fp_nan>:
    49a2:	9f ef       	ldi	r25, 0xFF	; 255
    49a4:	80 ec       	ldi	r24, 0xC0	; 192
    49a6:	08 95       	ret

000049a8 <__fp_powser>:
    49a8:	df 93       	push	r29
    49aa:	cf 93       	push	r28
    49ac:	1f 93       	push	r17
    49ae:	0f 93       	push	r16
    49b0:	ff 92       	push	r15
    49b2:	ef 92       	push	r14
    49b4:	df 92       	push	r13
    49b6:	7b 01       	movw	r14, r22
    49b8:	8c 01       	movw	r16, r24
    49ba:	68 94       	set
    49bc:	06 c0       	rjmp	.+12     	; 0x49ca <__fp_powser+0x22>
    49be:	da 2e       	mov	r13, r26
    49c0:	ef 01       	movw	r28, r30
    49c2:	0e 94 63 25 	call	0x4ac6	; 0x4ac6 <__mulsf3x>
    49c6:	fe 01       	movw	r30, r28
    49c8:	e8 94       	clt
    49ca:	a5 91       	lpm	r26, Z+
    49cc:	25 91       	lpm	r18, Z+
    49ce:	35 91       	lpm	r19, Z+
    49d0:	45 91       	lpm	r20, Z+
    49d2:	55 91       	lpm	r21, Z+
    49d4:	a6 f3       	brts	.-24     	; 0x49be <__fp_powser+0x16>
    49d6:	ef 01       	movw	r28, r30
    49d8:	0e 94 39 23 	call	0x4672	; 0x4672 <__addsf3x>
    49dc:	fe 01       	movw	r30, r28
    49de:	97 01       	movw	r18, r14
    49e0:	a8 01       	movw	r20, r16
    49e2:	da 94       	dec	r13
    49e4:	69 f7       	brne	.-38     	; 0x49c0 <__fp_powser+0x18>
    49e6:	df 90       	pop	r13
    49e8:	ef 90       	pop	r14
    49ea:	ff 90       	pop	r15
    49ec:	0f 91       	pop	r16
    49ee:	1f 91       	pop	r17
    49f0:	cf 91       	pop	r28
    49f2:	df 91       	pop	r29
    49f4:	08 95       	ret

000049f6 <__fp_pscA>:
    49f6:	00 24       	eor	r0, r0
    49f8:	0a 94       	dec	r0
    49fa:	16 16       	cp	r1, r22
    49fc:	17 06       	cpc	r1, r23
    49fe:	18 06       	cpc	r1, r24
    4a00:	09 06       	cpc	r0, r25
    4a02:	08 95       	ret

00004a04 <__fp_pscB>:
    4a04:	00 24       	eor	r0, r0
    4a06:	0a 94       	dec	r0
    4a08:	12 16       	cp	r1, r18
    4a0a:	13 06       	cpc	r1, r19
    4a0c:	14 06       	cpc	r1, r20
    4a0e:	05 06       	cpc	r0, r21
    4a10:	08 95       	ret

00004a12 <__fp_round>:
    4a12:	09 2e       	mov	r0, r25
    4a14:	03 94       	inc	r0
    4a16:	00 0c       	add	r0, r0
    4a18:	11 f4       	brne	.+4      	; 0x4a1e <__fp_round+0xc>
    4a1a:	88 23       	and	r24, r24
    4a1c:	52 f0       	brmi	.+20     	; 0x4a32 <__fp_round+0x20>
    4a1e:	bb 0f       	add	r27, r27
    4a20:	40 f4       	brcc	.+16     	; 0x4a32 <__fp_round+0x20>
    4a22:	bf 2b       	or	r27, r31
    4a24:	11 f4       	brne	.+4      	; 0x4a2a <__fp_round+0x18>
    4a26:	60 ff       	sbrs	r22, 0
    4a28:	04 c0       	rjmp	.+8      	; 0x4a32 <__fp_round+0x20>
    4a2a:	6f 5f       	subi	r22, 0xFF	; 255
    4a2c:	7f 4f       	sbci	r23, 0xFF	; 255
    4a2e:	8f 4f       	sbci	r24, 0xFF	; 255
    4a30:	9f 4f       	sbci	r25, 0xFF	; 255
    4a32:	08 95       	ret

00004a34 <__fp_split3>:
    4a34:	57 fd       	sbrc	r21, 7
    4a36:	90 58       	subi	r25, 0x80	; 128
    4a38:	44 0f       	add	r20, r20
    4a3a:	55 1f       	adc	r21, r21
    4a3c:	59 f0       	breq	.+22     	; 0x4a54 <__fp_splitA+0x10>
    4a3e:	5f 3f       	cpi	r21, 0xFF	; 255
    4a40:	71 f0       	breq	.+28     	; 0x4a5e <__fp_splitA+0x1a>
    4a42:	47 95       	ror	r20

00004a44 <__fp_splitA>:
    4a44:	88 0f       	add	r24, r24
    4a46:	97 fb       	bst	r25, 7
    4a48:	99 1f       	adc	r25, r25
    4a4a:	61 f0       	breq	.+24     	; 0x4a64 <__fp_splitA+0x20>
    4a4c:	9f 3f       	cpi	r25, 0xFF	; 255
    4a4e:	79 f0       	breq	.+30     	; 0x4a6e <__fp_splitA+0x2a>
    4a50:	87 95       	ror	r24
    4a52:	08 95       	ret
    4a54:	12 16       	cp	r1, r18
    4a56:	13 06       	cpc	r1, r19
    4a58:	14 06       	cpc	r1, r20
    4a5a:	55 1f       	adc	r21, r21
    4a5c:	f2 cf       	rjmp	.-28     	; 0x4a42 <__fp_split3+0xe>
    4a5e:	46 95       	lsr	r20
    4a60:	f1 df       	rcall	.-30     	; 0x4a44 <__fp_splitA>
    4a62:	08 c0       	rjmp	.+16     	; 0x4a74 <__fp_splitA+0x30>
    4a64:	16 16       	cp	r1, r22
    4a66:	17 06       	cpc	r1, r23
    4a68:	18 06       	cpc	r1, r24
    4a6a:	99 1f       	adc	r25, r25
    4a6c:	f1 cf       	rjmp	.-30     	; 0x4a50 <__fp_splitA+0xc>
    4a6e:	86 95       	lsr	r24
    4a70:	71 05       	cpc	r23, r1
    4a72:	61 05       	cpc	r22, r1
    4a74:	08 94       	sec
    4a76:	08 95       	ret

00004a78 <__fp_zero>:
    4a78:	e8 94       	clt

00004a7a <__fp_szero>:
    4a7a:	bb 27       	eor	r27, r27
    4a7c:	66 27       	eor	r22, r22
    4a7e:	77 27       	eor	r23, r23
    4a80:	cb 01       	movw	r24, r22
    4a82:	97 f9       	bld	r25, 7
    4a84:	08 95       	ret

00004a86 <__gesf2>:
    4a86:	0e 94 a7 24 	call	0x494e	; 0x494e <__fp_cmp>
    4a8a:	08 f4       	brcc	.+2      	; 0x4a8e <__gesf2+0x8>
    4a8c:	8f ef       	ldi	r24, 0xFF	; 255
    4a8e:	08 95       	ret

00004a90 <inverse>:
    4a90:	9b 01       	movw	r18, r22
    4a92:	ac 01       	movw	r20, r24
    4a94:	60 e0       	ldi	r22, 0x00	; 0
    4a96:	70 e0       	ldi	r23, 0x00	; 0
    4a98:	80 e8       	ldi	r24, 0x80	; 128
    4a9a:	9f e3       	ldi	r25, 0x3F	; 63
    4a9c:	0c 94 c2 23 	jmp	0x4784	; 0x4784 <__divsf3>

00004aa0 <__mulsf3>:
    4aa0:	0e 94 63 25 	call	0x4ac6	; 0x4ac6 <__mulsf3x>
    4aa4:	0c 94 09 25 	jmp	0x4a12	; 0x4a12 <__fp_round>
    4aa8:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <__fp_pscA>
    4aac:	38 f0       	brcs	.+14     	; 0x4abc <__mulsf3+0x1c>
    4aae:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__fp_pscB>
    4ab2:	20 f0       	brcs	.+8      	; 0x4abc <__mulsf3+0x1c>
    4ab4:	95 23       	and	r25, r21
    4ab6:	11 f0       	breq	.+4      	; 0x4abc <__mulsf3+0x1c>
    4ab8:	0c 94 cb 24 	jmp	0x4996	; 0x4996 <__fp_inf>
    4abc:	0c 94 d1 24 	jmp	0x49a2	; 0x49a2 <__fp_nan>
    4ac0:	11 24       	eor	r1, r1
    4ac2:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__fp_szero>

00004ac6 <__mulsf3x>:
    4ac6:	0e 94 1a 25 	call	0x4a34	; 0x4a34 <__fp_split3>
    4aca:	70 f3       	brcs	.-36     	; 0x4aa8 <__mulsf3+0x8>

00004acc <__mulsf3_pse>:
    4acc:	95 9f       	mul	r25, r21
    4ace:	c1 f3       	breq	.-16     	; 0x4ac0 <__mulsf3+0x20>
    4ad0:	95 0f       	add	r25, r21
    4ad2:	50 e0       	ldi	r21, 0x00	; 0
    4ad4:	55 1f       	adc	r21, r21
    4ad6:	62 9f       	mul	r22, r18
    4ad8:	f0 01       	movw	r30, r0
    4ada:	72 9f       	mul	r23, r18
    4adc:	bb 27       	eor	r27, r27
    4ade:	f0 0d       	add	r31, r0
    4ae0:	b1 1d       	adc	r27, r1
    4ae2:	63 9f       	mul	r22, r19
    4ae4:	aa 27       	eor	r26, r26
    4ae6:	f0 0d       	add	r31, r0
    4ae8:	b1 1d       	adc	r27, r1
    4aea:	aa 1f       	adc	r26, r26
    4aec:	64 9f       	mul	r22, r20
    4aee:	66 27       	eor	r22, r22
    4af0:	b0 0d       	add	r27, r0
    4af2:	a1 1d       	adc	r26, r1
    4af4:	66 1f       	adc	r22, r22
    4af6:	82 9f       	mul	r24, r18
    4af8:	22 27       	eor	r18, r18
    4afa:	b0 0d       	add	r27, r0
    4afc:	a1 1d       	adc	r26, r1
    4afe:	62 1f       	adc	r22, r18
    4b00:	73 9f       	mul	r23, r19
    4b02:	b0 0d       	add	r27, r0
    4b04:	a1 1d       	adc	r26, r1
    4b06:	62 1f       	adc	r22, r18
    4b08:	83 9f       	mul	r24, r19
    4b0a:	a0 0d       	add	r26, r0
    4b0c:	61 1d       	adc	r22, r1
    4b0e:	22 1f       	adc	r18, r18
    4b10:	74 9f       	mul	r23, r20
    4b12:	33 27       	eor	r19, r19
    4b14:	a0 0d       	add	r26, r0
    4b16:	61 1d       	adc	r22, r1
    4b18:	23 1f       	adc	r18, r19
    4b1a:	84 9f       	mul	r24, r20
    4b1c:	60 0d       	add	r22, r0
    4b1e:	21 1d       	adc	r18, r1
    4b20:	82 2f       	mov	r24, r18
    4b22:	76 2f       	mov	r23, r22
    4b24:	6a 2f       	mov	r22, r26
    4b26:	11 24       	eor	r1, r1
    4b28:	9f 57       	subi	r25, 0x7F	; 127
    4b2a:	50 40       	sbci	r21, 0x00	; 0
    4b2c:	9a f0       	brmi	.+38     	; 0x4b54 <__mulsf3_pse+0x88>
    4b2e:	f1 f0       	breq	.+60     	; 0x4b6c <__mulsf3_pse+0xa0>
    4b30:	88 23       	and	r24, r24
    4b32:	4a f0       	brmi	.+18     	; 0x4b46 <__mulsf3_pse+0x7a>
    4b34:	ee 0f       	add	r30, r30
    4b36:	ff 1f       	adc	r31, r31
    4b38:	bb 1f       	adc	r27, r27
    4b3a:	66 1f       	adc	r22, r22
    4b3c:	77 1f       	adc	r23, r23
    4b3e:	88 1f       	adc	r24, r24
    4b40:	91 50       	subi	r25, 0x01	; 1
    4b42:	50 40       	sbci	r21, 0x00	; 0
    4b44:	a9 f7       	brne	.-22     	; 0x4b30 <__mulsf3_pse+0x64>
    4b46:	9e 3f       	cpi	r25, 0xFE	; 254
    4b48:	51 05       	cpc	r21, r1
    4b4a:	80 f0       	brcs	.+32     	; 0x4b6c <__mulsf3_pse+0xa0>
    4b4c:	0c 94 cb 24 	jmp	0x4996	; 0x4996 <__fp_inf>
    4b50:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__fp_szero>
    4b54:	5f 3f       	cpi	r21, 0xFF	; 255
    4b56:	e4 f3       	brlt	.-8      	; 0x4b50 <__mulsf3_pse+0x84>
    4b58:	98 3e       	cpi	r25, 0xE8	; 232
    4b5a:	d4 f3       	brlt	.-12     	; 0x4b50 <__mulsf3_pse+0x84>
    4b5c:	86 95       	lsr	r24
    4b5e:	77 95       	ror	r23
    4b60:	67 95       	ror	r22
    4b62:	b7 95       	ror	r27
    4b64:	f7 95       	ror	r31
    4b66:	e7 95       	ror	r30
    4b68:	9f 5f       	subi	r25, 0xFF	; 255
    4b6a:	c1 f7       	brne	.-16     	; 0x4b5c <__mulsf3_pse+0x90>
    4b6c:	fe 2b       	or	r31, r30
    4b6e:	88 0f       	add	r24, r24
    4b70:	91 1d       	adc	r25, r1
    4b72:	96 95       	lsr	r25
    4b74:	87 95       	ror	r24
    4b76:	97 f9       	bld	r25, 7
    4b78:	08 95       	ret

00004b7a <square>:
    4b7a:	9b 01       	movw	r18, r22
    4b7c:	ac 01       	movw	r20, r24
    4b7e:	0c 94 50 25 	jmp	0x4aa0	; 0x4aa0 <__mulsf3>

00004b82 <__udivmodsi4>:
    4b82:	a1 e2       	ldi	r26, 0x21	; 33
    4b84:	1a 2e       	mov	r1, r26
    4b86:	aa 1b       	sub	r26, r26
    4b88:	bb 1b       	sub	r27, r27
    4b8a:	fd 01       	movw	r30, r26
    4b8c:	0d c0       	rjmp	.+26     	; 0x4ba8 <__udivmodsi4_ep>

00004b8e <__udivmodsi4_loop>:
    4b8e:	aa 1f       	adc	r26, r26
    4b90:	bb 1f       	adc	r27, r27
    4b92:	ee 1f       	adc	r30, r30
    4b94:	ff 1f       	adc	r31, r31
    4b96:	a2 17       	cp	r26, r18
    4b98:	b3 07       	cpc	r27, r19
    4b9a:	e4 07       	cpc	r30, r20
    4b9c:	f5 07       	cpc	r31, r21
    4b9e:	20 f0       	brcs	.+8      	; 0x4ba8 <__udivmodsi4_ep>
    4ba0:	a2 1b       	sub	r26, r18
    4ba2:	b3 0b       	sbc	r27, r19
    4ba4:	e4 0b       	sbc	r30, r20
    4ba6:	f5 0b       	sbc	r31, r21

00004ba8 <__udivmodsi4_ep>:
    4ba8:	66 1f       	adc	r22, r22
    4baa:	77 1f       	adc	r23, r23
    4bac:	88 1f       	adc	r24, r24
    4bae:	99 1f       	adc	r25, r25
    4bb0:	1a 94       	dec	r1
    4bb2:	69 f7       	brne	.-38     	; 0x4b8e <__udivmodsi4_loop>
    4bb4:	60 95       	com	r22
    4bb6:	70 95       	com	r23
    4bb8:	80 95       	com	r24
    4bba:	90 95       	com	r25
    4bbc:	9b 01       	movw	r18, r22
    4bbe:	ac 01       	movw	r20, r24
    4bc0:	bd 01       	movw	r22, r26
    4bc2:	cf 01       	movw	r24, r30
    4bc4:	08 95       	ret

00004bc6 <__umulhisi3>:
    4bc6:	a2 9f       	mul	r26, r18
    4bc8:	b0 01       	movw	r22, r0
    4bca:	b3 9f       	mul	r27, r19
    4bcc:	c0 01       	movw	r24, r0
    4bce:	a3 9f       	mul	r26, r19
    4bd0:	70 0d       	add	r23, r0
    4bd2:	81 1d       	adc	r24, r1
    4bd4:	11 24       	eor	r1, r1
    4bd6:	91 1d       	adc	r25, r1
    4bd8:	b2 9f       	mul	r27, r18
    4bda:	70 0d       	add	r23, r0
    4bdc:	81 1d       	adc	r24, r1
    4bde:	11 24       	eor	r1, r1
    4be0:	91 1d       	adc	r25, r1
    4be2:	08 95       	ret

00004be4 <memset>:
    4be4:	dc 01       	movw	r26, r24
    4be6:	01 c0       	rjmp	.+2      	; 0x4bea <memset+0x6>
    4be8:	6d 93       	st	X+, r22
    4bea:	41 50       	subi	r20, 0x01	; 1
    4bec:	50 40       	sbci	r21, 0x00	; 0
    4bee:	e0 f7       	brcc	.-8      	; 0x4be8 <memset+0x4>
    4bf0:	08 95       	ret

00004bf2 <strcat>:
    4bf2:	fb 01       	movw	r30, r22
    4bf4:	dc 01       	movw	r26, r24
    4bf6:	0d 90       	ld	r0, X+
    4bf8:	00 20       	and	r0, r0
    4bfa:	e9 f7       	brne	.-6      	; 0x4bf6 <strcat+0x4>
    4bfc:	11 97       	sbiw	r26, 0x01	; 1
    4bfe:	01 90       	ld	r0, Z+
    4c00:	0d 92       	st	X+, r0
    4c02:	00 20       	and	r0, r0
    4c04:	e1 f7       	brne	.-8      	; 0x4bfe <strcat+0xc>
    4c06:	08 95       	ret

00004c08 <strcmp>:
    4c08:	fb 01       	movw	r30, r22
    4c0a:	dc 01       	movw	r26, r24
    4c0c:	8d 91       	ld	r24, X+
    4c0e:	01 90       	ld	r0, Z+
    4c10:	80 19       	sub	r24, r0
    4c12:	01 10       	cpse	r0, r1
    4c14:	d9 f3       	breq	.-10     	; 0x4c0c <strcmp+0x4>
    4c16:	99 0b       	sbc	r25, r25
    4c18:	08 95       	ret

00004c1a <itoa>:
    4c1a:	45 32       	cpi	r20, 0x25	; 37
    4c1c:	51 05       	cpc	r21, r1
    4c1e:	20 f4       	brcc	.+8      	; 0x4c28 <itoa+0xe>
    4c20:	42 30       	cpi	r20, 0x02	; 2
    4c22:	10 f0       	brcs	.+4      	; 0x4c28 <itoa+0xe>
    4c24:	0c 94 18 26 	jmp	0x4c30	; 0x4c30 <__itoa_ncheck>
    4c28:	fb 01       	movw	r30, r22
    4c2a:	10 82       	st	Z, r1
    4c2c:	cb 01       	movw	r24, r22
    4c2e:	08 95       	ret

00004c30 <__itoa_ncheck>:
    4c30:	bb 27       	eor	r27, r27
    4c32:	4a 30       	cpi	r20, 0x0A	; 10
    4c34:	31 f4       	brne	.+12     	; 0x4c42 <__itoa_ncheck+0x12>
    4c36:	99 23       	and	r25, r25
    4c38:	22 f4       	brpl	.+8      	; 0x4c42 <__itoa_ncheck+0x12>
    4c3a:	bd e2       	ldi	r27, 0x2D	; 45
    4c3c:	90 95       	com	r25
    4c3e:	81 95       	neg	r24
    4c40:	9f 4f       	sbci	r25, 0xFF	; 255
    4c42:	0c 94 24 26 	jmp	0x4c48	; 0x4c48 <__utoa_common>

00004c46 <__utoa_ncheck>:
    4c46:	bb 27       	eor	r27, r27

00004c48 <__utoa_common>:
    4c48:	fb 01       	movw	r30, r22
    4c4a:	55 27       	eor	r21, r21
    4c4c:	aa 27       	eor	r26, r26
    4c4e:	88 0f       	add	r24, r24
    4c50:	99 1f       	adc	r25, r25
    4c52:	aa 1f       	adc	r26, r26
    4c54:	a4 17       	cp	r26, r20
    4c56:	10 f0       	brcs	.+4      	; 0x4c5c <__utoa_common+0x14>
    4c58:	a4 1b       	sub	r26, r20
    4c5a:	83 95       	inc	r24
    4c5c:	50 51       	subi	r21, 0x10	; 16
    4c5e:	b9 f7       	brne	.-18     	; 0x4c4e <__utoa_common+0x6>
    4c60:	a0 5d       	subi	r26, 0xD0	; 208
    4c62:	aa 33       	cpi	r26, 0x3A	; 58
    4c64:	08 f0       	brcs	.+2      	; 0x4c68 <__utoa_common+0x20>
    4c66:	a9 5d       	subi	r26, 0xD9	; 217
    4c68:	a1 93       	st	Z+, r26
    4c6a:	00 97       	sbiw	r24, 0x00	; 0
    4c6c:	79 f7       	brne	.-34     	; 0x4c4c <__utoa_common+0x4>
    4c6e:	b1 11       	cpse	r27, r1
    4c70:	b1 93       	st	Z+, r27
    4c72:	11 92       	st	Z+, r1
    4c74:	cb 01       	movw	r24, r22
    4c76:	0c 94 3d 26 	jmp	0x4c7a	; 0x4c7a <strrev>

00004c7a <strrev>:
    4c7a:	dc 01       	movw	r26, r24
    4c7c:	fc 01       	movw	r30, r24
    4c7e:	67 2f       	mov	r22, r23
    4c80:	71 91       	ld	r23, Z+
    4c82:	77 23       	and	r23, r23
    4c84:	e1 f7       	brne	.-8      	; 0x4c7e <strrev+0x4>
    4c86:	32 97       	sbiw	r30, 0x02	; 2
    4c88:	04 c0       	rjmp	.+8      	; 0x4c92 <strrev+0x18>
    4c8a:	7c 91       	ld	r23, X
    4c8c:	6d 93       	st	X+, r22
    4c8e:	70 83       	st	Z, r23
    4c90:	62 91       	ld	r22, -Z
    4c92:	ae 17       	cp	r26, r30
    4c94:	bf 07       	cpc	r27, r31
    4c96:	c8 f3       	brcs	.-14     	; 0x4c8a <strrev+0x10>
    4c98:	08 95       	ret

00004c9a <_exit>:
    4c9a:	f8 94       	cli

00004c9c <__stop_program>:
    4c9c:	ff cf       	rjmp	.-2      	; 0x4c9c <__stop_program>
